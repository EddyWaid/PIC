%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: television_01.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: PC
%%CreationDate: 2/3/2014
%%BoundingBox: 0 0 800 842
%%HiResBoundingBox: 0 0 800 842
%%CropBox: 0 0 800 842
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="XMP Core 5.1.2">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
   xmp:CreatorTool="Adobe Illustrator CS6 (Windows)"
   xmp:CreateDate="2014-02-03T21:02:36+02:00"
   xmp:MetadataDate="2014-02-03T21:02:36+02:00"
   xmp:ModifyDate="2014-02-03T21:02:36+02:00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   dc:format="application/postscript"
   xmpMM:DocumentID="xmp.did:8B9996BFF28CE311B726948D7BF3C326"
   xmpMM:InstanceID="xmp.iid:8B9996BFF28CE311B726948D7BF3C326"
   xmpMM:OriginalDocumentID="xmp.did:C7C2B2E6A282E211BEEF994C8B7EF624">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="244"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FVk00MEZlm&#xA;kWKNacnchVFTQVJwEgc0xiSaCATzL5cdgiarZs56KLiIk/QGyHiw7x8246XKP4ZfIpirKyhlIKkV&#xA;BG4IOWNBDeKuxV2KuxV2KuxV2Kqc9zbW68p5UiU9C7BR+OKDIDmpRanpszhIruGRz0VJEY77dAcW&#xA;IyRPIhE4s3Yq7FXYq7FXYq7FXYqpTXVrCaTTJGf8tgv6zkJ5Yx5kBlGEjyDobu1mNIZklP8AkMG6&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpTPg:MaxPageSize
    stDim:w="800.000000"
    stDim:h="842.000000"
    stDim:unit="Points"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="14.999998"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000004"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="19.999998"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000000"
         xmpG:magenta="30.000002"
         xmpG:yellow="95.000000"
         xmpG:black="30.000002"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="45.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="70.000000"
         xmpG:magenta="14.999998"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000004"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="19.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="39.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="45.000000"
         xmpG:yellow="50.000000"
         xmpG:black="5.000001"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000004"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000000"
         xmpG:magenta="60.000004"
         xmpG:yellow="65.000000"
         xmpG:black="39.999996"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="39.999996"
         xmpG:yellow="65.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000002"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="60.000004"
         xmpG:yellow="80.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="65.000000"
         xmpG:yellow="90.000000"
         xmpG:black="35.000004"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="70.000000"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="80.000000"
         xmpG:black="70.000000"/>
        <rdf:li
         xmpG:swatchName="C=48 M=56 Y=50 K=53"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="48.000000"
         xmpG:magenta="56.000000"
         xmpG:yellow="50.400002"
         xmpG:black="52.799999"/>
        <rdf:li
         xmpG:swatchName="C=17 M=15 Y=26 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="16.941202"
         xmpG:magenta="15.058804"
         xmpG:yellow="26.039202"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="89.999405"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="79.998795"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="69.999702"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="59.999104"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="39.999401"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="29.998802"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="19.999701"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="9.999103"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="4.998803"/>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="75.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000004"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.003099"
         xmpG:black="0.003099"/>
        <rdf:li
         xmpG:swatchName="C=50 M=89 Y=40 K=22"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="49.803902"
         xmpG:magenta="88.627502"
         xmpG:yellow="39.607800"
         xmpG:black="21.960800"/>
        <rdf:li
         xmpG:swatchName="C=29 M=83 Y=12 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="28.627502"
         xmpG:magenta="83.137299"
         xmpG:yellow="11.764699"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=9 M=42 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="9.411800"
         xmpG:magenta="41.568600"
         xmpG:yellow="85.490196"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=36 M=66 Y=95 K=31"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="36.078400"
         xmpG:magenta="66.274498"
         xmpG:yellow="94.902000"
         xmpG:black="30.980396"/>
        <rdf:li
         xmpG:swatchName="C=7 M=11 Y=31 K=2"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="7.058799"
         xmpG:magenta="11.372500"
         xmpG:yellow="30.980396"
         xmpG:black="1.999998"/>
        <rdf:li
         xmpG:swatchName="C=36 M=66 Y=95 K=45"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="36.078400"
         xmpG:magenta="66.274498"
         xmpG:yellow="94.902000"
         xmpG:black="45.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:C7C2B2E6A282E211BEEF994C8B7EF624"
      stEvt:when="2013-03-01T21:04:54+02:00"
      stEvt:softwareAgent="Adobe Illustrator CS5"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8158BFABC185E311AE52A4A6D298C364"
      stEvt:when="2014-01-25T15:07:40+02:00"
      stEvt:softwareAgent="Adobe Illustrator CS5"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:309FA525D98CE311B726948D7BF3C326"
      stEvt:when="2014-02-03T15:43:21+02:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8B9996BFF28CE311B726948D7BF3C326"
      stEvt:when="2014-02-03T21:02:36+02:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:899996BFF28CE311B726948D7BF3C326"
    stRef:documentID="xmp.did:899996BFF28CE311B726948D7BF3C326"
    stRef:originalDocumentID="xmp.did:C7C2B2E6A282E211BEEF994C8B7EF624"/>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842 li
800 842 li
800 0 li
cp
clp
800 842 mo
0 842 li
0 0 li
800 0 li
800 842 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
763.731 817.153 mo
763.731 823.78 758.358 829.153 751.731 829.153 cv
48.2686 829.153 li
41.6411 829.153 36.2686 823.78 36.2686 817.153 cv
36.2686 806.655 li
36.2686 800.028 41.6411 794.655 48.2686 794.655 cv
751.731 794.655 li
758.358 794.655 763.731 800.028 763.731 806.655 cv
763.731 817.153 li
cp
0 0 0 .799988 cmyk
f
261.688 144.55 mo
261.688 78.582 208.21 25.1045 142.242 25.1045 cv
76.2739 25.1045 22.7959 78.582 22.7959 144.55 cv
22.7959 210.519 76.2739 263.997 142.242 263.997 cv
208.21 263.997 261.688 210.519 261.688 144.55 cv
cp
.109804 .882353 .847059 .019608 cmyk
f
261.688 144.55 mo
261.688 139.701 261.391 134.921 260.829 130.223 cv
214.467 83.8604 li
215.897 85.4258 li
220.238 90.1724 222.627 108.345 222.627 136.596 cv
222.627 177.994 219.809 195.378 219.689 196.098 cv
218.806 201.393 li
204.449 201.393 li
204.449 201.393 203.472 212.007 203.472 212.351 cv
203.472 212.694 203.815 213.592 202.073 213.592 cv
200.33 213.592 200.646 212.325 200.646 212.325 cv
198.271 201.393 li
198.271 201.393 li
200.462 211.476 li
200.462 211.69 li
93.5757 211.69 li
93.5757 211.478 li
93.3916 212.325 li
93.3916 212.325 93.7085 213.592 91.9653 213.592 cv
90.2227 213.592 90.5664 212.694 90.5664 212.351 cv
90.5664 212.007 89.5894 201.393 89.5894 201.393 cv
75.2476 201.393 li
137.759 263.904 li
139.247 263.959 140.74 263.997 142.242 263.997 cv
208.21 263.997 261.688 210.519 261.688 144.55 cv
cp
.109804 .882353 .847059 .12 cmyk
f
152.431 35.436 mo
182.786 35.436 210.491 46.7646 231.563 65.4185 cv
209.68 40.6963 177.713 25.1045 142.101 25.1045 cv
76.1328 25.1045 22.6543 78.582 22.6543 144.55 cv
22.6543 180.164 38.2461 212.13 62.9688 234.013 cv
44.3154 212.942 32.9858 185.236 32.9858 154.881 cv
32.9858 88.9146 86.4639 35.436 152.431 35.436 cv
cp
f
777.276 144.55 mo
777.276 78.582 723.799 25.1045 657.831 25.1045 cv
591.864 25.1045 538.385 78.582 538.385 144.55 cv
538.385 210.519 591.864 263.997 657.831 263.997 cv
723.799 263.997 777.276 210.519 777.276 144.55 cv
cp
.043137 .219608 .713726 0 cmyk
f
576.886 200.078 mo
728.692 200.078 li
727.319 204.882 li
578.26 204.882 li
576.886 200.078 li
cp
777.276 144.55 mo
777.276 140.201 777.038 135.908 776.585 131.68 cv
737.502 92.5972 li
737.502 194.128 li
572.784 194.128 li
573.47 194.813 li
737.502 194.813 li
740.248 199.39 li
570.036 199.39 li
570.033 199.393 li
631.779 261.139 li
640.166 263.005 648.882 263.997 657.831 263.997 cv
723.799 263.997 777.276 210.519 777.276 144.55 cv
cp
.07451 .364706 .839216 0 cmyk
f
662.554 24.6665 mo
662.034 25.186 li
662.395 25.1987 662.755 25.2114 663.114 25.2271 cv
662.554 24.6665 li
cp
f
663.124 25.2363 mo
663.114 25.2271 li
662.755 25.2114 662.395 25.1987 662.034 25.186 cv
662.028 25.1914 li
662.395 25.2046 662.759 25.2202 663.124 25.2363 cv
cp
f
668.021 35.436 mo
698.375 35.436 726.081 46.7646 747.152 65.4185 cv
725.269 40.6963 693.303 25.1045 657.689 25.1045 cv
591.723 25.1045 538.243 78.582 538.243 144.55 cv
538.243 180.164 553.835 212.13 578.559 234.013 cv
559.906 212.942 548.574 185.236 548.574 154.881 cv
548.574 88.9146 602.054 35.436 668.021 35.436 cv
cp
f
261.688 400.967 mo
261.688 334.999 208.21 281.521 142.242 281.521 cv
76.2739 281.521 22.7959 334.999 22.7959 400.967 cv
22.7959 466.935 76.2739 520.414 142.242 520.414 cv
208.21 520.414 261.688 466.935 261.688 400.967 cv
cp
.470588 .00784302 .32549 0 cmyk
f
261.688 400.967 mo
261.688 389.088 259.945 377.617 256.716 366.787 cv
230.527 340.598 li
231.374 341.593 231.887 342.879 231.887 344.285 cv
231.887 451.474 li
231.887 454.618 229.33 457.175 226.186 457.175 cv
222.472 457.175 li
222.811 457.285 223.05 457.48 223.05 457.714 cv
223.05 461.91 li
223.05 462.259 222.537 462.545 221.91 462.545 cv
72.2437 462.545 li
71.6167 462.545 71.1035 462.259 71.1035 461.91 cv
71.1035 457.714 li
71.1035 457.48 71.3428 457.285 71.6816 457.175 cv
67.9678 457.175 li
66.248 457.175 64.707 456.406 63.6611 455.198 cv
63.6201 455.239 li
127.94 519.559 li
132.63 520.118 137.401 520.414 142.242 520.414 cv
208.21 520.414 261.688 466.935 261.688 400.967 cv
cp
.627451 .094118 .443137 0 cmyk
f
205.709 378.51 mo
205.472 378.269 205.248 378.046 205.016 377.813 cv
205.015 377.813 205.015 377.813 205.015 377.813 cv
205.249 378.048 205.471 378.268 205.709 378.51 cv
cp
f
220.072 345.531 mo
220.06 345.531 li
220.099 345.566 220.138 345.598 220.176 345.635 cv
220.072 345.531 li
cp
f
215.184 352.601 mo
215.188 352.66 215.191 352.719 215.197 352.778 cv
215.191 352.719 215.188 352.66 215.184 352.601 cv
cp
f
215.187 350.453 mo
215.182 350.518 215.176 350.583 215.172 350.648 cv
215.176 350.583 215.182 350.518 215.187 350.453 cv
cp
f
152.431 291.854 mo
182.786 291.854 210.491 303.182 231.563 321.835 cv
209.68 297.113 177.713 281.521 142.101 281.521 cv
76.1328 281.521 22.6543 334.999 22.6543 400.967 cv
22.6543 436.581 38.2461 468.548 62.9688 490.429 cv
44.3154 469.359 32.9858 441.653 32.9858 411.298 cv
32.9858 345.331 86.4639 291.854 152.431 291.854 cv
cp
f
519.481 400.967 mo
519.481 334.999 466.004 281.521 400.037 281.521 cv
334.069 281.521 280.59 334.999 280.59 400.967 cv
280.59 466.935 334.069 520.414 400.037 520.414 cv
466.004 520.414 519.481 466.935 519.481 400.967 cv
cp
0 0 0 .799988 cmyk
f
519.481 400.967 mo
519.481 392.458 518.585 384.159 516.894 376.153 cv
473.467 332.727 li
474.033 333.382 474.39 334.226 474.39 335.155 cv
474.39 465.974 li
474.39 468.027 472.708 469.711 470.655 469.711 cv
332.36 469.711 li
331.365 469.711 330.463 469.312 329.792 468.672 cv
379.823 518.702 li
386.395 519.823 393.146 520.414 400.037 520.414 cv
466.004 520.414 519.481 466.935 519.481 400.967 cv
cp
0 0 0 .899994 cmyk
f
410.227 291.854 mo
440.58 291.854 468.286 303.182 489.357 321.835 cv
467.474 297.113 435.509 281.521 399.895 281.521 cv
333.927 281.521 280.449 334.999 280.449 400.967 cv
280.449 436.581 296.042 468.548 320.764 490.429 cv
302.11 469.359 290.781 441.653 290.781 411.298 cv
290.781 345.331 344.258 291.854 410.227 291.854 cv
cp
f
777.276 400.967 mo
777.276 334.999 723.799 281.521 657.831 281.521 cv
591.864 281.521 538.385 334.999 538.385 400.967 cv
538.385 466.935 591.864 520.414 657.831 520.414 cv
723.799 520.414 777.276 466.935 777.276 400.967 cv
cp
.109804 .882353 .847059 .019608 cmyk
f
777.276 400.967 mo
777.276 396.012 776.969 391.128 776.383 386.331 cv
737.115 347.063 li
742.209 352.901 744.377 368.059 744.3 396.625 cv
744.3 396.625 744.298 397.85 744.298 398.291 cv
744.298 398.708 744.298 399.191 744.298 399.734 cv
744.313 405.518 744.341 417.549 743.294 428.969 cv
741.84 444.815 739.011 453.23 734.119 456.25 cv
731.533 457.848 727.066 458.981 721.008 459.781 cv
721.803 459.781 li
721.803 459.781 721.14 465.027 719.188 467.109 cv
717.238 469.189 703.967 468.931 703.967 468.931 cv
657.917 468.931 li
611.862 468.931 li
611.862 468.931 598.592 469.189 596.642 467.109 cv
594.843 465.189 594.141 460.591 594.041 459.883 cv
587.581 459.079 582.846 457.916 580.15 456.25 cv
579.604 455.913 579.089 455.498 578.594 455.024 cv
643.076 519.507 li
647.912 520.103 652.835 520.414 657.831 520.414 cv
723.799 520.414 777.276 466.935 777.276 400.967 cv
cp
.109804 .882353 .847059 .12 cmyk
f
668.021 291.854 mo
698.375 291.854 726.081 303.182 747.152 321.835 cv
725.269 297.113 693.303 281.521 657.689 281.521 cv
591.723 281.521 538.243 334.999 538.243 400.967 cv
538.243 436.581 553.835 468.548 578.559 490.429 cv
559.906 469.359 548.574 441.653 548.574 411.298 cv
548.574 345.331 602.054 291.854 668.021 291.854 cv
cp
f
261.688 657.384 mo
261.688 591.417 208.21 537.938 142.242 537.938 cv
76.2739 537.938 22.7959 591.417 22.7959 657.384 cv
22.7959 723.353 76.2739 776.831 142.242 776.831 cv
208.21 776.831 261.688 723.353 261.688 657.384 cv
cp
.109804 .882353 .847059 .019608 cmyk
f
261.688 657.384 mo
261.688 650.455 261.09 643.667 259.958 637.062 cv
225.243 602.347 li
225.895 603.017 226.301 603.927 226.301 604.929 cv
226.301 707.997 li
226.301 710.042 224.63 711.713 222.586 711.713 cv
217.635 711.713 li
216.242 719.449 li
72.4731 719.449 li
70.6162 711.713 li
65.6646 711.713 li
64.6758 711.713 63.7793 711.315 63.1118 710.68 cv
128.467 776.036 li
132.988 776.555 137.583 776.831 142.242 776.831 cv
208.21 776.831 261.688 723.353 261.688 657.384 cv
cp
.109804 .882353 .847059 .12 cmyk
f
152.431 548.271 mo
182.786 548.271 210.491 559.6 231.563 578.252 cv
209.68 553.53 177.713 537.938 142.101 537.938 cv
76.1328 537.938 22.6543 591.417 22.6543 657.384 cv
22.6543 692.997 38.2461 724.965 62.9688 746.847 cv
44.3154 725.775 32.9858 698.07 32.9858 667.716 cv
32.9858 601.748 86.4639 548.271 152.431 548.271 cv
cp
f
519.481 657.384 mo
519.481 591.417 466.004 537.938 400.037 537.938 cv
334.069 537.938 280.59 591.417 280.59 657.384 cv
280.59 723.353 334.069 776.831 400.037 776.831 cv
466.004 776.831 519.481 723.353 519.481 657.384 cv
cp
.470588 .00784302 .32549 0 cmyk
f
519.481 657.384 mo
519.481 651.216 519.014 645.157 518.111 639.24 cv
475.856 596.986 li
476.347 597.491 476.652 598.177 476.652 598.932 cv
476.652 716.427 li
476.652 717.971 475.389 719.232 473.848 719.232 cv
327.941 719.232 li
327.211 719.232 326.549 718.943 326.049 718.482 cv
383.212 775.646 li
388.71 776.421 394.325 776.831 400.037 776.831 cv
466.004 776.831 519.481 723.353 519.481 657.384 cv
cp
.627451 .094118 .443137 0 cmyk
f
410.227 548.271 mo
440.58 548.271 468.286 559.6 489.357 578.252 cv
467.474 553.53 435.509 537.938 399.895 537.938 cv
333.927 537.938 280.449 591.417 280.449 657.384 cv
280.449 692.997 296.042 724.965 320.764 746.847 cv
302.11 725.775 290.781 698.07 290.781 667.716 cv
290.781 601.748 344.258 548.271 410.227 548.271 cv
cp
f
777.276 657.384 mo
777.276 591.417 723.799 537.938 657.831 537.938 cv
591.864 537.938 538.385 591.417 538.385 657.384 cv
538.385 723.353 591.864 776.831 657.831 776.831 cv
723.799 776.831 777.276 723.353 777.276 657.384 cv
cp
.043137 .219608 .713726 0 cmyk
f
774.083 629.855 mo
745.267 601.039 li
745.228 601.078 li
745.228 704.36 li
744.401 704.36 li
744.401 704.382 li
682.312 704.382 li
677.935 705.573 673.267 706.387 668.405 706.783 cv
668.405 710.199 li
707.388 710.199 li
707.765 710.199 708.333 710.365 708.648 710.566 cv
717.866 716.436 li
718.184 716.639 718.136 716.805 717.759 716.805 cv
605.757 716.805 li
605.382 716.805 605.343 716.654 605.672 716.473 cv
616.449 710.529 li
616.779 710.348 617.357 710.199 617.733 710.199 cv
655.117 710.199 li
655.117 706.783 li
650.254 706.387 645.587 705.573 641.212 704.382 cv
579.122 704.382 li
579.122 704.36 li
578.613 704.36 li
650.878 776.625 li
653.18 776.757 655.496 776.831 657.831 776.831 cv
723.799 776.831 777.276 723.353 777.276 657.384 cv
777.276 647.908 776.168 638.693 774.083 629.855 cv
cp
.07451 .364706 .839216 0 cmyk
f
668.021 548.271 mo
698.375 548.271 726.081 559.6 747.152 578.252 cv
725.269 553.53 693.303 537.938 657.689 537.938 cv
591.723 537.938 538.243 591.417 538.243 657.384 cv
538.243 692.997 553.835 724.965 578.559 746.847 cv
559.906 725.775 548.574 698.07 548.574 667.716 cv
548.574 601.748 602.054 548.271 668.021 548.271 cv
cp
f
519.481 144.55 mo
519.481 78.582 466.004 25.1045 400.036 25.1045 cv
334.068 25.1045 280.59 78.582 280.59 144.55 cv
280.59 210.519 334.068 263.997 400.036 263.997 cv
466.004 263.997 519.481 210.519 519.481 144.55 cv
cp
.470588 .00784302 .32549 0 cmyk
f
519.481 144.55 mo
519.481 138.083 518.96 131.739 517.972 125.551 cv
485.731 93.3115 li
485.801 93.4326 485.852 93.5659 485.852 93.7158 cv
485.852 199.753 li
485.852 200.209 485.478 200.584 485.022 200.584 cv
320.767 200.584 li
320.494 200.584 320.262 200.442 320.11 200.237 cv
320.078 200.269 li
382.524 262.715 li
388.24 263.555 394.086 263.997 400.036 263.997 cv
466.004 263.997 519.481 210.519 519.481 144.55 cv
cp
.627451 .094118 .443137 0 cmyk
f
410.227 35.436 mo
440.58 35.436 468.286 46.7646 489.357 65.4185 cv
467.474 40.6963 435.509 25.1045 399.895 25.1045 cv
333.927 25.1045 280.448 78.582 280.448 144.55 cv
280.448 180.164 296.041 212.13 320.763 234.013 cv
302.11 212.942 290.78 185.236 290.78 154.881 cv
290.78 88.9146 344.258 35.436 410.227 35.436 cv
cp
f
113.022 805.338 mo
121.664 805.338 li
121.664 808.619 li
119.824 808.619 li
119.824 817.621 li
121.624 817.621 li
121.624 815.78 li
125.605 815.78 li
125.605 820.901 li
113.022 820.901 li
113.022 817.621 li
114.222 817.621 li
114.222 808.619 li
113.022 808.619 li
113.022 805.338 li
cp
0 0 0 0 cmyk
f
136.324 816.141 mo
136.324 810.099 li
136.324 809.059 135.864 808.619 134.963 808.619 cv
134.063 808.619 133.604 809.059 133.604 810.099 cv
133.604 816.141 li
133.604 817.181 134.063 817.621 134.963 817.621 cv
135.864 817.621 136.324 817.181 136.324 816.141 cv
cp
134.963 821.182 mo
130.303 821.182 127.322 818.961 127.322 813.12 cv
127.322 807.278 130.303 805.058 134.963 805.058 cv
139.625 805.058 142.605 807.278 142.605 813.12 cv
142.605 818.961 139.625 821.182 134.963 821.182 cv
cp
f
156.204 805.338 mo
163.206 805.338 li
163.206 808.619 li
162.005 808.619 li
162.005 820.901 li
156.384 820.901 li
150.523 811.88 li
150.523 817.621 li
151.723 817.621 li
151.723 820.901 li
144.722 820.901 li
144.722 817.621 li
145.922 817.621 li
145.922 808.619 li
144.722 808.619 li
144.722 805.338 li
152.144 805.338 li
157.404 813.38 li
157.404 808.619 li
156.204 808.619 li
156.204 805.338 li
cp
f
173.044 812.92 mo
180.125 812.92 li
180.125 815.9 li
179.125 815.9 li
179.125 819.901 li
179.125 819.901 176.725 821.182 172.704 821.182 cv
167.903 821.182 164.922 818.961 164.922 813.12 cv
164.922 807.278 167.903 805.058 172.664 805.058 cv
176.725 805.058 179.125 806.358 179.125 806.358 cv
179.125 811.14 li
174.124 811.14 li
174.124 810.199 li
174.124 809.059 173.664 808.619 172.664 808.619 cv
171.664 808.619 171.204 809.059 171.204 810.199 cv
171.204 816.04 li
171.204 817.181 171.664 817.621 172.664 817.621 cv
173.664 817.621 174.124 817.181 174.124 816.04 cv
174.124 815.9 li
173.044 815.9 li
173.044 812.92 li
cp
f
197.043 816.521 mo
197.043 816.16 196.823 815.88 195.883 815.54 cv
191.922 814.06 190.001 813 190.001 809.879 cv
190.001 806.898 191.702 805.058 196.823 805.058 cv
200.684 805.058 202.665 806.338 202.665 806.338 cv
202.665 809.919 li
198.463 809.919 li
198.463 809.159 197.983 808.919 197.363 808.919 cv
196.483 808.919 196.123 809.119 196.123 809.679 cv
196.123 810.139 196.543 810.279 197.363 810.539 cv
200.464 811.539 203.044 812.6 203.044 816.04 cv
203.044 819.461 200.724 821.182 196.443 821.182 cv
192.602 821.182 190.182 820.102 190.182 820.102 cv
190.182 816.141 li
194.583 816.141 li
194.583 816.94 194.823 817.32 195.823 817.32 cv
196.703 817.32 197.043 817.041 197.043 816.521 cv
cp
f
214.144 805.338 mo
221.965 805.338 li
221.965 808.619 li
220.765 808.619 li
220.765 817.621 li
221.965 817.621 li
221.965 820.901 li
214.144 820.901 li
214.144 817.621 li
215.164 817.621 li
215.164 814.32 li
212.163 814.32 li
212.163 817.621 li
213.183 817.621 li
213.183 820.901 li
205.361 820.901 li
205.361 817.621 li
206.562 817.621 li
206.562 808.619 li
205.361 808.619 li
205.361 805.338 li
213.183 805.338 li
213.183 808.619 li
212.163 808.619 li
212.163 811.659 li
215.164 811.659 li
215.164 808.619 li
214.144 808.619 li
214.144 805.338 li
cp
f
230.603 813.899 mo
232.443 813.899 li
231.623 809.919 li
231.423 809.919 li
230.603 813.899 li
cp
232.003 817.621 mo
233.203 817.621 li
232.863 816.021 li
230.163 816.021 li
229.843 817.621 li
231.043 817.621 li
231.043 820.901 li
224.201 820.901 li
224.201 817.621 li
225.001 817.621 li
228.382 805.338 li
235.664 805.338 li
239.044 817.621 li
239.845 817.621 li
239.845 820.901 li
232.003 820.901 li
232.003 817.621 li
cp
f
250.083 817.621 mo
250.983 817.621 251.443 817.181 251.443 816.141 cv
251.443 810.099 li
251.443 809.059 250.943 808.619 250.083 808.619 cv
248.923 808.619 li
248.923 817.621 li
250.083 817.621 li
cp
242.121 805.338 mo
250.443 805.338 li
254.544 805.338 257.725 807.278 257.725 813.12 cv
257.725 818.961 254.544 820.901 250.443 820.901 cv
242.121 820.901 li
242.121 817.621 li
243.321 817.621 li
243.321 808.639 li
242.121 808.639 li
242.121 805.338 li
cp
f
269.083 816.141 mo
269.083 810.099 li
269.083 809.059 268.623 808.619 267.722 808.619 cv
266.822 808.619 266.362 809.059 266.362 810.099 cv
266.362 816.141 li
266.362 817.181 266.822 817.621 267.722 817.621 cv
268.623 817.621 269.083 817.181 269.083 816.141 cv
cp
267.722 821.182 mo
263.062 821.182 260.081 818.961 260.081 813.12 cv
260.081 807.278 263.062 805.058 267.722 805.058 cv
272.383 805.058 275.364 807.278 275.364 813.12 cv
275.364 818.961 272.383 821.182 267.722 821.182 cv
cp
f
280.501 820.901 mo
277.721 808.619 li
276.921 808.619 li
276.921 805.338 li
284.862 805.338 li
284.862 808.619 li
283.562 808.619 li
284.542 816.12 li
284.742 816.12 li
287.043 805.338 li
292.804 805.338 li
294.964 816.12 li
295.165 816.12 li
296.145 808.619 li
294.845 808.619 li
294.845 805.338 li
301.786 805.338 li
301.786 808.619 li
300.986 808.619 li
298.405 820.901 li
291.424 820.901 li
289.604 812.659 li
289.403 812.659 li
287.483 820.901 li
280.501 820.901 li
cp
f
319.382 811.899 mo
320.143 811.899 320.542 811.52 320.542 810.619 cv
320.542 809.899 li
320.542 808.999 320.143 808.619 319.382 808.619 cv
318.302 808.619 li
318.302 811.899 li
319.382 811.899 li
cp
318.302 817.621 mo
319.622 817.621 li
319.622 820.901 li
311.5 820.901 li
311.5 817.621 li
312.701 817.621 li
312.701 808.619 li
311.5 808.619 li
311.5 805.338 li
320.883 805.338 li
324.163 805.338 326.184 806.538 326.184 809.839 cv
326.184 811.6 325.463 813 324.104 813.52 cv
324.123 813.72 li
325.403 813.92 326.043 814.68 326.043 816.08 cv
326.043 817.621 li
326.984 817.621 li
326.984 820.901 li
320.643 820.901 li
320.643 816.2 li
320.643 814.6 319.962 814.34 318.302 814.34 cv
318.302 817.621 li
cp
f
338.603 808.619 mo
336.182 808.619 li
336.182 811.779 li
337.942 811.779 li
337.942 814.06 li
336.182 814.06 li
336.182 817.621 li
338.603 817.621 li
338.603 814.46 li
343.083 814.46 li
343.083 820.901 li
329.38 820.901 li
329.38 817.621 li
330.581 817.621 li
330.581 808.619 li
329.38 808.619 li
329.38 805.338 li
343.083 805.338 li
343.083 811.379 li
338.603 811.379 li
338.603 808.619 li
cp
f
345.479 805.338 mo
360.523 805.338 li
360.523 810.179 li
357.082 810.179 li
357.082 808.619 li
355.802 808.619 li
355.802 817.621 li
357.202 817.621 li
357.202 820.901 li
348.8 820.901 li
348.8 817.621 li
350.201 817.621 li
350.201 808.619 li
348.92 808.619 li
348.92 810.179 li
345.479 810.179 li
345.479 805.338 li
cp
f
370.562 811.899 mo
371.322 811.899 371.722 811.52 371.722 810.619 cv
371.722 809.899 li
371.722 808.999 371.322 808.619 370.562 808.619 cv
369.481 808.619 li
369.481 811.899 li
370.562 811.899 li
cp
369.481 817.621 mo
370.802 817.621 li
370.802 820.901 li
362.68 820.901 li
362.68 817.621 li
363.88 817.621 li
363.88 808.619 li
362.68 808.619 li
362.68 805.338 li
372.062 805.338 li
375.342 805.338 377.363 806.538 377.363 809.839 cv
377.363 811.6 376.643 813 375.282 813.52 cv
375.302 813.72 li
376.583 813.92 377.223 814.68 377.223 816.08 cv
377.223 817.621 li
378.163 817.621 li
378.163 820.901 li
371.822 820.901 li
371.822 816.2 li
371.822 814.6 371.142 814.34 369.481 814.34 cv
369.481 817.621 li
cp
f
388.941 816.141 mo
388.941 810.099 li
388.941 809.059 388.481 808.619 387.581 808.619 cv
386.681 808.619 386.221 809.059 386.221 810.099 cv
386.221 816.141 li
386.221 817.181 386.681 817.621 387.581 817.621 cv
388.481 817.621 388.941 817.181 388.941 816.141 cv
cp
387.581 821.182 mo
382.92 821.182 379.939 818.961 379.939 813.12 cv
379.939 807.278 382.92 805.058 387.581 805.058 cv
392.242 805.058 395.223 807.278 395.223 813.12 cv
395.223 818.961 392.242 821.182 387.581 821.182 cv
cp
f
405.02 805.338 mo
420.063 805.338 li
420.063 810.179 li
416.622 810.179 li
416.622 808.619 li
415.342 808.619 li
415.342 817.621 li
416.742 817.621 li
416.742 820.901 li
408.34 820.901 li
408.34 817.621 li
409.74 817.621 li
409.74 808.619 li
408.46 808.619 li
408.46 810.179 li
405.02 810.179 li
405.02 805.338 li
cp
f
431.441 808.619 mo
429.021 808.619 li
429.021 811.779 li
430.781 811.779 li
430.781 814.06 li
429.021 814.06 li
429.021 817.621 li
431.441 817.621 li
431.441 814.46 li
435.922 814.46 li
435.922 820.901 li
422.22 820.901 li
422.22 817.621 li
423.42 817.621 li
423.42 808.619 li
422.22 808.619 li
422.22 805.338 li
435.922 805.338 li
435.922 811.379 li
431.441 811.379 li
431.441 808.619 li
cp
f
438.52 805.338 mo
447.161 805.338 li
447.161 808.619 li
445.32 808.619 li
445.32 817.621 li
447.121 817.621 li
447.121 815.78 li
451.102 815.78 li
451.102 820.901 li
438.52 820.901 li
438.52 817.621 li
439.72 817.621 li
439.72 808.619 li
438.52 808.619 li
438.52 805.338 li
cp
f
462.761 808.619 mo
460.34 808.619 li
460.34 811.779 li
462.101 811.779 li
462.101 814.06 li
460.34 814.06 li
460.34 817.621 li
462.761 817.621 li
462.761 814.46 li
467.241 814.46 li
467.241 820.901 li
453.539 820.901 li
453.539 817.621 li
454.739 817.621 li
454.739 808.619 li
453.539 808.619 li
453.539 805.338 li
467.241 805.338 li
467.241 811.379 li
462.761 811.379 li
462.761 808.619 li
cp
f
477.24 808.619 mo
476.24 808.619 li
477.62 816.521 li
477.82 816.521 li
479.2 808.619 li
478.2 808.619 li
478.2 805.338 li
484.842 805.338 li
484.842 808.619 li
484.042 808.619 li
480.86 820.901 li
473.579 820.901 li
470.398 808.619 li
469.599 808.619 li
469.599 805.338 li
477.24 805.338 li
477.24 808.619 li
cp
f
486.918 805.338 mo
494.919 805.338 li
494.919 808.619 li
493.719 808.619 li
493.719 817.621 li
494.919 817.621 li
494.919 820.901 li
486.918 820.901 li
486.918 817.621 li
488.118 817.621 li
488.118 808.619 li
486.918 808.619 li
486.918 805.338 li
cp
f
504.279 816.521 mo
504.279 816.16 504.06 815.88 503.119 815.54 cv
499.158 814.06 497.238 813 497.238 809.879 cv
497.238 806.898 498.938 805.058 504.06 805.058 cv
507.92 805.058 509.9 806.338 509.9 806.338 cv
509.9 809.919 li
505.7 809.919 li
505.7 809.159 505.22 808.919 504.6 808.919 cv
503.72 808.919 503.359 809.119 503.359 809.679 cv
503.359 810.139 503.779 810.279 504.6 810.539 cv
507.7 811.539 510.28 812.6 510.28 816.04 cv
510.28 819.461 507.96 821.182 503.68 821.182 cv
499.839 821.182 497.418 820.102 497.418 820.102 cv
497.418 816.141 li
501.819 816.141 li
501.819 816.94 502.059 817.32 503.06 817.32 cv
503.939 817.32 504.279 817.041 504.279 816.521 cv
cp
f
512.598 805.338 mo
520.599 805.338 li
520.599 808.619 li
519.398 808.619 li
519.398 817.621 li
520.599 817.621 li
520.599 820.901 li
512.598 820.901 li
512.598 817.621 li
513.798 817.621 li
513.798 808.619 li
512.598 808.619 li
512.598 805.338 li
cp
f
531.68 816.141 mo
531.68 810.099 li
531.68 809.059 531.22 808.619 530.319 808.619 cv
529.419 808.619 528.959 809.059 528.959 810.099 cv
528.959 816.141 li
528.959 817.181 529.419 817.621 530.319 817.621 cv
531.22 817.621 531.68 817.181 531.68 816.141 cv
cp
530.319 821.182 mo
525.658 821.182 522.678 818.961 522.678 813.12 cv
522.678 807.278 525.658 805.058 530.319 805.058 cv
534.98 805.058 537.961 807.278 537.961 813.12 cv
537.961 818.961 534.98 821.182 530.319 821.182 cv
cp
f
551.561 805.338 mo
558.562 805.338 li
558.562 808.619 li
557.361 808.619 li
557.361 820.901 li
551.74 820.901 li
545.879 811.88 li
545.879 817.621 li
547.079 817.621 li
547.079 820.901 li
540.078 820.901 li
540.078 817.621 li
541.278 817.621 li
541.278 808.619 li
540.078 808.619 li
540.078 805.338 li
547.499 805.338 li
552.761 813.38 li
552.761 808.619 li
551.561 808.619 li
551.561 805.338 li
cp
f
568.357 805.338 mo
576.358 805.338 li
576.358 808.619 li
575.158 808.619 li
575.158 817.621 li
576.358 817.621 li
576.358 820.901 li
568.357 820.901 li
568.357 817.621 li
569.558 817.621 li
569.558 808.619 li
568.357 808.619 li
568.357 805.338 li
cp
f
587.399 814.52 mo
592.2 814.52 li
592.2 819.701 li
592.2 819.701 589.96 821.182 586.079 821.182 cv
581.378 821.182 578.397 818.961 578.397 813.12 cv
578.397 807.278 581.378 805.058 586.039 805.058 cv
589.96 805.058 592.2 806.538 592.2 806.538 cv
592.2 811.539 li
587.399 811.539 li
587.399 810.099 li
587.399 809.059 586.939 808.619 586.039 808.619 cv
585.139 808.619 584.679 809.059 584.679 810.099 cv
584.679 816.141 li
584.679 817.181 585.139 817.621 586.039 817.621 cv
586.939 817.621 587.399 817.181 587.399 816.141 cv
587.399 814.52 li
cp
f
603.799 816.141 mo
603.799 810.099 li
603.799 809.059 603.339 808.619 602.438 808.619 cv
601.538 808.619 601.078 809.059 601.078 810.099 cv
601.078 816.141 li
601.078 817.181 601.538 817.621 602.438 817.621 cv
603.339 817.621 603.799 817.181 603.799 816.141 cv
cp
602.438 821.182 mo
597.777 821.182 594.797 818.961 594.797 813.12 cv
594.797 807.278 597.777 805.058 602.438 805.058 cv
607.1 805.058 610.08 807.278 610.08 813.12 cv
610.08 818.961 607.1 821.182 602.438 821.182 cv
cp
f
623.68 805.338 mo
630.681 805.338 li
630.681 808.619 li
629.48 808.619 li
629.48 820.901 li
623.859 820.901 li
617.998 811.88 li
617.998 817.621 li
619.198 817.621 li
619.198 820.901 li
612.197 820.901 li
612.197 817.621 li
613.397 817.621 li
613.397 808.619 li
612.197 808.619 li
612.197 805.338 li
619.618 805.338 li
624.88 813.38 li
624.88 808.619 li
623.68 808.619 li
623.68 805.338 li
cp
f
647.478 816.521 mo
647.478 816.16 647.258 815.88 646.317 815.54 cv
642.356 814.06 640.437 813 640.437 809.879 cv
640.437 806.898 642.137 805.058 647.258 805.058 cv
651.118 805.058 653.099 806.338 653.099 806.338 cv
653.099 809.919 li
648.898 809.919 li
648.898 809.159 648.418 808.919 647.798 808.919 cv
646.918 808.919 646.558 809.119 646.558 809.679 cv
646.558 810.139 646.978 810.279 647.798 810.539 cv
650.898 811.539 653.479 812.6 653.479 816.04 cv
653.479 819.461 651.158 821.182 646.878 821.182 cv
643.037 821.182 640.616 820.102 640.616 820.102 cv
640.616 816.141 li
645.018 816.141 li
645.018 816.94 645.257 817.32 646.258 817.32 cv
647.138 817.32 647.478 817.041 647.478 816.521 cv
cp
f
665.058 808.619 mo
662.637 808.619 li
662.637 811.779 li
664.397 811.779 li
664.397 814.06 li
662.637 814.06 li
662.637 817.621 li
665.058 817.621 li
665.058 814.46 li
669.538 814.46 li
669.538 820.901 li
655.836 820.901 li
655.836 817.621 li
657.036 817.621 li
657.036 808.619 li
655.836 808.619 li
655.836 805.338 li
669.538 805.338 li
669.538 811.379 li
665.058 811.379 li
665.058 808.619 li
cp
f
671.936 805.338 mo
686.979 805.338 li
686.979 810.179 li
683.538 810.179 li
683.538 808.619 li
682.258 808.619 li
682.258 817.621 li
683.658 817.621 li
683.658 820.901 li
675.256 820.901 li
675.256 817.621 li
676.656 817.621 li
676.656 808.619 li
675.376 808.619 li
675.376 810.179 li
671.936 810.179 li
671.936 805.338 li
cp
f
89.5894 201.393 mo
95.7676 201.393 li
93.3916 212.325 li
93.3916 212.325 93.7085 213.592 91.9653 213.592 cv
90.2227 213.592 90.5664 212.694 90.5664 212.351 cv
90.5664 212.007 89.5894 201.393 89.5894 201.393 cv
cp
0 0 0 .799988 cmyk
f
204.449 201.393 mo
198.271 201.393 li
200.646 212.325 li
200.646 212.325 200.33 213.592 202.073 213.592 cv
203.815 213.592 203.472 212.694 203.472 212.351 cv
203.472 212.007 204.449 201.393 204.449 201.393 cv
cp
f
95.7666 201.393 mo
93.5757 211.473 li
93.5757 211.69 li
200.462 211.69 li
200.462 211.476 li
198.271 201.393 li
95.7666 201.393 li
cp
0 0 0 0 cmyk
f
104.786 203.294 mo
104.786 201.281 103.154 199.65 101.143 199.65 cv
99.1304 199.65 97.4995 201.281 97.4995 203.294 cv
97.4995 205.307 99.1304 206.938 101.143 206.938 cv
103.154 206.938 104.786 205.307 104.786 203.294 cv
cp
.07451 .364706 .839216 0 cmyk
f
114.292 203.294 mo
114.292 201.281 112.661 199.65 110.649 199.65 cv
108.636 199.65 107.004 201.281 107.004 203.294 cv
107.004 205.307 108.636 206.938 110.649 206.938 cv
112.661 206.938 114.292 205.307 114.292 203.294 cv
cp
f
123.798 203.294 mo
123.798 201.281 122.166 199.65 120.154 199.65 cv
118.142 199.65 116.511 201.281 116.511 203.294 cv
116.511 205.307 118.142 206.938 120.154 206.938 cv
122.166 206.938 123.798 205.307 123.798 203.294 cv
cp
f
177.663 203.294 mo
177.663 201.281 176.031 199.65 174.02 199.65 cv
172.007 199.65 170.376 201.281 170.376 203.294 cv
170.376 205.307 172.007 206.938 174.02 206.938 cv
176.031 206.938 177.663 205.307 177.663 203.294 cv
cp
f
187.169 203.294 mo
187.169 201.281 185.538 199.65 183.525 199.65 cv
181.512 199.65 179.882 201.281 179.882 203.294 cv
179.882 205.307 181.512 206.938 183.525 206.938 cv
185.538 206.938 187.169 205.307 187.169 203.294 cv
cp
f
196.675 203.294 mo
196.675 201.281 195.043 199.65 193.032 199.65 cv
191.019 199.65 189.387 201.281 189.387 203.294 cv
189.387 205.307 191.019 206.938 193.032 206.938 cv
195.043 206.938 196.675 205.307 196.675 203.294 cv
cp
f
167.772 202.661 mo
126.265 202.661 li
126.265 210.107 li
167.772 210.107 li
167.772 202.661 li
cp
0 0 0 .799988 cmyk
f
149.256 206.79 mo
149.256 207.138 148.972 207.423 148.622 207.423 cv
145.416 207.423 li
145.068 207.423 144.782 207.138 144.782 206.79 cv
144.782 205.68 li
144.782 205.332 145.068 205.046 145.416 205.046 cv
148.622 205.046 li
148.972 205.046 149.256 205.332 149.256 205.68 cv
149.256 206.79 li
cp
0 0 0 0 cmyk
f
154.642 206.79 mo
154.642 207.138 154.358 207.423 154.008 207.423 cv
150.803 207.423 li
150.454 207.423 150.169 207.138 150.169 206.79 cv
150.169 205.68 li
150.169 205.332 150.454 205.046 150.803 205.046 cv
154.008 205.046 li
154.358 205.046 154.642 205.332 154.642 205.68 cv
154.642 206.79 li
cp
f
159.712 206.79 mo
159.712 207.138 159.427 207.423 159.079 207.423 cv
155.873 207.423 li
155.523 207.423 155.239 207.138 155.239 206.79 cv
155.239 205.68 li
155.239 205.332 155.523 205.046 155.873 205.046 cv
159.079 205.046 li
159.427 205.046 159.712 205.332 159.712 205.68 cv
159.712 206.79 li
cp
f
164.782 206.79 mo
164.782 207.138 164.497 207.423 164.148 207.423 cv
160.941 207.423 li
160.593 207.423 160.308 207.138 160.308 206.79 cv
160.308 205.68 li
160.308 205.332 160.593 205.046 160.941 205.046 cv
164.148 205.046 li
164.497 205.046 164.782 205.332 164.782 205.68 cv
164.782 206.79 li
cp
f
144.187 206.79 mo
144.187 207.138 143.901 207.423 143.552 207.423 cv
140.346 207.423 li
139.998 207.423 139.713 207.138 139.713 206.79 cv
139.713 205.68 li
139.713 205.332 139.998 205.046 140.346 205.046 cv
143.552 205.046 li
143.901 205.046 144.187 205.332 144.187 205.68 cv
144.187 206.79 li
cp
f
139.116 206.79 mo
139.116 207.138 138.832 207.423 138.483 207.423 cv
135.277 207.423 li
134.928 207.423 134.643 207.138 134.643 206.79 cv
134.643 205.68 li
134.643 205.332 134.928 205.046 135.277 205.046 cv
138.483 205.046 li
138.832 205.046 139.116 205.332 139.116 205.68 cv
139.116 206.79 li
cp
f
134.047 206.79 mo
134.047 207.138 133.762 207.423 133.414 207.423 cv
130.207 207.423 li
129.858 207.423 129.573 207.138 129.573 206.79 cv
129.573 205.68 li
129.573 205.332 129.858 205.046 130.207 205.046 cv
133.414 205.046 li
133.762 205.046 134.047 205.332 134.047 205.68 cv
134.047 206.79 li
cp
f
75.2314 201.393 mo
74.3491 196.098 li
74.229 195.378 71.4106 177.994 71.4106 136.596 cv
71.4106 108.345 73.8018 90.1724 78.1411 85.4258 cv
79.6807 83.7412 li
81.9409 83.4253 li
82.9775 83.2808 107.778 79.8794 147.019 79.8794 cv
186.26 79.8794 211.06 83.2808 212.097 83.4253 cv
214.358 83.7412 li
215.897 85.4258 li
220.238 90.1724 222.627 108.345 222.627 136.596 cv
222.627 177.994 219.809 195.378 219.689 196.098 cv
218.806 201.393 li
75.2314 201.393 li
cp
0 0 0 .799988 cmyk
f
211.221 89.7017 mo
211.221 89.7017 186.271 86.2158 147.019 86.2158 cv
107.767 86.2158 82.8179 89.7017 82.8179 89.7017 cv
82.8179 89.7017 77.7485 95.2466 77.7485 136.596 cv
77.7485 177.946 80.5996 195.057 80.5996 195.057 cv
147.019 195.057 li
213.438 195.057 li
213.438 195.057 216.29 177.946 216.29 136.596 cv
216.29 95.2466 211.221 89.7017 211.221 89.7017 cv
cp
0 0 0 0 cmyk
f
202.982 116 mo
197.29 93.2319 173.608 95.3955 147.019 95.4048 cv
120.429 95.3955 96.748 93.2319 91.0552 116 cv
85.3521 138.814 88.1377 158.665 96.4434 173.668 cv
102.97 185.46 146.745 185.078 147.019 185.076 cv
147.294 185.078 191.067 185.46 197.596 173.668 cv
205.9 158.665 208.685 138.814 202.982 116 cv
cp
.470588 .00784302 .32549 0 cmyk
f
474.39 465.974 mo
474.39 468.027 472.708 469.711 470.655 469.711 cv
332.36 469.711 li
330.304 469.711 328.622 468.027 328.622 465.974 cv
328.622 335.155 li
328.622 333.099 330.304 331.417 332.36 331.417 cv
470.655 331.417 li
472.708 331.417 474.39 333.099 474.39 335.155 cv
474.39 465.974 li
cp
0 .315 .765 0 cmyk
f
471.401 462.983 mo
471.401 465.038 469.718 466.723 467.664 466.723 cv
335.351 466.723 li
333.293 466.723 331.613 465.038 331.613 462.983 cv
331.613 447.658 li
331.613 445.604 333.293 443.922 335.351 443.922 cv
467.664 443.922 li
469.718 443.922 471.401 445.604 471.401 447.658 cv
471.401 462.983 li
cp
0 0 0 0 cmyk
f
465.069 455.026 mo
465.069 449.854 460.876 445.66 455.705 445.66 cv
450.528 445.66 446.337 449.854 446.337 455.026 cv
446.337 460.199 450.528 464.394 455.705 464.394 cv
460.876 464.394 465.069 460.199 465.069 455.026 cv
cp
0 0 0 .899994 cmyk
f
460.925 455.026 mo
460.925 452.141 458.589 449.801 455.705 449.801 cv
452.817 449.801 450.478 452.141 450.478 455.026 cv
450.478 457.912 452.817 460.25 455.705 460.25 cv
458.589 460.25 460.925 457.912 460.925 455.026 cv
cp
0 0 0 0 cmyk
f
401.382 441.207 mo
382.264 441.207 369.056 440.277 359.809 438.284 cv
351.332 436.455 345.954 433.701 342.371 429.355 cv
338.717 424.931 336.986 404.795 336.922 387.959 cv
336.884 377.993 337.393 368.914 338.391 361.702 cv
339.57 353.194 341.386 347.741 343.789 345.5 cv
348.015 341.554 357.236 338.786 371.194 337.271 cv
379.674 336.35 389.548 335.902 401.382 335.902 cv
413.218 335.902 423.089 336.35 431.569 337.271 cv
445.529 338.786 454.751 341.554 458.978 345.5 cv
461.379 347.741 463.193 353.194 464.374 361.702 cv
465.372 368.914 465.878 377.993 465.841 387.959 cv
465.778 404.795 464.046 424.931 460.396 429.355 cv
456.811 433.701 451.432 436.455 442.956 438.284 cv
433.708 440.277 420.499 441.207 401.382 441.207 cv
cp
f
458.126 346.41 mo
448.783 337.689 415.213 337.149 401.382 337.149 cv
387.554 337.149 353.98 337.689 344.639 346.41 cv
335.296 355.129 337.165 421.09 343.33 428.563 cv
349.499 436.037 362.456 439.963 401.382 439.963 cv
440.308 439.963 453.267 436.037 459.437 428.563 cv
465.603 421.09 467.47 355.129 458.126 346.41 cv
cp
0 0 0 .899994 cmyk
f
454.662 348.264 mo
449.691 344.04 416.475 343.038 401.507 343.032 cv
401.507 343.032 li
401.485 343.032 401.466 343.032 401.443 343.032 cv
401.423 343.032 401.403 343.032 401.382 343.032 cv
401.382 343.032 li
386.414 343.038 353.197 344.04 348.228 348.264 cv
343.245 352.5 342.996 385.37 342.996 388.555 cv
342.996 391.743 343.121 423.51 348.727 429.115 cv
354.216 434.604 399.561 434.241 401.443 434.223 cv
403.331 434.241 448.675 434.604 454.162 429.115 cv
459.769 423.51 459.895 391.743 459.895 388.555 cv
459.895 385.37 459.644 352.5 454.662 348.264 cv
cp
.470588 .00784302 .32549 0 cmyk
f
419.505 454.278 mo
419.505 452.936 418.415 451.85 417.075 451.85 cv
415.735 451.85 414.646 452.936 414.646 454.278 cv
414.646 455.62 415.735 456.708 417.075 456.708 cv
418.415 456.708 419.505 455.62 419.505 454.278 cv
cp
0 0 0 .899994 cmyk
f
408.29 454.278 mo
408.29 452.936 407.204 451.85 405.864 451.85 cv
404.522 451.85 403.435 452.936 403.435 454.278 cv
403.435 455.62 404.522 456.708 405.864 456.708 cv
407.204 456.708 408.29 455.62 408.29 454.278 cv
cp
0 .315 .765 0 cmyk
f
402.063 454.278 mo
402.063 452.936 400.978 451.85 399.636 451.85 cv
398.294 451.85 397.207 452.936 397.207 454.278 cv
397.207 455.62 398.294 456.708 399.636 456.708 cv
400.978 456.708 402.063 455.62 402.063 454.278 cv
cp
f
395.835 454.278 mo
395.835 452.936 394.748 451.85 393.405 451.85 cv
392.065 451.85 390.978 452.936 390.978 454.278 cv
390.978 455.62 392.065 456.708 393.405 456.708 cv
394.748 456.708 395.835 455.62 395.835 454.278 cv
cp
f
389.605 454.278 mo
389.605 452.936 388.52 451.85 387.177 451.85 cv
385.836 451.85 384.75 452.936 384.75 454.278 cv
384.75 455.62 385.836 456.708 387.177 456.708 cv
388.52 456.708 389.605 455.62 389.605 454.278 cv
cp
f
429.47 454.278 mo
429.47 452.936 428.382 451.85 427.042 451.85 cv
425.7 451.85 424.612 452.936 424.612 454.278 cv
424.612 455.62 425.7 456.708 427.042 456.708 cv
428.382 456.708 429.47 455.62 429.47 454.278 cv
cp
0 0 0 .899994 cmyk
f
440.683 454.278 mo
440.683 452.936 439.595 451.85 438.255 451.85 cv
436.915 451.85 435.824 452.936 435.824 454.278 cv
435.824 455.62 436.915 456.708 438.255 456.708 cv
439.595 456.708 440.683 455.62 440.683 454.278 cv
cp
f
471.401 334.407 mo
471.401 331.417 li
331.613 331.417 li
331.613 334.407 li
471.401 334.407 li
cp
0 0 0 0 cmyk
f
341.406 463.001 mo
340.658 463.001 li
340.658 446.307 li
341.406 446.307 li
341.406 463.001 li
cp
0 0 0 .899994 cmyk
f
342.652 463.001 mo
341.903 463.001 li
341.903 446.307 li
342.652 446.307 li
342.652 463.001 li
cp
f
343.898 463.001 mo
343.15 463.001 li
343.15 446.307 li
343.898 446.307 li
343.898 463.001 li
cp
f
345.143 463.001 mo
344.396 463.001 li
344.396 446.307 li
345.143 446.307 li
345.143 463.001 li
cp
f
346.389 463.001 mo
345.641 463.001 li
345.641 446.307 li
346.389 446.307 li
346.389 463.001 li
cp
f
347.635 463.001 mo
346.887 463.001 li
346.887 446.307 li
347.635 446.307 li
347.635 463.001 li
cp
f
348.88 463.001 mo
348.133 463.001 li
348.133 446.307 li
348.88 446.307 li
348.88 463.001 li
cp
f
350.127 463.001 mo
349.378 463.001 li
349.378 446.307 li
350.127 446.307 li
350.127 463.001 li
cp
f
351.373 463.001 mo
350.624 463.001 li
350.624 446.307 li
351.373 446.307 li
351.373 463.001 li
cp
f
352.616 463.001 mo
351.871 463.001 li
351.871 446.307 li
352.616 446.307 li
352.616 463.001 li
cp
f
353.863 463.001 mo
353.114 463.001 li
353.114 446.307 li
353.863 446.307 li
353.863 463.001 li
cp
f
355.109 463.001 mo
354.362 463.001 li
354.362 446.307 li
355.109 446.307 li
355.109 463.001 li
cp
f
356.354 463.001 mo
355.608 463.001 li
355.608 446.307 li
356.354 446.307 li
356.354 463.001 li
cp
f
357.6 463.001 mo
356.852 463.001 li
356.852 446.307 li
357.6 446.307 li
357.6 463.001 li
cp
f
358.846 463.001 mo
358.099 463.001 li
358.099 446.307 li
358.846 446.307 li
358.846 463.001 li
cp
f
360.094 463.001 mo
359.346 463.001 li
359.346 446.307 li
360.094 446.307 li
360.094 463.001 li
cp
f
361.338 463.001 mo
360.589 463.001 li
360.589 446.307 li
361.338 446.307 li
361.338 463.001 li
cp
f
362.583 463.001 mo
361.835 463.001 li
361.835 446.307 li
362.583 446.307 li
362.583 463.001 li
cp
f
363.831 463.001 mo
363.081 463.001 li
363.081 446.307 li
363.831 446.307 li
363.831 463.001 li
cp
f
365.076 463.001 mo
364.327 463.001 li
364.327 446.307 li
365.076 446.307 li
365.076 463.001 li
cp
f
366.321 463.001 mo
365.573 463.001 li
365.573 446.307 li
366.321 446.307 li
366.321 463.001 li
cp
f
367.568 463.001 mo
366.819 463.001 li
366.819 446.307 li
367.568 446.307 li
367.568 463.001 li
cp
f
368.814 463.001 mo
368.065 463.001 li
368.065 446.307 li
368.814 446.307 li
368.814 463.001 li
cp
f
370.059 463.001 mo
369.312 463.001 li
369.312 446.307 li
370.059 446.307 li
370.059 463.001 li
cp
f
371.305 463.001 mo
370.557 463.001 li
370.557 446.307 li
371.305 446.307 li
371.305 463.001 li
cp
f
372.551 463.001 mo
371.802 463.001 li
371.802 446.307 li
372.551 446.307 li
372.551 463.001 li
cp
f
373.795 463.001 mo
373.049 463.001 li
373.049 446.307 li
373.795 446.307 li
373.795 463.001 li
cp
f
375.041 463.001 mo
374.293 463.001 li
374.293 446.307 li
375.041 446.307 li
375.041 463.001 li
cp
f
376.288 463.001 mo
375.54 463.001 li
375.54 446.307 li
376.288 446.307 li
376.288 463.001 li
cp
f
377.532 463.001 mo
376.786 463.001 li
376.786 446.307 li
377.532 446.307 li
377.532 463.001 li
cp
f
378.778 463.001 mo
378.03 463.001 li
378.03 446.307 li
378.778 446.307 li
378.778 463.001 li
cp
f
737.502 194.128 mo
572.768 194.128 li
572.768 92.5415 li
737.502 92.5415 li
737.502 194.128 li
cp
0 0 0 .799988 cmyk
f
734.298 189.095 mo
734.298 189.849 733.682 190.465 732.925 190.465 cv
707.072 190.465 li
706.315 190.465 705.699 189.849 705.699 189.095 cv
705.699 101.465 li
705.699 100.712 706.315 100.093 707.072 100.093 cv
732.925 100.093 li
733.682 100.093 734.298 100.712 734.298 101.465 cv
734.298 189.095 li
cp
0 0 0 0 cmyk
f
734.298 185.662 mo
705.699 185.662 li
705.699 145.28 li
734.298 145.28 li
734.298 185.662 li
cp
0 0 0 .1 cmyk
f
701.581 188.407 mo
701.581 189.541 700.654 190.465 699.521 190.465 cv
580.319 190.465 li
579.187 190.465 578.26 189.541 578.26 188.407 cv
578.26 101.009 li
578.26 99.8755 579.187 98.9502 580.319 98.9502 cv
699.521 98.9502 li
700.654 98.9502 701.581 99.8755 701.581 101.009 cv
701.581 188.407 li
cp
0 0 0 0 cmyk
f
694.974 116.406 mo
694.974 116.406 694.115 108.256 692.571 106.882 cv
691.028 105.51 683.962 105.681 683.962 105.681 cv
683.962 105.681 655.364 104.079 639.92 104.079 cv
639.92 104.079 li
639.92 104.079 li
639.92 104.079 li
639.92 104.079 li
624.476 104.079 595.876 105.681 595.876 105.681 cv
595.876 105.681 588.812 105.51 587.269 106.882 cv
585.724 108.256 584.867 116.406 584.867 116.406 cv
584.867 116.406 583.063 136.054 583.063 144.806 cv
583.063 153.557 583.921 171.917 583.921 171.917 cv
583.921 171.917 583.921 178.094 585.467 180.498 cv
587.009 182.9 593.187 183.244 593.187 183.244 cv
593.187 183.244 632.425 184.959 639.92 184.959 cv
639.92 184.959 li
639.92 184.959 li
639.92 184.959 li
639.92 184.959 li
647.414 184.959 686.651 183.244 686.651 183.244 cv
686.651 183.244 692.827 182.9 694.374 180.498 cv
695.917 178.094 695.917 171.917 695.917 171.917 cv
695.917 171.917 696.776 153.557 696.776 144.806 cv
696.776 136.054 694.974 116.406 694.974 116.406 cv
cp
.470588 .00784302 .32549 0 cmyk
f
740.248 199.39 mo
570.021 199.39 li
572.768 194.813 li
737.502 194.813 li
740.248 199.39 li
cp
0 0 0 .799988 cmyk
f
727.319 204.882 mo
578.26 204.882 li
576.886 200.078 li
728.692 200.078 li
727.319 204.882 li
cp
f
732.985 141.505 mo
706.56 141.505 li
706.56 144.021 li
732.985 144.021 li
732.985 141.505 li
cp
f
732.985 137.846 mo
706.56 137.846 li
706.56 140.362 li
732.985 140.362 li
732.985 137.846 li
cp
f
732.985 134.185 mo
706.56 134.185 li
706.56 136.701 li
732.985 136.701 li
732.985 134.185 li
cp
f
732.985 130.524 mo
706.56 130.524 li
706.56 133.041 li
732.985 133.041 li
732.985 130.524 li
cp
f
732.985 126.863 mo
706.56 126.863 li
706.56 129.379 li
732.985 129.379 li
732.985 126.863 li
cp
f
732.985 123.202 mo
706.56 123.202 li
706.56 125.719 li
732.985 125.719 li
732.985 123.202 li
cp
f
732.985 119.542 mo
706.56 119.542 li
706.56 122.06 li
732.985 122.06 li
732.985 119.542 li
cp
f
732.985 115.882 mo
706.56 115.882 li
706.56 118.398 li
732.985 118.398 li
732.985 115.882 li
cp
f
732.985 112.221 mo
706.56 112.221 li
706.56 114.737 li
732.985 114.737 li
732.985 112.221 li
cp
f
732.985 108.561 mo
706.56 108.561 li
706.56 111.077 li
732.985 111.077 li
732.985 108.561 li
cp
f
732.985 104.901 mo
706.56 104.901 li
706.56 107.417 li
732.985 107.417 li
732.985 104.901 li
cp
f
732.985 101.24 mo
706.56 101.24 li
706.56 103.756 li
732.985 103.756 li
732.985 101.24 li
cp
f
727.526 151.601 mo
725.128 147.443 719.81 146.017 715.653 148.418 cv
711.493 150.819 710.069 156.135 712.47 160.294 cv
714.87 164.454 720.187 165.877 724.345 163.475 cv
728.505 161.075 729.929 155.758 727.526 151.601 cv
cp
f
723.315 161.693 mo
720.147 163.522 716.083 162.433 714.251 159.264 cv
712.423 156.097 713.513 152.031 716.68 150.202 cv
719.849 148.372 723.914 149.461 725.743 152.63 cv
727.575 155.799 726.485 159.864 723.315 161.693 cv
cp
0 0 0 0 cmyk
f
726.996 153.989 mo
714.802 161.026 li
713.001 157.907 li
725.192 150.867 li
726.996 153.989 li
cp
0 0 0 .799988 cmyk
f
727.526 170.905 mo
725.128 166.747 719.81 165.322 715.653 167.723 cv
711.493 170.123 710.069 175.441 712.47 179.599 cv
714.87 183.757 720.187 185.182 724.345 182.781 cv
728.505 180.38 729.929 175.063 727.526 170.905 cv
cp
f
723.315 180.998 mo
720.147 182.827 716.083 181.738 714.251 178.57 cv
712.423 175.401 713.513 171.335 716.68 169.505 cv
719.849 167.678 723.914 168.766 725.743 171.935 cv
727.575 175.104 726.485 179.168 723.315 180.998 cv
cp
0 0 0 0 cmyk
f
726.996 173.293 mo
714.802 180.333 li
713.001 177.211 li
725.192 170.173 li
726.996 173.293 li
cp
0 0 0 .799988 cmyk
f
657.917 459.781 mo
657.917 459.781 li
594.027 459.781 li
594.027 459.781 594.69 465.027 596.642 467.109 cv
598.592 469.189 611.862 468.931 611.862 468.931 cv
657.917 468.931 li
657.917 468.931 li
703.967 468.931 li
703.967 468.931 717.238 469.189 719.188 467.109 cv
721.14 465.027 721.803 459.781 721.803 459.781 cv
657.917 459.781 li
cp
0 0 0 0 cmyk
f
675.75 461.553 mo
672.295 461.553 668.907 461.544 665.659 461.535 cv
665.523 461.533 li
662.593 461.525 659.778 461.515 657.134 461.515 cv
654.493 461.515 651.677 461.525 648.748 461.533 cv
648.612 461.535 li
645.364 461.544 641.975 461.553 638.519 461.553 cv
608.64 461.553 587.276 460.653 580.15 456.25 cv
575.259 453.23 572.432 444.815 570.976 428.969 cv
569.931 417.551 569.956 405.518 569.97 399.735 cv
569.972 399.191 569.972 398.708 569.972 398.291 cv
569.972 397.816 569.972 397.272 569.97 396.667 cv
569.97 396.625 li
569.886 365.583 572.45 350.366 578.542 345.746 cv
581.216 343.716 588.595 340.826 621.646 339.168 cv
639.75 338.259 656.974 338.188 657.134 338.188 cv
657.294 338.188 674.519 338.259 692.622 339.168 cv
725.673 340.826 733.052 343.716 735.728 345.746 cv
741.819 350.366 744.384 365.583 744.3 396.625 cv
744.3 396.625 744.298 397.85 744.298 398.291 cv
744.298 398.708 744.298 399.191 744.298 399.734 cv
744.313 405.518 744.341 417.549 743.294 428.969 cv
741.84 444.815 739.011 453.23 734.119 456.25 cv
726.991 460.653 705.632 461.553 675.755 461.553 cv
675.75 461.553 li
cp
f
675.75 458.433 mo
672.3 458.433 668.913 458.422 665.671 458.41 cv
662.685 458.402 659.822 458.394 657.134 458.394 cv
654.449 458.394 651.585 458.402 648.603 458.41 cv
645.357 458.422 641.972 458.433 638.519 458.433 cv
613.124 458.433 588.675 457.846 581.79 453.594 cv
577.924 451.205 575.404 443.057 574.087 428.685 cv
573.052 417.413 573.077 405.478 573.091 399.741 cv
573.095 399.197 573.095 398.71 573.095 398.291 cv
573.095 397.802 573.093 397.242 573.091 396.615 cv
573.042 378.273 573.749 353.298 580.429 348.232 cv
589.161 341.606 656.458 341.31 657.134 341.31 cv
657.812 341.31 725.106 341.606 733.841 348.232 cv
740.521 353.298 741.228 378.273 741.177 396.615 cv
741.177 397.242 741.174 397.802 741.174 398.291 cv
741.174 398.71 741.175 399.197 741.177 399.741 cv
741.19 405.478 741.218 417.413 740.183 428.685 cv
738.867 443.057 736.346 451.205 732.479 453.594 cv
725.595 457.846 701.146 458.433 675.755 458.433 cv
675.753 458.433 675.751 458.433 675.75 458.433 cv
cp
0 0 0 .899994 cmyk
f
733.37 348.854 mo
725.823 343.131 670.146 342.089 657.134 342.089 cv
644.125 342.089 588.444 343.131 580.899 348.854 cv
573.354 354.58 573.876 389.184 573.876 398.291 cv
573.876 407.396 573.354 447.465 582.202 452.932 cv
591.048 458.394 631.896 457.612 657.134 457.612 cv
682.374 457.612 723.223 458.394 732.069 452.932 cv
740.915 447.465 740.395 407.396 740.395 398.291 cv
740.395 389.184 740.915 354.58 733.37 348.854 cv
cp
0 0 0 0 cmyk
f
675.75 456.089 mo
672.302 456.089 668.918 456.078 665.679 456.07 cv
662.69 456.063 659.824 456.052 657.134 456.052 cv
654.445 456.052 651.579 456.063 648.597 456.07 cv
645.354 456.08 641.97 456.089 638.519 456.089 cv
624.087 456.089 590.29 456.089 583.022 451.602 cv
581.247 450.506 578.03 446.041 576.417 428.471 cv
575.396 417.308 575.421 405.448 575.433 399.748 cv
575.437 399.2 575.437 398.713 575.437 398.291 cv
575.437 397.801 575.435 397.237 575.433 396.609 cv
575.418 391.003 575.39 380.566 576.252 370.756 cv
577.597 355.453 580.333 351.245 581.843 350.098 cv
583.515 348.832 590.313 346.467 617.062 344.884 cv
633.546 343.91 650.481 343.652 657.134 343.652 cv
663.788 343.652 680.724 343.91 697.208 344.884 cv
723.956 346.467 730.755 348.832 732.427 350.098 cv
733.937 351.245 736.673 355.453 738.018 370.756 cv
738.878 380.566 738.851 391.003 738.837 396.609 cv
738.835 397.237 738.833 397.801 738.833 398.291 cv
738.833 398.713 738.835 399.2 738.835 399.748 cv
738.849 405.448 738.876 417.308 737.853 428.471 cv
736.239 446.041 733.023 450.506 731.247 451.602 cv
723.997 456.08 690.339 456.089 675.851 456.089 cv
675.818 456.089 675.783 456.089 675.75 456.089 cv
cp
0 0 0 .899994 cmyk
f
731.028 437.839 mo
731.028 438.555 730.442 439.139 729.726 439.139 cv
706.31 439.139 li
705.595 439.139 705.01 438.555 705.01 437.839 cv
705.01 357.962 li
705.01 357.246 705.595 356.66 706.31 356.66 cv
729.726 356.66 li
730.442 356.66 731.028 357.246 731.028 357.962 cv
731.028 437.839 li
cp
0 0 0 .799988 cmyk
f
729.661 405.966 mo
706.374 405.966 li
706.374 404.145 li
729.661 404.145 li
729.661 405.966 li
cp
0 0 0 .899994 cmyk
f
729.661 408.828 mo
706.374 408.828 li
706.374 407.006 li
729.661 407.006 li
729.661 408.828 li
cp
f
729.661 411.69 mo
706.374 411.69 li
706.374 409.869 li
729.661 409.869 li
729.661 411.69 li
cp
f
729.661 414.552 mo
706.374 414.552 li
706.374 412.73 li
729.661 412.73 li
729.661 414.552 li
cp
f
729.661 417.414 mo
706.374 417.414 li
706.374 415.592 li
729.661 415.592 li
729.661 417.414 li
cp
f
729.661 420.276 mo
706.374 420.276 li
706.374 418.455 li
729.661 418.455 li
729.661 420.276 li
cp
f
729.661 423.137 mo
706.374 423.137 li
706.374 421.317 li
729.661 421.317 li
729.661 423.137 li
cp
f
729.661 426.002 mo
706.374 426.002 li
706.374 424.177 li
729.661 424.177 li
729.661 426.002 li
cp
f
729.661 428.863 mo
706.374 428.863 li
706.374 427.04 li
729.661 427.04 li
729.661 428.863 li
cp
f
729.661 431.723 mo
706.374 431.723 li
706.374 429.904 li
729.661 429.904 li
729.661 431.723 li
cp
f
729.661 434.587 mo
706.374 434.587 li
706.374 432.766 li
729.661 432.766 li
729.661 434.587 li
cp
f
725.304 367.069 mo
725.304 363.045 722.042 359.783 718.019 359.783 cv
713.995 359.783 710.735 363.045 710.735 367.069 cv
710.735 371.092 713.995 374.353 718.019 374.353 cv
722.042 374.353 725.304 371.092 725.304 367.069 cv
cp
0 0 0 0 cmyk
f
718.019 372.273 mo
715.147 372.273 712.814 369.937 712.814 367.069 cv
712.814 364.199 715.147 361.864 718.019 361.864 cv
720.888 361.864 723.223 364.199 723.223 367.069 cv
723.223 369.937 720.888 372.273 718.019 372.273 cv
cp
0 0 0 .899994 cmyk
f
718.019 370.189 mo
716.296 370.189 714.896 368.791 714.896 367.069 cv
714.896 365.347 716.296 363.946 718.019 363.946 cv
719.739 363.946 721.14 365.347 721.14 367.069 cv
721.14 368.791 719.739 370.189 718.019 370.189 cv
cp
0 0 0 0 cmyk
f
725.304 385.394 mo
725.304 381.369 722.042 378.107 718.019 378.107 cv
713.995 378.107 710.735 381.369 710.735 385.394 cv
710.735 389.417 713.995 392.678 718.019 392.678 cv
722.042 392.678 725.304 389.417 725.304 385.394 cv
cp
f
718.019 390.597 mo
715.147 390.597 712.814 388.262 712.814 385.394 cv
712.814 382.524 715.147 380.19 718.019 380.19 cv
720.888 380.19 723.223 382.524 723.223 385.394 cv
723.223 388.262 720.888 390.597 718.019 390.597 cv
cp
0 0 0 .899994 cmyk
f
718.019 388.515 mo
716.296 388.515 714.896 387.114 714.896 385.394 cv
714.896 383.67 716.296 382.27 718.019 382.27 cv
719.739 382.27 721.14 383.67 721.14 385.394 cv
721.14 387.114 719.739 388.515 718.019 388.515 cv
cp
0 0 0 0 cmyk
f
698.243 359.263 mo
697.464 351.456 694.08 351.456 688.878 350.417 cv
684.165 349.473 657.043 348.104 642.304 347.854 cv
642.304 347.814 li
641.658 347.814 640.962 347.818 640.224 347.827 cv
639.485 347.818 638.788 347.814 638.142 347.814 cv
638.142 347.854 li
623.403 348.104 596.28 349.473 591.569 350.417 cv
586.364 351.456 582.981 351.456 582.202 359.263 cv
581.421 367.069 580.065 388.52 580.119 398.291 cv
580.181 409.168 582.202 437.577 582.46 441.74 cv
582.722 445.904 583.241 447.725 584.542 449.026 cv
585.843 450.328 593.39 450.848 597.553 450.848 cv
600.892 450.848 627.683 450.848 638.142 450.848 cv
640.719 450.848 642.304 450.848 642.304 450.848 cv
652.763 450.848 679.552 450.848 682.894 450.848 cv
687.058 450.848 694.602 450.328 695.901 449.026 cv
697.204 447.725 697.722 445.904 697.981 441.74 cv
698.243 437.577 700.265 409.168 700.325 398.291 cv
700.38 388.52 699.026 367.069 698.243 359.263 cv
cp
0 0 0 .799988 cmyk
f
690.049 373.703 mo
689.701 369.756 688.485 363.773 686.58 361.864 cv
684.673 359.955 680.509 359.783 675.825 358.569 cv
671.666 357.491 652.175 356.274 641.915 356.017 cv
638.532 356.017 li
628.272 356.274 608.781 357.491 604.62 358.569 cv
599.938 359.783 595.774 359.955 593.868 361.864 cv
591.958 363.773 590.743 369.756 590.398 373.703 cv
590.052 377.648 589.356 388.229 589.356 396.383 cv
589.356 404.536 590.398 427.953 591.437 430.555 cv
592.479 433.155 592.479 436.453 594.562 438.707 cv
596.642 440.961 599.937 440.614 602.365 441.136 cv
604.521 441.596 627.853 443.15 638.532 443.494 cv
641.915 443.494 li
652.592 443.15 675.925 441.596 678.08 441.136 cv
680.509 440.614 683.804 440.961 685.886 438.707 cv
687.968 436.453 687.968 433.155 689.007 430.555 cv
690.049 427.953 691.089 404.536 691.089 396.383 cv
691.089 388.229 690.394 377.648 690.049 373.703 cv
cp
.470588 .00784302 .32549 0 cmyk
f
229.606 451.474 mo
229.606 453.355 228.067 454.895 226.186 454.895 cv
67.9678 454.895 li
66.0864 454.895 64.5469 453.355 64.5469 451.474 cv
64.5469 344.285 li
64.5469 342.403 66.0864 340.864 67.9678 340.864 cv
226.186 340.864 li
228.067 340.864 229.606 342.403 229.606 344.285 cv
229.606 451.474 li
cp
226.186 338.583 mo
67.9678 338.583 li
64.8237 338.583 62.2666 341.141 62.2666 344.285 cv
62.2666 451.474 li
62.2666 454.618 64.8237 457.175 67.9678 457.175 cv
226.186 457.175 li
229.33 457.175 231.887 454.618 231.887 451.474 cv
231.887 344.285 li
231.887 341.141 229.33 338.583 226.186 338.583 cv
cp
0 0 0 .799988 cmyk
f
226.186 340.864 mo
67.9678 340.864 li
66.0864 340.864 64.5469 342.403 64.5469 344.285 cv
64.5469 451.474 li
64.5469 453.355 66.0864 454.895 67.9678 454.895 cv
226.186 454.895 li
228.067 454.895 229.606 453.355 229.606 451.474 cv
229.606 344.285 li
229.606 342.403 228.067 340.864 226.186 340.864 cv
cp
0 0 0 .899994 cmyk
f
67.9678 452.615 mo
67.3496 452.615 66.8276 452.093 66.8276 451.474 cv
66.8276 344.285 li
66.8276 343.667 67.3496 343.145 67.9678 343.145 cv
226.186 343.145 li
226.804 343.145 227.326 343.667 227.326 344.285 cv
227.326 451.474 li
227.326 452.093 226.804 452.615 226.186 452.615 cv
67.9678 452.615 li
cp
0 0 0 .799988 cmyk
f
69.7495 439.072 mo
196.751 439.072 li
196.751 345.141 li
69.7495 345.141 li
69.7495 439.072 li
cp
0 0 0 .899994 cmyk
f
196.823 439.072 mo
69.8208 439.072 li
69.8208 345.141 li
196.823 345.141 li
196.823 439.072 li
cp
68.6807 344 mo
68.6807 440.214 li
197.963 440.214 li
197.963 344 li
68.6807 344 li
cp
0 0 0 0 cmyk
f
132.965 435.082 mo
120.367 435.066 93.9971 434.523 87.1499 433.281 cv
86.48 433.16 85.8037 433.055 85.1294 432.949 cv
79.2241 432.035 72.5308 431 72.5298 418.496 cv
72.5278 403.644 72.5278 379.287 72.5298 364.434 cv
72.5308 351.932 79.2241 350.895 85.1294 349.98 cv
85.8037 349.875 86.48 349.771 87.1504 349.649 cv
94.002 348.407 120.37 347.864 132.964 347.849 cv
133.536 347.848 li
146.134 347.864 172.505 348.408 179.352 349.649 cv
180.022 349.771 180.698 349.875 181.372 349.98 cv
187.278 350.895 193.972 351.932 193.972 364.434 cv
193.974 379.287 193.974 403.644 193.972 418.496 cv
193.972 431 187.277 432.035 181.372 432.949 cv
180.698 433.055 180.022 433.16 179.352 433.281 cv
172.502 434.523 146.132 435.066 133.538 435.082 cv
133.536 435.082 li
132.965 435.082 li
cp
f
192.832 364.434 mo
192.831 351.576 185.705 351.959 179.148 350.771 cv
172.682 349.599 147.092 349.006 133.536 348.99 cv
133.536 348.989 li
133.443 348.989 133.344 348.989 133.251 348.989 cv
133.158 348.989 133.058 348.989 132.965 348.989 cv
132.965 348.99 li
119.41 349.006 93.8198 349.599 87.3535 350.771 cv
80.7964 351.959 73.6709 351.576 73.6694 364.434 cv
73.6675 379.287 73.6694 391.465 73.6694 391.465 cv
73.6694 391.465 73.6675 403.644 73.6694 418.496 cv
73.6709 431.355 80.7964 430.972 87.3535 432.159 cv
93.8198 433.332 119.41 433.926 132.965 433.942 cv
132.965 433.942 li
133.058 433.942 133.158 433.942 133.251 433.942 cv
133.344 433.942 133.443 433.942 133.536 433.942 cv
133.536 433.942 li
147.092 433.926 172.682 433.332 179.148 432.159 cv
185.705 430.972 192.831 431.355 192.832 418.496 cv
192.833 403.644 192.832 391.465 192.832 391.465 cv
192.832 391.465 192.833 379.287 192.832 364.434 cv
cp
0 .315 .765 0 cmyk
f
197.963 440.214 mo
226.471 440.214 li
226.471 344 li
197.963 344 li
197.963 440.214 li
cp
0 0 0 0 cmyk
f
199.104 439.072 mo
199.104 345.141 li
225.33 345.141 li
225.33 439.072 li
199.104 439.072 li
cp
0 0 0 .799988 cmyk
f
86.7822 450.191 mo
69.1079 450.191 li
69.1079 443.634 li
86.7822 443.634 li
86.7822 450.191 li
cp
0 0 0 .899994 cmyk
f
86.2119 449.62 mo
68.5376 449.62 li
68.5376 443.064 li
86.2119 443.064 li
86.2119 449.62 li
cp
.113725 .866667 .905882 .019608 cmyk
f
102.532 443.706 mo
94.4077 443.706 li
94.4077 447.98 li
102.532 447.98 li
102.532 443.706 li
cp
0 0 0 .899994 cmyk
f
111.655 443.706 mo
103.53 443.706 li
103.53 447.98 li
111.655 447.98 li
111.655 443.706 li
cp
f
120.777 443.706 mo
112.653 443.706 li
112.653 447.98 li
120.777 447.98 li
120.777 443.706 li
cp
f
129.9 443.706 mo
121.775 443.706 li
121.775 447.98 li
129.9 447.98 li
129.9 443.706 li
cp
f
101.535 443.064 mo
93.4097 443.064 li
93.4097 447.341 li
101.535 447.341 li
101.535 443.064 li
cp
0 0 0 0 cmyk
f
110.658 443.064 mo
102.532 443.064 li
102.532 447.341 li
110.658 447.341 li
110.658 443.064 li
cp
f
119.78 443.064 mo
111.655 443.064 li
111.655 447.341 li
119.78 447.341 li
119.78 443.064 li
cp
f
128.902 443.064 mo
120.777 443.064 li
120.777 447.341 li
128.902 447.341 li
128.902 443.064 li
cp
f
223.334 359.251 mo
223.334 352.954 218.229 347.848 211.931 347.848 cv
205.633 347.848 200.528 352.954 200.528 359.251 cv
200.528 365.549 205.633 370.654 211.931 370.654 cv
218.229 370.654 223.334 365.549 223.334 359.251 cv
cp
f
219.343 359.251 mo
219.343 355.158 216.024 351.839 211.931 351.839 cv
207.837 351.839 204.52 355.158 204.52 359.251 cv
204.52 363.345 207.837 366.664 211.931 366.664 cv
216.024 366.664 219.343 363.345 219.343 359.251 cv
cp
0 0 0 .899994 cmyk
f
222.765 412.276 mo
222.765 399.68 218.042 389.469 212.217 389.469 cv
206.391 389.469 201.669 399.68 201.669 412.276 cv
201.669 424.872 206.391 435.082 212.217 435.082 cv
218.042 435.082 222.765 424.872 222.765 412.276 cv
cp
f
206.749 355.882 mo
209.504 358.638 212.26 361.394 215.016 364.149 cv
216.187 365.32 218.001 363.506 216.83 362.336 cv
214.075 359.58 211.319 356.824 208.563 354.068 cv
207.393 352.897 205.578 354.711 206.749 355.882 cv
206.749 355.882 li
cp
0 0 0 0 cmyk
f
223.05 457.714 mo
223.05 457.364 222.537 457.08 221.91 457.08 cv
72.2437 457.08 li
71.6167 457.08 71.1035 457.364 71.1035 457.714 cv
71.1035 461.91 li
71.1035 462.259 71.6167 462.545 72.2437 462.545 cv
221.91 462.545 li
222.537 462.545 223.05 462.259 223.05 461.91 cv
223.05 457.714 li
cp
0 0 0 .799988 cmyk
f
215.495 446.343 mo
215.495 444.531 214.028 443.064 212.217 443.064 cv
210.407 443.064 208.938 444.531 208.938 446.343 cv
208.938 448.153 210.407 449.62 212.217 449.62 cv
214.028 449.62 215.495 448.153 215.495 446.343 cv
cp
0 0 0 .899994 cmyk
f
320.767 200.584 mo
320.31 200.584 319.935 200.209 319.935 199.753 cv
319.935 93.7158 li
319.935 93.2578 320.31 92.8838 320.767 92.8838 cv
485.022 92.8838 li
485.478 92.8838 485.852 93.2578 485.852 93.7158 cv
485.852 199.753 li
485.852 200.209 485.478 200.584 485.022 200.584 cv
320.767 200.584 li
cp
f
484.19 198.089 mo
484.19 198.546 483.815 198.921 483.358 198.921 cv
322.43 198.921 li
321.973 198.921 321.598 198.546 321.598 198.089 cv
321.598 95.3789 li
321.598 94.9214 321.973 94.5469 322.43 94.5469 cv
483.358 94.5469 li
483.815 94.5469 484.19 94.9214 484.19 95.3789 cv
484.19 198.089 li
cp
0 .315 .765 0 cmyk
f
386.261 193.931 mo
364.509 193.931 344.354 190.653 341.898 189.983 cv
341.817 189.962 li
339.12 189.226 330.908 186.989 330.145 178.219 cv
330.097 177.655 330.032 176.958 329.958 176.146 cv
329.403 170.057 328.252 157.429 328.252 146.733 cv
328.252 136.04 329.403 123.412 329.956 117.342 cv
330.033 116.501 330.097 115.809 330.145 115.25 cv
330.908 106.479 339.12 104.242 341.818 103.506 cv
341.898 103.485 li
344.354 102.814 364.513 99.5366 386.261 99.5366 cv
408.011 99.5366 428.169 102.814 430.624 103.485 cv
430.701 103.506 li
433.401 104.242 441.613 106.479 442.378 115.25 cv
442.425 115.807 442.487 116.496 442.56 117.295 cv
442.565 117.342 li
443.118 123.41 444.269 136.035 444.269 146.733 cv
444.269 157.433 443.118 170.059 442.565 176.125 cv
442.489 176.963 442.425 177.657 442.378 178.219 cv
441.613 186.989 433.401 189.226 430.704 189.962 cv
430.62 189.985 li
428.171 190.653 408.011 193.931 386.261 193.931 cv
cp
0 0 0 .899994 cmyk
f
386.261 191.436 mo
364.756 191.436 344.957 188.231 342.555 187.577 cv
342.474 187.555 li
339.95 186.867 333.242 185.039 332.631 178.002 cv
332.582 177.431 332.516 176.724 332.441 175.9 cv
331.891 169.867 330.747 157.313 330.747 146.733 cv
330.747 136.155 331.891 123.602 332.441 117.569 cv
332.516 116.745 332.582 116.037 332.631 115.466 cv
333.242 108.428 339.95 106.602 342.474 105.914 cv
342.555 105.892 li
344.957 105.237 364.756 102.031 386.261 102.031 cv
407.767 102.031 427.567 105.237 429.966 105.892 cv
430.046 105.914 li
432.571 106.602 439.277 108.428 439.891 115.466 cv
439.94 116.037 440.003 116.745 440.079 117.569 cv
440.629 123.602 441.774 136.155 441.774 146.733 cv
441.774 157.313 440.629 169.867 440.079 175.9 cv
440.003 176.724 439.94 177.431 439.891 178.002 cv
439.277 185.039 432.571 186.867 430.046 187.555 cv
429.966 187.577 li
427.567 188.231 407.767 191.436 386.261 191.436 cv
cp
0 0 0 .799988 cmyk
f
436.577 115.754 mo
436.16 110.972 431.378 109.725 429.093 109.102 cv
426.805 108.477 407.259 105.358 386.261 105.358 cv
365.261 105.358 345.717 108.477 343.43 109.102 cv
341.143 109.725 336.36 110.972 335.945 115.754 cv
335.529 120.537 334.073 134.883 334.073 146.733 cv
334.073 158.585 335.529 172.931 335.945 177.714 cv
336.36 182.496 341.143 183.743 343.43 184.367 cv
345.717 184.991 365.261 188.11 386.261 188.11 cv
407.259 188.11 426.805 184.991 429.093 184.367 cv
431.378 183.743 436.16 182.496 436.577 177.714 cv
436.993 172.931 438.448 158.585 438.448 146.733 cv
438.448 134.883 436.993 120.537 436.577 115.754 cv
cp
0 0 0 0 cmyk
f
451.063 198.505 mo
450.229 198.505 li
450.229 94.8584 li
451.063 94.8584 li
451.063 198.505 li
cp
0 0 0 .899994 cmyk
f
452.725 198.505 mo
451.893 198.505 li
451.893 94.8584 li
452.725 94.8584 li
452.725 198.505 li
cp
f
454.388 198.505 mo
453.558 198.505 li
453.558 94.8584 li
454.388 94.8584 li
454.388 198.505 li
cp
f
456.051 198.505 mo
455.22 198.505 li
455.22 94.8584 li
456.051 94.8584 li
456.051 198.505 li
cp
f
457.716 198.505 mo
456.885 198.505 li
456.885 94.8584 li
457.716 94.8584 li
457.716 198.505 li
cp
f
459.378 198.505 mo
458.546 198.505 li
458.546 94.8584 li
459.378 94.8584 li
459.378 198.505 li
cp
f
461.041 198.505 mo
460.211 198.505 li
460.211 94.8584 li
461.041 94.8584 li
461.041 198.505 li
cp
f
462.704 198.505 mo
461.873 198.505 li
461.873 94.8584 li
462.704 94.8584 li
462.704 198.505 li
cp
f
464.368 198.505 mo
463.538 198.505 li
463.538 94.8584 li
464.368 94.8584 li
464.368 198.505 li
cp
f
466.031 198.505 mo
465.2 198.505 li
465.2 94.8584 li
466.031 94.8584 li
466.031 198.505 li
cp
f
467.694 198.505 mo
466.863 198.505 li
466.863 94.8584 li
467.694 94.8584 li
467.694 198.505 li
cp
f
469.358 198.505 mo
468.526 198.505 li
468.526 94.8584 li
469.358 94.8584 li
469.358 198.505 li
cp
f
471.021 198.505 mo
470.188 198.505 li
470.188 94.8584 li
471.021 94.8584 li
471.021 198.505 li
cp
f
472.685 198.505 mo
471.854 198.505 li
471.854 94.8584 li
472.685 94.8584 li
472.685 198.505 li
cp
f
474.349 198.505 mo
473.517 198.505 li
473.517 94.8584 li
474.349 94.8584 li
474.349 198.505 li
cp
f
476.012 198.505 mo
475.181 198.505 li
475.181 94.8584 li
476.012 94.8584 li
476.012 198.505 li
cp
f
477.675 198.505 mo
476.843 198.505 li
476.843 94.8584 li
477.675 94.8584 li
477.675 198.505 li
cp
f
478.09 189.772 mo
449.26 189.772 li
449.26 144.863 li
478.09 144.863 li
478.09 189.772 li
cp
f
477.12 189.772 mo
450.229 189.772 li
450.229 172.863 li
477.12 172.863 li
477.12 189.772 li
cp
0 0 0 0 cmyk
f
460.071 183.536 mo
460.071 183.993 459.698 184.367 459.24 184.367 cv
453.973 184.367 li
453.515 184.367 453.142 183.993 453.142 183.536 cv
453.142 178.407 li
453.142 177.95 453.515 177.576 453.973 177.576 cv
459.24 177.576 li
459.698 177.576 460.071 177.95 460.071 178.407 cv
460.071 183.536 li
cp
.113725 .866667 .905882 .019608 cmyk
f
475.733 178.545 mo
463.261 178.545 li
463.261 176.744 li
475.733 176.744 li
475.733 178.545 li
cp
0 0 0 .899994 cmyk
f
475.733 181.872 mo
463.261 181.872 li
463.261 180.071 li
475.733 180.071 li
475.733 181.872 li
cp
f
475.733 185.199 mo
463.261 185.199 li
463.261 183.396 li
475.733 183.396 li
475.733 185.199 li
cp
f
454.944 150.684 mo
451.478 150.684 li
451.478 148.189 li
454.944 148.189 li
454.944 150.684 li
cp
0 0 0 0 cmyk
f
459.101 150.684 mo
455.636 150.684 li
455.636 148.189 li
459.101 148.189 li
459.101 150.684 li
cp
f
463.261 150.684 mo
459.794 150.684 li
459.794 148.189 li
463.261 148.189 li
463.261 150.684 li
cp
f
467.417 150.684 mo
463.953 150.684 li
463.953 148.189 li
467.417 148.189 li
467.417 150.684 li
cp
f
471.577 150.684 mo
468.111 150.684 li
468.111 148.189 li
471.577 148.189 li
471.577 150.684 li
cp
f
475.733 150.684 mo
472.27 150.684 li
472.27 148.189 li
475.733 148.189 li
475.733 150.684 li
cp
f
454.944 168.565 mo
454.944 167.608 454.167 166.833 453.21 166.833 cv
452.253 166.833 451.478 167.608 451.478 168.565 cv
451.478 169.522 452.253 170.298 453.21 170.298 cv
454.167 170.298 454.944 169.522 454.944 168.565 cv
cp
f
459.101 168.565 mo
459.101 167.608 458.327 166.833 457.368 166.833 cv
456.411 166.833 455.636 167.608 455.636 168.565 cv
455.636 169.522 456.411 170.298 457.368 170.298 cv
458.327 170.298 459.101 169.522 459.101 168.565 cv
cp
f
463.261 168.565 mo
463.261 167.608 462.483 166.833 461.526 166.833 cv
460.569 166.833 459.794 167.608 459.794 168.565 cv
459.794 169.522 460.569 170.298 461.526 170.298 cv
462.483 170.298 463.261 169.522 463.261 168.565 cv
cp
f
467.417 168.565 mo
467.417 167.608 466.642 166.833 465.685 166.833 cv
464.729 166.833 463.953 167.608 463.953 168.565 cv
463.953 169.522 464.729 170.298 465.685 170.298 cv
466.642 170.298 467.417 169.522 467.417 168.565 cv
cp
f
471.577 168.565 mo
471.577 167.608 470.802 166.833 469.843 166.833 cv
468.886 166.833 468.111 167.608 468.111 168.565 cv
468.111 169.522 468.886 170.298 469.843 170.298 cv
470.802 170.298 471.577 169.522 471.577 168.565 cv
cp
f
475.733 168.565 mo
475.733 167.608 474.96 166.833 474.003 166.833 cv
473.043 166.833 472.27 167.608 472.27 168.565 cv
472.27 169.522 473.043 170.298 474.003 170.298 cv
474.96 170.298 475.733 169.522 475.733 168.565 cv
cp
f
474.902 164.823 mo
474.902 165.28 474.528 165.655 474.071 165.655 cv
453.001 165.655 li
452.545 165.655 452.171 165.28 452.171 164.823 cv
452.171 153.734 li
452.171 153.277 452.545 152.902 453.001 152.902 cv
474.071 152.902 li
474.528 152.902 474.902 153.277 474.902 153.734 cv
474.902 164.823 li
cp
0 0 0 .799988 cmyk
f
226.301 707.997 mo
226.301 710.042 224.63 711.713 222.586 711.713 cv
65.6646 711.713 li
63.6221 711.713 61.9497 710.042 61.9497 707.997 cv
61.9497 604.929 li
61.9497 602.888 63.6221 601.215 65.6646 601.215 cv
222.586 601.215 li
224.63 601.215 226.301 602.888 226.301 604.929 cv
226.301 707.997 li
cp
0 0 0 0 cmyk
f
205.486 705.521 mo
69.3013 705.521 li
69.3013 606.361 li
205.486 606.361 li
205.486 705.521 li
cp
0 0 0 .899994 cmyk
f
195.041 701.885 mo
195.041 702.396 194.623 702.813 194.112 702.813 cv
70.23 702.813 li
69.7188 702.813 69.3013 702.396 69.3013 701.885 cv
69.3013 609.572 li
69.3013 609.063 69.7188 608.645 70.23 608.645 cv
194.112 608.645 li
194.623 608.645 195.041 609.063 195.041 609.572 cv
195.041 701.885 li
cp
0 0 0 .799988 cmyk
f
191.636 697.165 mo
73.4019 697.165 li
73.4019 613.133 li
191.636 613.133 li
191.636 697.165 li
cp
0 0 0 .899994 cmyk
f
224.135 662.809 mo
206.957 662.809 li
206.957 705.521 li
224.135 705.521 li
224.135 662.809 li
cp
0 0 0 .1 cmyk
f
224.135 651.047 mo
206.957 651.047 li
206.957 660.951 li
224.135 660.951 li
224.135 651.047 li
cp
f
224.135 646.869 mo
206.957 646.869 li
206.957 649.656 li
224.135 649.656 li
224.135 646.869 li
cp
f
224.135 606.361 mo
206.957 606.361 li
206.957 645.321 li
224.135 645.321 li
224.135 606.361 li
cp
f
204.055 614.834 mo
196.395 614.834 li
196.395 609.146 li
204.055 609.146 li
204.055 614.834 li
cp
.113725 .866667 .905882 .019608 cmyk
f
204.055 624.119 mo
196.395 624.119 li
196.395 618.432 li
204.055 618.432 li
204.055 624.119 li
cp
0 0 0 .799988 cmyk
f
204.055 633.406 mo
196.395 633.406 li
196.395 627.717 li
204.055 627.717 li
204.055 633.406 li
cp
f
204.055 642.691 mo
196.395 642.691 li
196.395 637.004 li
204.055 637.004 li
204.055 642.691 li
cp
f
216.242 719.449 mo
72.4731 719.449 li
70.6162 711.713 li
217.635 711.713 li
216.242 719.449 li
cp
f
132.52 615.607 mo
121.221 615.607 81.7593 616.77 79.1279 618.432 cv
79.1279 655.148 li
79.1279 691.863 li
81.7593 693.527 121.221 694.688 132.52 694.688 cv
143.816 694.688 183.278 693.527 185.91 691.863 cv
185.91 655.148 li
185.91 618.432 li
183.278 616.77 143.816 615.607 132.52 615.607 cv
cp
.470588 .00784302 .32549 0 cmyk
f
476.652 716.427 mo
476.652 717.971 475.389 719.232 473.848 719.232 cv
327.941 719.232 li
326.398 719.232 325.136 717.971 325.136 716.427 cv
325.136 598.932 li
325.136 597.389 326.398 596.127 327.941 596.127 cv
473.848 596.127 li
475.389 596.127 476.652 597.389 476.652 598.932 cv
476.652 716.427 li
cp
0 0 0 .899994 cmyk
f
474.987 701.695 mo
326.801 701.695 li
326.801 598.055 li
474.987 598.055 li
474.987 701.695 li
cp
0 0 0 .799988 cmyk
f
407.726 698.189 mo
407.726 698.867 407.178 699.416 406.498 699.416 cv
394.574 699.416 li
393.896 699.416 393.345 698.867 393.345 698.189 cv
393.345 698.189 li
393.345 697.512 393.896 696.962 394.574 696.962 cv
406.498 696.962 li
407.178 696.962 407.726 697.512 407.726 698.189 cv
407.726 698.189 li
cp
0 0 0 0 cmyk
f
455.958 694.154 mo
345.829 694.154 li
345.829 609.452 li
455.958 609.452 li
455.958 694.154 li
cp
0 0 0 .7 cmyk
f
347.231 692.754 mo
347.231 610.855 li
454.558 610.855 li
454.558 692.754 li
347.231 692.754 li
cp
0 0 0 .899994 cmyk
f
328.204 609.452 mo
343.637 609.452 li
343.637 694.154 li
328.204 694.154 li
328.204 609.452 li
cp
f
458.149 609.452 mo
473.583 609.452 li
473.583 694.154 li
458.149 694.154 li
458.149 609.452 li
cp
f
475.24 705.554 mo
327.057 705.554 li
327.057 701.695 li
475.24 701.695 li
475.24 705.554 li
cp
f
475.24 715.9 mo
327.057 715.9 li
327.057 705.554 li
475.24 705.554 li
475.24 715.9 li
cp
0 0 0 .799988 cmyk
f
358.623 711.869 mo
358.623 712.64 357.992 713.271 357.219 713.271 cv
351.608 713.271 li
350.836 713.271 350.206 712.64 350.206 711.869 cv
350.206 708.361 li
350.206 707.588 350.836 706.957 351.608 706.957 cv
357.219 706.957 li
357.992 706.957 358.623 707.588 358.623 708.361 cv
358.623 711.869 li
cp
0 .315 .765 0 cmyk
f
417.984 712.656 mo
414.478 712.656 li
414.478 711.518 li
417.984 711.518 li
417.984 712.656 li
cp
0 0 0 0 cmyk
f
423.946 712.656 mo
420.44 712.656 li
420.44 711.518 li
423.946 711.518 li
423.946 712.656 li
cp
f
429.909 712.656 mo
426.401 712.656 li
426.401 711.518 li
429.909 711.518 li
429.909 712.656 li
cp
f
435.872 712.656 mo
432.364 712.656 li
432.364 711.518 li
435.872 711.518 li
435.872 712.656 li
cp
f
441.835 712.656 mo
438.327 712.656 li
438.327 711.518 li
441.835 711.518 li
441.835 712.656 li
cp
f
447.798 712.656 mo
444.289 712.656 li
444.289 711.518 li
447.798 711.518 li
447.798 712.656 li
cp
f
464.105 708.975 mo
464.105 709.506 463.675 709.939 463.141 709.939 cv
462.608 709.939 462.177 709.506 462.177 708.975 cv
462.177 708.439 462.608 708.01 463.141 708.01 cv
463.675 708.01 464.105 708.439 464.105 708.975 cv
cp
0 .902344 .992188 0 cmyk
f
446.095 613.365 mo
442.093 612.451 412.193 612.262 401.024 612.26 cv
401.024 612.26 li
400.984 612.26 400.937 612.26 400.894 612.26 cv
400.851 612.26 400.805 612.26 400.763 612.26 cv
400.763 612.26 li
389.597 612.262 359.696 612.451 355.692 613.365 cv
351.66 614.289 348.152 614.289 348.152 620.938 cv
348.152 627.588 348.152 652.241 348.152 652.241 cv
348.152 652.241 348.152 676.896 348.152 683.547 cv
348.152 690.195 351.66 690.195 355.692 691.119 cv
359.696 692.035 389.597 692.224 400.763 692.226 cv
400.763 692.226 li
400.805 692.226 400.851 692.226 400.894 692.226 cv
400.937 692.226 400.984 692.226 401.024 692.226 cv
401.024 692.226 li
412.193 692.224 442.093 692.035 446.095 691.119 cv
450.128 690.195 453.634 690.195 453.634 683.547 cv
453.634 676.896 453.634 652.241 453.634 652.241 cv
453.634 652.241 453.634 627.588 453.634 620.938 cv
453.634 614.289 450.128 614.289 446.095 613.365 cv
cp
.043137 .219608 .713726 0 cmyk
f
745.228 704.36 mo
578.58 704.36 li
578.58 601.039 li
745.228 601.039 li
745.228 704.36 li
cp
0 0 0 0 cmyk
f
744.401 601.725 mo
579.122 601.725 li
579.122 704.382 li
641.212 704.382 li
647.548 706.107 654.485 707.063 661.763 707.063 cv
669.036 707.063 675.974 706.107 682.312 704.382 cv
744.401 704.382 li
744.401 601.725 li
cp
0 0 0 .899994 cmyk
f
668.405 712.482 mo
655.117 712.482 li
655.117 706.779 li
668.405 706.779 li
668.405 712.482 li
cp
f
717.866 716.436 mo
718.184 716.639 718.136 716.805 717.759 716.805 cv
605.757 716.805 li
605.382 716.805 605.343 716.654 605.672 716.473 cv
616.449 710.529 li
616.779 710.348 617.357 710.199 617.733 710.199 cv
707.388 710.199 li
707.765 710.199 708.333 710.365 708.648 710.566 cv
717.866 716.436 li
cp
f
738.327 693.603 mo
585.196 693.603 li
585.196 606.687 li
738.327 606.687 li
738.327 693.603 li
cp
.470588 .00784302 .32549 0 cmyk
f
738.327 693.603 mo
585.196 693.603 li
585.196 694.458 li
738.327 694.458 li
738.327 693.603 li
cp
0 0 0 0 cmyk
f
665.128 699.705 mo
665.128 700.271 664.667 700.732 664.101 700.732 cv
659.708 700.732 li
659.142 700.732 658.682 700.271 658.682 699.705 cv
658.682 699.705 li
658.682 699.139 659.142 698.68 659.708 698.68 cv
664.101 698.68 li
664.667 698.68 665.128 699.139 665.128 699.705 cv
665.128 699.705 li
cp
f
585.024 699.705 mo
585.024 699.139 585.484 698.68 586.052 698.68 cv
586.618 698.68 587.077 699.139 587.077 699.705 cv
587.077 700.271 586.618 700.732 586.052 700.732 cv
585.484 700.732 585.024 700.271 585.024 699.705 cv
cp
.113725 .866667 .905882 .019608 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (PC) ()
%%Title: (television_01.eps)
%%CreationDate: 2/3/2014 9:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=cZk1OXBjp5lQO`&KhgW0to<05m%^cA9E$M8qOL;:adSk9P0/^>S9`-1n%c9[X;]TpR\n=Pc>hj+aKn0_r=pB5JEN>nsT;L
%IWGJf]6@VrIeWO6qu?ER2rWo@.-Y>sGS<:@lmG$n+0U1mlJ(nXDF6$rfQ6UndYFI/J,.pT=78?PlGNLcYJ0u/o`!,4&)[Bak4I7A
%mr!UEibSD8MjlrFHLp:t?Z,;h]Qj5ooUWUDWa@l<rT;Z%pE/8+pimJ$D%LGU?eg/*qTYB,r8$+WHhH@\2f0h6k:_MSn%L)k`0pWW
%o_ufo]d;*F?@D`B*Ml6%6`4;hnUKqsq>!b'kGS@NlW7H.rq>B-(E[#!J+p-21Zfe9J+NBQL]@-m)i8MInCuj7HMbsV(E[#+3#$]3
%HLmr.8:U"kfYd>^o&)(;.JB5Pg<Ggl^KtFClHcY@rT33$s5VXf040.COPG9Zpm]n8+2))6`*32!?iBi52m5FCmbR2ie41OCWFPLW
%pKtX\@l.War65Te$Md*fD6HmQq!EtM?bcG.oDAO3G<?3skEj0VB\X\9r:Le#?Uc9Tr8uPAhnK-(FS<frrMJ+b_lk(bRl<'4qU^f5
%kbm(Gfsq"hk0/\X=:;fdSulAI"TIu0l`X[1q`2Y);u;Ut?@TLt[aV&9J)ll4a7fOIs$r\q"?q9^7;irY<LnTDXc[T"Mr/Kscea(q
%HN0;/j'2NQSsIAX=uUBVIuW?g+67Xaik'-u1.(cqTAS*6?GC!iT7?R\qRc::YMOXs^\l+_n%\b^TAG"hrq"HbHM?OuIsZ>0qc>F8
%^AgG3r8l0Vs6\_.LS*E#<7^N_Da1mZ8Nc3LJ*-IDlYh7G4UgR<5J4SThpQ`18,E*5rqhIus66SfBEKjk8q$F$c`c3<s(5d-PS`f&
%]_UG<5()rhR/cHrMg$g<grM.=pVZ;]dr/R>O=fmYp4M#GgA-I-8\QIr>Vtu-#I\"<TVc%Cr"Fpg=7<m$f"(+-(S+Xe%q5:'^V9ZU
%pMXAfqplYQ'`[n<m+o]`+5ZteSTaVBGMiDak-sg:^KCZ4&)^N)P!=?Dn,/Md`#jH0!W(o-?08%$Dr//+qSS50rq-'KA,IGE]f1&p
%]0BsD]p)BDXMsd<H"4m5r)[XR(=BHA?^'ukZE6@eb]!LOioA3HOa-]2%kg,ZIe>jNOf.rSfC.q]^%oosY<Ta)oC`+M2lu]-r8pd.
%^0rc]q0[O0nZ?0F!O3^H:S)t1BIGh6n+J..n\^8<?dm^"Et[9("5J9OYNc_)^ECmKQYu6+r;<mNq><$0WPctV^:=395P\_,Dq[p^
%Ig5^#+)bLKqTJbS0>Ee;c*d#]YP9(2:Y.[4^TY;n5CRkMlJ6rB_Y;r*IehsA]<>T34$EQNC7s=nrBJf>&7S0RLD"?8Tna4l\-r&i
%'V:%liHYhd`Y<JFZ,RQ+*-'!1GTT`OBm^\gViY@[.Ar>DC5GoH1t#'AkrtZde+>1ScQU?!Em>u_giC^cc[;)Jo-loKcgpZ?8h?t&
%;G&OCoJ4Q?GNHQ/b1#p_4TG>c)JZ@Qk#uN%XnFg@XEX?OT'Ff$X?LQr`Kj\FV:F.#DkkR#fC%Cm4`/O!o,`5EWTRT6m>[C(55OVi
%rP"p#e,HF5+(<*M7NQ-jd7,3fb],T0a([XVcc5PoAt3St=_=4Ap,V9*GOp9Tk0s-B;BPAE?+`gSq6&N']6;fp`ne;>]=Yg>h*&Gu
%G5(nugrK;6TC9sO]l3ZDIb`9H]DML&e,@bmBD9_Ji=o)PPY^C?:[LPu4H7fPh4<t0Vpj,DZd\NDiG!\.T&us4Bmn^,p8?q"WF,[2
%B(>j\nT[Nn:A=\LNd+LcWKfrT<GF<ggPL4fm[d?qSl)+Te@0eiiM<%Tl>NGH=6b42[id8_hBpJ0oPW"=%8ZVnp[l1`hL!W(2];jg
%,T;_3it>uAcY8W8d9)sL=^j@)"DNs3/1Z]o)5Q'9psS.>Tg,FeIn&IIU@H!r=d\h(s(O;O2#T7,M<6=O*rhaBmhsC/M<9s^8@(?j
%G!!rgD<:B8BYH:I4"\Vkl>p,81bc9`meK:bKa_-6S^pH1F]2uH,[*XDaNJX.<A]N=^@#^+h9h,hDRMA7)7ArUZF":>d[%u#Bnaus
%dosG_21%hDGL-]b[#QZ=BE"*.Fjp%UcY9N1o['VQVq$8eHXOp4TFTDq.'u>sm?:*<-,euRF(d=C&)G]@\s$9U,&/;i9os)fe40=^
%[Mcd:-T9]9Zd!.r5-`N7So+2sB:mmkJ'U$JmBLLbgG7(g55FKA>lE14LH+S6g6GIKqAG?DLa*ANe^*(%ci(6^EBIP*4MCT:G4e4t
%q0`&aA%SjP)Wmr]jA[LP<GBWfg*#p"T[o]s9KSAQ]-A1P:7WY:--;KF!le.MBr810-(2n1O^^/8-H/r=W<?/q"mH34V/f5*QH:\C
%==ULR>1)bjZr1%l78BhH;Aj$Y9')7/-^@CQR8beq<+:\PRpnr7Pt*<`<#.b45n9k.;AmtPr]p<Fp5%f*r%gkbP<0t2+ELNALqI_1
%,E`7O7]"<SiS-q'<]\?DUd!5;*l;tZj(UjD]Ve&jZ_(Q_73i6tdL1Y%k\\fiF8U*-A_?2BWZhlWs15okm;mD=qaX[NEP0"9mQRnB
%m.9un4TA[Da7d%j!TZTfq<pg!aMm>RoW\qf'QLc<_bA4L8+u)+]&/R[hiGA+O1O50]&/R[hgZg*n#H(OPF4@$FtUg/"$G09caCQ@
%r1X?2A@sSWf@]3:-`*/DL8l1j+&tP<OC5(7mP7IY`Ee5c;JaH0=pcIq=I,r[aO4nHZR+"$VPu2i;@RXU3[Ms,Q>A,,=;7]]>7us-
%S4P`,F!g.?83<,]-Lk4#RFHR9P)j,qaZ>`:/H>-D##:;5XHdskKIdL6)AYk3QAI.-UIn"<N@Z+G6Q@6q:Eh7V<Eb8$4%5JVU<i*p
%L6-MA.b_"RUmht_8WS_&nWM1u+4>Q0o*h7hr]/qYn"2]A9`L2:U\-h?l.`,,IHoL`>^Z,<LH+FXY'f4>p`09hQM3Olrps=m-hMf<
%npd%(rr_nAicriJJ)KLI4=-"PclVr_+-Gm-nb_^,^WCMHh=,ibn$ag-Vq-@;#!)Pla1q-`bDLTCo1@^!n+usQ*7OT,VGI+3qYUnb
%Qffq*-Z2GfTmc9(J7F8ll4XG%h"H'n]0T65^5"5A4^oBTir\NF5V$L)J+Nd;p7o;OrHl+_qUOHcnB%9bn;1JlqE;Nh#Hm\[NLN_(
%\buGF%.jD^]+<f3H$/^o,.r0<iLP#knP,?Y*B!98]N52B9mehhn)]XX.Ylo&3Ba)VPo0e@Rf$G$g*ua:SK,Np3LHGT/dZR4-99?Z
%m#rbdrd^8S-Ruq=[`UC'];\`$IjQOb'"+Hij\eP'kceEkW$D%G`LK=jH,d:O=>N7gp`pVL(A3D=,>r<GfJ[$bT.(Q$SL?oSZ#eRG
%GpY"g&:5d^c'(Pl.Ur3Q;7)c/O/dM#Z%MJ_(1M(C,Us_e7*hOs#I08_C,hqB8N2<brortkYaM@J..0JPAF&J*(=Z9fU7T2+:ea9a
%)]?jP_]gFJ&S89u;fQJmZ*oBh>Z7`,40cHjF-=jJq)lR8N"=HFTM:EA+#;G:!u0k+LqT[XL/7Q)rL*Yq_rol@UuN-/PC/tukF$h.
%UN:>LeVr61SUG0cOQ)l1;_C9,n7dr2qY>n+g:tZ=q##Y,`:<2ls8MaPh7h5&<lN=&n-D/9'=dZAm-_>=^B!YrjVujc"3Wp549Xdk
%=C)(#':>\J<kb[3480MX^E?p,B<:?PPs!lDE5J&lNcgfK5p/l(l`jsufpY!2FkLMe=>@6:Ra:JVGCf]#Vb)JBbf/c)B*_s^Ycf4.
%8Qj$mct$Xkf7El1G@Grk`;B%'*,Em>#8+mX8J8&Eif,AGLo[i?]D*])!QZn/47Q(MItBft:W8IjN0RT!+Aj,2ll+pq]sY?UX1/K3
%_aC5(94$U'h-jnCrUWuPcfCjU^0*H?`1KpLfl-O_`9Ym(O,>n&V5FkF^3(eeGPKtj7iEV4Vl/k,ZgG)h$=WhMZVS1-cnbRtZY0+#
%;]bne+9!FDl_h2Ybl=GfIcU8K`ud>@B/on#1OnK\,KKhA*&VPTM2O4fQL*n&De&2+!pB@""):.],SVs$*7mEXGVOZoj+!hTrL<8i
%@F499Y<FECo]GnO^OGqBj%$p`?N2=ZQlR]'S+cm#/Z*ab2u9p$qnKm5]+$pJS(_f6H,%&ipHP]GH@.?cgX/@%l1;@Xph?=dcX,XW
%R$t(:I*Zp4NSn,7ma2.M`@97E5.p[e]6>oQ]'q@VDm[Z!/2s?NC297;mMtrZ"aR"qrS]F-pNQIdAafQUYPRkjUjrD+;?&tdE:]!W
%J,.]8oB#0+X^CAri;Zi-;YE$[r6oqTk;7SPiJ`QioM.um[-hmg3.^CRP%^!`/[fVfB5$".9XeO=G0]7hSMns0%:otIZ%S6WIa?@4
%gGCrGU8E:)4=&kS8)Z^m[h<UW\?0bXRl#%.fiL*]hr[&`c"44/rmFkpLM55g)9-rW9$gq>6[@Os0[!US9"`D3o(s;[ZOW7L9BP4&
%%TVe%VK'7bp=LMspfW(b2;3Dcrj6iAAp6?&:E-dNdu*m&4R5`q[kk2DFR!-<l/n_beX>_Yl9EQ0_EOHsgu]0&cXr0G;($S4Asp-=
%e`>2)3BtsV>&R>2aX=Jd)MQai;D26]h6u429rdm0-5HJ?RoJ^?c0FCISb:1gf(rs!HeJ8#?i/V^[qos0Xg>RGDV=)Wbh$"$0ZDTl
%S)T@'pF4r=]/$E9h?JFiS8ToPR'+6(]`Tk[gJL!@?6ZO$YFdNa0BG8<VK(?'c'RrkoVR2NAF8$qnteaTL53Yg.eFe36XsRiT=*`J
%FN9cA[hg^idbil0d;JQ3j8;V;Z^7=^XaDt[MlO!CHd?q@BFFZP#&cGj^KU,n^c/q')cNN*?2H7#Fj]_LhC.1QOY/!,Lt:NWbGqGN
%I`?t&HRi9$,8!FU_Wu?mI^,4*kHe7^L[Z)!`.-WJE[&*Tmu$O>^=2Uh8&(T>Q1MIBU:nW]\$_O9Ib('/p9Gq#L,?3Nm"j.eg4eAp
%IQi*]IgGLO9`4(U+fD"ic3'WNI&$A;XD,\Gc?<bD0i`!H)@bUuFndlaTD-$.7,(PX_`"$mF1*T'+^*+&cQ8g7(K_@j'E!7/OqZ4`
%@tNQD][61CpK_LH"O16S]>IutgH\6G*]"#:gC<>L(AoKF)qOtIWR9(qI2BT.kkHB@[-pV:,nR2r[LN/tIBPUB)p4Q#L9m2kG,9?1
%+2V5A'Dm&nabf5A^FQmBq+eu>4kl7Q;'XeQfLGA&\'<nhCaeIt%He2f]@-Q?&)f[AM>b(Ej>:tuH(_L1Dm\BoHPE8sc'm.b;0-<&
%VM?AY;+Q'WdZNGYd'GoW^K:K$\1&P.,:>Wk3r1d,AGUU&Pr5V1q"tGu!I1Bo+b-Yh=[u#8R3?538/\5sPeA08h6n0CisM5tKJ]^Y
%9(S'R[bu2ZPk;X:B1eTbUt8hM$",oiT51WEmn1p8,DQ'):1dcT/ZQ05]IPh&XlQpikBg8O1JG7Q+rtF\fR1E/P:S3Xq<FcS2*E$m
%`\*2pl!:251ATkIN7#WQTh_5bMoLgt^tJ'W[qtc>>PmbiYAF1jFlfrIg&,!^D#XE'X3(3LF(tS6RnN(7c/tk.I+C$A:$\1kk&p"S
%GPn*5lgD[2VlsHJQ&6A"rd+0WVZ#EM+9);Qq<?4Crp[Zes6SG%C4:6?"uX+Zs*JVXTtcfXA`ra8It%&,:Hsk(qclg;2:TD$J*]Z$
%DP@rVd+(=0dTK?<h?+:pr=hh#86*lN,1-sg8a#Ye3dpnaN#2HbNZ7uZ9'iC6_#Ao2m3u(*lA0enCl@tL2YMbTT^-^(f\51Q?S-#i
%`B3YCgS/7=Auc0.=6X,_E9+UaifuAOGD!!<7M=_J,sBWoS)sDlfBD/aE/"<:9p:ZS3K6DTUaSs?KlVFCCNT'VCjMiuRO7-.ep)!l
%gbK`.fYfX.p`,`/oYZ2\&eFW<_gp3E>Nr@T%.#i4p`'Kcd18t#kqHj42Vi:m0#s6!Pn$!5VAGelreKsp0D]d=G@8t@;NJ#"oYX4_
%j;pML6uOrK:XQ_LEpVO.kTRpOGLV(JVf-s=5"bSqSblRDOj>o])MbLu,jG)d`YDFSg\5gf85h$Yc3(h@Ib(]^cSbRYo9K8hOB/l>
%"\k'4RThn[>4hD=/O%eMM[u8Z[lp$tHttnNkA_1pqK\DCT54):>I-DkUgqkaV9SPO>:fVr'8t0oqOqW/KkG;DVTF9,UE5n2o^aCF
%T54'ddj2@kIUp5coBZ@;!FPKj-5N4hoL%*oNf<#FFD%4Q:PYf+qKWa4cSbQ1e"*T7(68RS8[0P#mF_'*T5XSFk8O<GFMHquO(6XL
%JX'E!9eZ?g'8t0oqI.1]W[src*p.d31*6:3Xr%%a?l,GNoWtFpJTTAu6!Y`No3>Gr5tY\acRY-;3_)]j6'Fthn4D4CrUDr)=?IS6
%W_VgAh_jMYe9GZ'AH%il1V2%+cY98"aM4*5![`dLS(&@^^8DNFJ5qPJ**I*-VKXp#Rq[=^q!_H0Am(QI+p7(_Qu5Pk9b/;6h@:$+
%QcrbZh+>3=)^UfG;bAfu[5oY?LV64FD<!#KqCpUM!-P"--kEe1)q_8G]#@?G?gTNW0@(+mHHTFNe/$!\_)ThS+QhBEA*97<Ro5*c
%N3&k-4pHEjZ_*jh)S@Aca/V$CZ>F[$>Gc#D!FmCk@2+q&]bc#g)UsoS"uX]#0@XpN,LFj6C\ee[:\lm_IN;k>k+>B^9f/i17?tr?
%oB?(doUVfK]Oi0_2IM1%ng&$35u-Z!e&8n=\h&(ElqFJQNCfF=.MU/gVupt@E.?obM[\DS\:I2.,&&VU]]_UQD"uH4]^;]/g.Vq\
%[E_<@e<hqo3D'^?Lseq#Wj7'uBtqmfA>;k^,\i5n0!1Klo;XBcIZ;#(7<]C7.8*klHDheoB6oNEA*('OjE8Nl:GIJ=B$<k`Oj*Q`
%X_rL+Z+jeDXVGB)0V.?KdHf"Dq9ZbJ78H4F.a^'>E*GP;\U_bME@%J_N6'g:)2F;8Ntn'pKdH/>m1.E91sS9cm,Z>)Y?AB==IaWC
%oFaG&T=,;H9/[%IIF:o""E3E'dF4U>Jl<*7*_gEa<Vb!dS"3$,^DC131u'Zo'*Tgp_Eo[T6lL:]=$PpG=`asRaJ%5"pm*7ILLsq[
%kVL#VbJ&l#5"TbA8\?u55W3I&Jn[/R$0Pd9Wkp:7]<\d;A/mpsR.FR[SXB%s$R%!*ik%sH=^R?SL^\@"7u_Z6.Lm]fk)VPp]#ggA
%UIJ-4C\Km'95oI!dOfu:bIXkBUdc[j1g8O$/Bscf3J.F_B>pGp\Qa-W<GX=VA.XY2Et$Im5iXjdL/&^&qT>=,K#O*E`*k@2m\-HV
%=u%skC);06Ha@3O2&VttQ-$C$AkP1FJMsES?hUkUP<E`/MDd`d"[l6j5V+eFN!`hn1XR-\7S543c35EC3$O0#g0dVhHDPb5g>#VJ
%"\0jjPVOu`.F4"f(oJ4afUU@d^d*I(BoCGAcV`uq7S@N;QmX:hDC)0S(Ad)hYcYckIT:"D@#77KMMS(0,ph,#ARD`kW17!:@I\KG
%(./hq6\e\$"4YSbOAj">QE,;LLel:hHs$N@NPH=f;'A(lAqqqZ==ZKuM+fH3agqUPQKlR#YZ(_[8,GA[m?bDF7bl6f)AL`"d`cj]
%ks`jFA7IsEY!"4K."bW]f_@-[R:T:FKO\aJEPTo@%L"o5SR,<D&A=BDY=ZnLMS?UiPus^1d>ZXo7f]+D,gad)aR0f%PJ1&DlY(@I
%Qs,)9eTi/r4iZhpLsRjK1WKV-Z)Q_S`"&WIX*d$t[P3=`0>rF\MU+W1eX/a+Rg4;-6j0aj6tb1VR03B?GZ'qUb?4HV/$LSbT83s6
%As(IcMm1gEejE(SL?RS.rKnf*#c^BjKaP@D+L*=1HDdUE<q9Xt905<#0r)\0nl^d&(R5VQYSL+q9/dTJl08Xc3fek*A^M)E.0p5U
%-4ra7N,<Qr?-<0GWS.>jFWN/Db*hunCgrbeZ,C21-S[R^bQ6,pCj3:]<\,iTV?[JHD(uarMt(6MdYp3-52NanR&&@kJ$R'K+#>g"
%(!/!^Te(<U3\\7J;!,l8WqlCsY@t%1m#-^opq@ZsPWYgUQ+qr/aUVdbI6no?"AoXXmfT\!*_A+(AF>^RgAk9-Mk8(_bb5Y*0*RT8
%V5'EWZ@&<8am2:(<]>;YJf[l>f<>SCQIU"(['4=rgmm`I"0iZ0I^N21CdgI'&BZak9Pc>HfLF??7RU"t<)H(6\-^F.m6D9h[gK`F
%</oDi88AElVRgY3%30'9<)G98"160BVu<\6IlaZA8<;eMZ6:Dl@Wn6Z'W5(fc1cjF)RCk\.;.3."9t_CBZ3:Ubg`bk&5@XVi!dbZ
%#,=L`SRmD?K$GJSo>s!,1#%L*aFZd#'''b8,H<"5eS36a4p[JBA83.1:?EOh?q(f6.4['Y'st*_Vek)Did?./"r$A]@0an_rmnIE
%(,FkMUn!iY6#oQJIo0U74rNl9or/DT/4<8_@.4Dl(O0$`8RcLt(,Lo%SrWFq+hD\ZFF)];%u\fd3OPCjeQ\b93^43)P7?gt,aKTl
%&SOVj4Sm3Mh=b$QEl9:a^u$'$bJi\'=4S(RaDM7EPLX3jV)qjJT=8rLH'VEOi!JKVU7#?I>6.qZR&nj=33WQ)^mTMD4,&WV3\d48
%#:iYp\J"^/H"e6r[icZ]D>J5#8<ZeI.33aEiJ5@&mqKB/EI<-Wd>M)VjB*+[I:>RaW25H'P8LmDl_fT=<)rMehIKg7"`tE^Q$/HS
%1l.N9kb9^4@QUTN;DbG+3@FJ]&R0UQ_H9_]2EkZ:=PL'(ADr`HdNrS)`7B?LZ#T<c.rXeW6LP11K&i3LgM]gO>%bFH(eV03hGq$`
%kpgoZ-8'k-6^RX8/$dlqLX%i$DDXE]8t,76OmUYbcmKjT:I3'G5#MbJOPu?g,XiU>/B[$HHa1Kq#""X[qWQ]5d8pMm1UVdp."H5q
%hUlHe$f*p(S@*n8OdrQkIG0.`_.>mhZ/_afrR$MN`AO;.@VcUcU')sN7WI&l>;6;sTplfn%uWeGfod2+bK>3Q6mO(j(pU]hg\"gU
%L[@&-_&a(_R-8rij_6ac4h@E[3'PMQ7b`:4]^SM9Vk8=WnrTiEoe,+>-Xueh+BhsnY%b=Qq@++[l80`<bc6sp09@OIPcB`#Kgn1K
%=P:'mU<$/s$?Q$kBVu"o$qRNp[Tq3bf8"'NfrM6nW!e?9o^poukY1O)2V@7_>o0fBRecObj5=Q7S(^0(Y\;9kXH4*`i34oh<*OX(
%\!i/-O&D>KN(@WZokk[\17&s-UHM<2SL-2f:-03/4DIsW=F6%k;thF/XUf2"Ka=Dt"OXJ&if#a=((/@'keWfp*"Rq$N>6]bSk&uD
%FBRSXgGmW%AmC;@Rr.A&pHku(+nl^619WSfaJ9T@!8n64c-nLopR>do:3)PP[mEHdN%>5,e<4DYWWe-7N[GG'`.oePSX5mITS>Y_
%dE"&PPi3G)9m%oQ6gl]H]<<f07h7FGRsEjQqSI^PGLgt[fsMjIdb/5tYopW7bK`1-G?p5L?tk\,b#oM2g"2_/$ULMRhJ(\Z96u-p
%mkB/r]D1Uu2NMnbl9].[e;__P=9>@0%Z.<0N7uXT9H15?'A<;&OUs0=HCMLujX;Jk]OnPY)+G0Za`BSC\2W\,3r:+QYb]kd/]\`*
%;F_kW`AshaZ4o_?,Sa1k[tgZ+<sHBPXJ`ZV6:Z0RRa#[!g*37B!MAgA<HNp0Z0E)MkA1_)@Q:0_IdP;2.DmAbS`SN]_,G/8E3+'I
%#eT'pHKD9TA@?gFX5Jsgg=2#u2'd0QClOK8j+qBlS@<O]OK<Ql\OV]AUTPn4+EouMpu*c>OZC3X,.;@Rq2f`(gb1[CR)V!6TM[]L
%E5;l*HS.QW&T-oT4^&/Rjb_e52ik]C+1H)eX2Hnh5$K&7s&@)a\nk_ZP'$QA$ktXB=LL,-C@_Y2@4]MkM`,&CL1ChD;3dEaN%Qu6
%;$fe9HRrlNJDnB;OA(msXWhR5Z6R;F]cs?29B.^h\9XL[D"dABqJ%#99f>X)b&Gf+MWa]pQ1<7EoUYpKM*b+'74EP%g_[SlL.32\
%lR;\8WjHcE.J?.MQnol5,RW.D]rI!U@p[!FGO2o.)PnSQ/ESu<0aBe-j@02*2N>qbbKEm0k0Pmmei\Sq8ST+Kn'%FP)8ATWd.TRW
%_gWbO\["(/iNR(ZT4Od0W^4df.Hp9fb['U[.&bhF7rA[mV6'YV*<VfE$)X*%MFcQR_;NMCl3XO=EQn+\d"2lm8M;aZ-aD6U1#QGM
%LRObF/gb&T83*`#4>>WI;MV7JfgdcPA\2Er<]_(R3+CP\LMc<9%%Sgn-4Sb7U2K"YeQF09RWnLRDrtOB'S@$<qMF5]RQhD`*JU<[
%0YK;e.DiqA,-Zj/R<_1o,Bm@in,pdg],MM$49l?_[n#1,0:-rq#"KmimOdV'pOI^sci=,+XRgR]f\%TMj-[ora)Xe]%bO+e@4`If
%_+KW;/6Il>U@;`mi%?EK-GT_M6T.5mX#PYiK$]u[0X)k_Lj<]6F=+i'-3pRmlU/?76o=XNB1J3gS$K&I02:M>NE&Q*PA*Fm>;RUn
%+d$l!$;j.f-Tg!j%mW44#L8-F-iVd0X)&<1U/I]D@)"I0+B)B.;QhP\n+8mjqA^@`2cs)_b,rA]4"`5"lGMQ4%BJZp_4,KXW+4&W
%*[og!;N:(2!CXb@Y#@eqI8#CuM9i.R)h<cgoPiVR)bDgajr/E5n3Vo-=3U<5Pt!:RTJRl`]EO^tgTUoJ"6%^W@j@La!L$EYX/<^6
%]/[9mr[$;P&p[`?$=PB\j6`SEG4mYj!@F2KJ[WLGp<<amP3AY&@OJ5Sc!jXRgFmk0F'+Nd8A;V[oVt3-3c/Z.BFbJE(VPN"&N'.K
%lQeD&*S+J^'ShJSQY`?n#Xf_*%ShALFEu-MlnDo(M8$2O6!1]QnM'2`X`PjmfNYGMBk!*&FI*3-AkeJG5/L-jQj>5R$Tb[$&q&5&
%W]#_%EHhM%+?@e!@LE5id3l8h_'I_2(@ku*'bJMA2_#cU[3KDu1[M1(fUaQ:Q;(44qTqj>@>E+O'5'40E^VQC`'3Oh?=Jq``ZLF)
%2r]uJ1F(Hj>-io'o<_Te=?Nt)7`Spq(9i>H%Xu@TnTQ#rh/n#a(([QNgn:]q>R)`@@XWaY4H[g\`_jTZE-SQPkOJYi*X+eri3sK>
%&o1\J>0"F@?AAX.fE*Z;=F%AhMYc[M'ILJ:llrG=K:@/TqOk_dbe"#g;B^32P31eWNjFr4hI_T2p]q,%/?(#ZDD=Xp/U<1\\0]dk
%gm\V+U"V3d6"%mY&_L,a$=&bra=UC.TVIsZM\NN&@nHg$"5sR&)#:C;3*2$-8F5/0`L=K_FkGqOAdR1+@rB2UeG6q`d&L9.5W9*#
%QkBh=KOcYUp:uHO&%eNB_ZG<5%nM?JB/A"_X]WDMq3u4s-QA;jR+u5HK@'m_d<4d9.i%)SIQ5Ub6aS]9/7Wop[#COZ^DtdV>Y3C5
%U"(VNLPXrFZX".TI$+Bi_`k)S4@nQj%B23*[,n+E,=f'V;HEI3%6Keq49$1"WX^a))JJ77Xu(Q)YT#di0m@<2Es=^<@iia8$`tcu
%FJqO=Jm$UeTYh_j&MMU4K<J6T]2Dmd*pZ(EAlJ/^3Xj][i>Ht4QrU&?bhmjJRHN+Kk7a9FXGBR]2[Arl*QJG\$KW\*&g!Mpj<rhp
%s$bjuG5I=XFufR?:K2_q\fs=oka!hoXp!h?L1t5X"`u$-!aW\NfcX.0GOU_9nTL`%Gi./W)2rW;&];*qTV!(-&c;c.9e+$*EjZ;S
%_oPmD0_JB:.NLA(;](Ld&tYWBD',Li=!b@+eMK;R1(D%)bbNp^AL6iHjb41^)dLSKW&n77@9GRd`<F_AVNY!(jmc2D0;HES1?T-6
%,g8.sCq1?T^p/%A3&2JO%)"0oZbmPknD;l%7>&Xf:,WiSoq49pdu-AXM3,V?L\'`,?A77o3S5Ol]KQ4%+3DU\4b+SH^c<*Wb_LpD
%4Al.i./+/hG7PJ<M8OO<LIYU*;F\Y\JI?BX&DCM/03fXcG[h<!68o`';"KFo/W+%I>\HnK?4k7!3+O8^+`&-=0_L"\!Y!GS:]N+t
%(cIOu57oAS@\&<`M*P8bMKqZHr9E'BXDicEl@G=r<_c8eg,k(h/oVT6F!6m>i@Qg(q*_=#oK.WIpc.nZ?3Tj/]J2I6dFIh[NWBPl
%<uIT8+uOP?MOi"sn.#1RrKN;1+bL7,=3e(9A:^``/FHKMp>RbN4AocME$&\CX3:Sddlea\G:W5g1kTSNUi?Kc31C>c#db-p;CQTT
%mfUu`pk5u=MRXSb08u_eTi?)=?k6S,d?5YC;&0"\)#_M_N^+`W)4E-ldL_O%.ptOP25J,[;fY#ekWRV`<:&Rs0bcjDP)t:6@-Osa
%D<W1Z`p?h-]N]Be/N74$Nm-X"DK0N1)J.9N3OPV"m_&Nn[:8=%/j,MC/mcIRV+]WT17p+?fT90mO9T(?+q/nH+Z.+SJtBcrC)56p
%-U^\5</l&2b<i-NcZ?LK79m#%3qpn`lSr`fA&H>W4h#K&p?&NUi)&t9dT-)%fa<.ph#uW0*9Wo4'1W01)UQ.=oO@[;ApFjYW,j52
%ACG1\qKR94Z5`eE\fs-[/OP3OV\@-5#;)DX2c\*!OIQ2/h)?e$\.a;32f#F8;kA=D-:O$W^b6+L?;tFWO$R"Me=A;l(^0hbGeAUF
%1^`1"6]A(2GT>6TmYXG7+q6C>;F;;-K)ic&W28dq([/c"g+gg-+CiqY_%r#IXrY3@UlKSb_rQjCO3tceZN-;X+XZu#/EVtp_]aNB
%=(6g,,&#Re2Ou`H%'#AC9o"2<VSQ.e%)ic8L?Xg/@"Mr3j++6iTq&q!BtE;MXAIsmWGVnSB'n,Xh40!tTcoGtW<4-)*QFd-36bI3
%TX`7VN-UEl%[1O[,3(AO\mSY<(O$X9S7ZG"+>1opTkYoIg4V@&'J1UU3HEqTQ')2R2Jl2&&%;C$r3K*G9tAps()*d,2qDCjeN.LH
%UnBc57kL]W#S-=mYZ[!7XgDeVBfqQ$CjqnSkTS&Jkb_BV4W!+8eW4)d:tYnuMq&W'p[Eci>GLXZOEn>4nB?j%!u-$H@7j$I6ErZg
%U68V%D0@\%J"5J^/$^$5;)U;=DoCkX\=%Y6*SU-+NrSCMA9e63!5F5"QSF)6>H?5\po/D*FF4Xci*eQ\aMEBgRX4kGpSnJXMf*36
%1cmSo(kmB5Ik\HN=Caoa;,i3dbS8l=_s$sR+Zr,8ooSFe+G(BAbY@D/WN:l=QSSo_Q9g8I,V?nc1_A!21&V%+LG;IA`<p$a^7XR$
%&(7Ff*'RV!7?-=4UQ9)M<*9`,#F7\%;GW4bY[+.#0bZMmJm/irUM7%"=[S.Nl3cBS,@-JVAnZ%t#q8lu?;Q8CK/lED-p<&@`W./q
%C2ICGIBpau7O)*j&@*(uO/0rjV"9mG>`rTTRi2u9caglN&q>ef&\O0TLHL^7Zf&]b#UD,pUPGgfH2+XMfP(m."-jGNK@/ZC(A_c#
%CX.n0iH)u10,koS8<2AILi7j+5LG;!@Q=-g>'&nQFZ$Y.me^DaQH^X$b,<_coRtE!B$Jd7H$0VmfGLWGWQZM(*`A"P't"E[/0O]p
%:SMAo4;]*SV"=7/i1=\>nD]j'>_f<rB[FeQL<"F*"&,&4MQ*o@A(n/X7"NBPC:f)hFHs7IjfCnSVP'eH`hEk)=*Guh\/:\s$rq+m
%=GH-Td$6I$Y,@pUWPP<\bb:u%UMt*Y1,B7LmBXr0a>.^*#.-IYE=AJ1%e)n"YUoQ`k:<o:`e_0p:3On(A__7DEF]_q(7J$fXf=cK
%<TGG!GgRk)6%?D?B<<ceHF;RNTM%g\kiNl27Eo)*/ApIf2GH)t33%bS[h_7ooRnCW^'hHi2WeLkU_>Hg!O5$a-d-,L,DVo?q3/?\
%-$41k$0[/9$jA"CfK%><o4k2L@YV.AB6hWd[.G2glfAO2<Bp]=AP\86foli+fn6I5`r]Mm(#$LO_Vo.dC_lFsVma7]<at?VSq):R
%8QLeN^O&iqp'&-uX$P0P1o#fW$*]abD*'&tPP&b:-V$q_6TGLKMhBFA\Yo3OHIH-W".s@Nc3R\IBb6tZ3iBlp'/Hc`@6SSh1h'I,
%@#:24@3#2M(l3O0F)D0iQS_+#I4bkIG<s9ZpJKY,o3cBQ3cZ!sLnR_EC0_5aN.sq^gPP$,\$m%CraD@JITRsG_sq-_($XHhFS:eu
%0aUWS8R'd+aFLd5#L.i&gg=4_ig6/OSO'?XIN)A\</m)qqbRf&bD)Fe$\9rN'`JqnFMji"Bg'bnf7Wc/&uTB,^*W(iT8:f$f_#^<
%[#.A,f3E'Qb*Z1>oU_"od5fN.k/EaA:K+jd`AD-*BM&?ed)H*[L.fg^%^9u@Ko'I_S8KE*]#R3%>rf5AU)$>Zo8/N[Q?Mcs7R&CI
%_qA&$/j;Rf5_PJ/J0X:loUScZl154-=0T*]OW2^Eb.hHH</r^dk->u`!69+ORd,HsNBYnZI5!$!![Ce2*(1ibd;'JfMj):e27G+d
%?aSh7+7)#8lt[[(=uROsdEc!\,_l4gHJ,X73W']taMj,_#V.q5@Pi*!#.g//L:+aRq\L%@]Y.bac`?]HB@mSU9B9O96;,jD#rKT\
%Squ\5ks\ir@2k=t5B!frNcC?@e=l/LS"%-^7)OsKDA6Y432fo$m'&h(P=7]SOaUL+OWH-$eU2G9PLT]FHO6UhMq\jI*#DXO':0;&
%Be-cF*:>kSCU[GuIU.e**4^!V(,49)m@d>&3O^R,ou@UnAV#l!,(m5B<MU*4d0E<'hupNro%AYlca(i&U46ON2q=]PD^C:a?'?/<
%CGW#-):O?Wb[ec9OJ!;[.\V)0R;J.LNS`*XB?d+4lp[9u_t3R].<6+i_8qXH#^Tc1ph"3S>'B;&P6cm_FL@W=C.NO!Yp>rOUB;64
%X&gU063@RL?g3Ff6>tj$Y>''M]dH@#WU(g#>EuT9`W!#7!R)Tg0C#S!KI:(`:7%uaR_37JpM=P8S4\JlC*m\dauZoDc.\(Z["]V;
%!;jZr^?kp_UV!/)c^#$_FHrIuP/cn^mF7V3d#-^L0cRFHk:RLD^<>"3\]YpkbcK::N[Pu/0O%@aq5V'#BWVKV'=4Il,u//D^,][:
%]:KU31\87,8X!I+]A"odSfOrS^eA?8CH]HGjWh;/N?0nkJd_$(LWUd(N2ue+%-Z1X(YA]/\a:nJk+1]bk,l390K'AR@c-LMPhP\2
%"]`!e`4%9(cOPk`.n(q@9hRrjdth3.R1[?=ih4tq]lQH+RD($3>LBVnMV0OSNn+?l4u>dJ+BuKuG(1PciKQ^\+ke33cs=>Kd1g0X
%&JCF#g+"Bo/_-`)Oh8HsVUguH;4U*N'^cYm,m]M_8+@luB?\bDnrSGP))n!X2$?p;bSj&BG"aURlu+>R;N)^WV0ekdpPoG*$``fk
%]1=D%lBuW_c5;ERSfVM[:o5DQLR"'=<b<dnFV=IAlYunOhVtQ-'"'Q])N,P*&[3\g!,0/d,kKYooSmk%)6%0JfeNtRf"cM>/(^U8
%r.g?FjYc#lfBa?"l@UBJ!=M/VA>5,nLK\VL2.WjUiR&M\!4<`,JO+]T=M"c2@M#o`8=JVJD%LrV\)JTD]imU%F1&q!760.t=CW]?
%"ir,n5EiLPlu>GOlIbYnp)8Q'1igrnk&UM,WXlJ%@+70>cd^N[<O4f79sbq%;6cF_raaTT$mrfgPseHWNq)SGQ4!(\NqtDjK:[m(
%6#\g)@7dhVH7fW);"1YZY-@R"'iMQ16La,F%!%&\;!c^4LhoBMS-@H!Q5%!Ngl\sJ\\LhD5d0CnC8")"c-`5[FY,!!8V;h>Z)bH+
%M[J3VJc!N2l)p,j$mj5BAkQ&>Ie5B-"eWf_d>Q.goa,GrVkSC%B^c.t?<5$fV<,.,=N+[E4SaSX+b-4=R(4$1iJ0#+cU=i,)U!`)
%E=/=9HYF8C7JWA,<%_TdU'siPZ,YRO@C<M\BU6`j24VX%dkpjR;#CI2D;Su>[Xq\o'6uWECA(b,.>(5leHsa_2"s=O5UK&Sc!`D:
%fu:##'a$h:f^>&]`KC2Un.qUE.qK'iLm+Yt-:O%?8@74tC(cJMVim_aJgE_El$Zr9%n:SSl1gTW:QI?k<G>K--(AP>?#iuJ%u&0;
%k('O*T<&?36Z^lI2..+kbDo=bUp6i5Za7gH8iFeGS]e"$M")tC;Ie5b2\lW48;u`.GnJC.`dOW965)I<+<Lp5N(";ph/,qPD9[&Y
%*.P^XVTBh.`='Obc-Wns;6e&-I'Yig?Z_TC+=L3p@ZQ<(1^.T#[\>T,S0/!10TPK62ai_g.uN1?4=tJ;baMRd<Orq%BkGjB0g`N"
%-L0<o4e8ZSb9iJto*uuW<"f)*<O5*UWW<W:Ra8&[D6eMW.gt?OAbQEt%P+H5)t:DuW%6Gi<&ZQn4G_h0,h:=i3E<[oetN1^30-1H
%B&Icu$jX\Mj*dq:4c9DQ,n:FqeWARVn5=YOE[n2C;`PWpFX7AFBE^tE&rQIZ5"tDGO)!&joFl?VlU`E^hB7mq9bHFQei[9`Z/=9n
%!UkR.A.SRD\s*cEk4j"O2d_G#+lYYoOFYB>]7sC/,6Pm#hHa)Gi;<aK#"`sN%LFb-\0pM&7!V$X(mKjQ)B"fV<n(FH7<3Cp?hQN-
%R1D>9E&.T]]Zsr)$,\,r2GmlG)\KXpBdaGrW)hf61FLi+oXBocZP&1ZW3[+FYbpdN@@#9H+ULEVs#BiT`K3)M[l[7`,r!b6EcXnp
%d]@/F<m50a&2N\k7+>cC=Xb=`P@SUG7q\[2[)X0r,FI:!_*/1GlVCJP@nU%PGeld/@%(krC-J)ND,gst?(n2o*P<@Y>H_'b/_%J*
%<IK67;*HK?N"QdQGg-I/m"uO<#YU]^D.nA=hQE8n,7ZY:fo6&`_@!i1c'-L_8W6b+k%rC<TmQDMV^F9754VROPf6Y0YH[G4`47-D
%a*ol(fl2#bF=ONToTC;$^/=:Uo=f(H`j<B"EAS3h"i@&167lZ&$:V"-qH5)K(.T]G:X-&mSE=Og;I%Ii]L=hVefouGS4>eJoIT\"
%ALt?<W^<TeXZQ7Pj>Gaq"di>rFF0S:j]^!IOmFJqa98E_`bAG^K%:CVERiuWjD(s<l]j!:2>+?=_0H;d@MoaaVN.(**_/j5o/QHs
%?\a8)92T.9m]U+D[c/VE=%.eM%$Lol,-`),<Ssc0H-YHPc*7LYXq`uB]-1"6(7@Kcip,=ZWn:t7]5\U)X[QSl]8%)o>-*_c+(>4W
%enf@"$dOOTGh>Wm`>&$=mFrjkaqK'1YdS-j#-9C*^gbj[X\Q_K=9Rg9PnmG6Z6^f'FN+tHF4K>P-!HtJC'=]N%R#Z*m!/7o(O_39
%+'W!@EC]CbBA-D$BFA$cSNHMX?DX8QIGhl/G50l^du/\37/)S[fBDBl+8E%:]ctimdu/\3`3="N=6\mB+8A':'fkT)AAC/#Gn]V.
%\4Su$qT+.D*R38`dIa0*28LJ\N).mJRm-=K9oJVHBi`I47ES06>>\8j+7_GCX-M8C)`OW1@Z]edKKUc5Lb1)+F=DDNg>\(06nSj[
%q+TW6cV-/s%0AhPEQtD`o4*gn[Vj5liVM7^CUhAT6^=[-qIO;X^(-lLH46."l<[5,`M8EA)5h'\?XKZ/(S>L8`TO9p<^gde+.@r]
%qS;AW?2,DN]'+pH8UjhYs)%D(#25c-CNT&+1qi+.VGS*)d'V_+kHTkZFRV:I^$(6KK;NH+RLY2q4Z%/L/pn.'0D]8/lo&L/jK`LV
%J?7@-2K=ul5*nu^oL%)U:X;2!Vk,dl"p4.-lV)N4!8*h=g7cb+,&f_OBlS9M1H=\Q^\p?hL,p%3&oQ+C-/@L$NP>1\C%bNMH>L0k
%;ub5:U0!=1/j,3W19r2GX535CP?iKIpoe1c/p8"0U[Z$eM4I(J/THJO)$clbn>u7+2kSpbMJVB0E@Z)Bn.O<C<_.#R`>e%8a"ZkU
%CGiBTaE_Yu*?=?kn7:,A5+f98EiA;$OLt/YP$V/=FbGTO#&JUZQ4f<B=&p&b.H.7QC1q$#:Sogl:pY"I=4HLN3r$-mO1MCid,WSp
%_f-`oGg4@<pPaR3-RBA3+6Dr=kf2f4FAm[s2kA!*)r6u9MPXiEE5D[Bkm.]#Zut\FdgNW[Q_!;#OcN'&X7Xr+6g)"_E@@mZ#/()o
%=j8!!AeL1.Lg#MI<Hfn6Q!30$DGB(KQ\*6@LJFuf&"P7TaEpXaULf,XYXZ>/>-g5MOV$6(hi5EW;"P.aqmc"V]g\V:3k8EVF:r`!
%>\!rEaHg.RpGD0gY^87Ej'41>ZN8^!kfaq&jk/SL);6mT/_@D5gk:DAfWR&bQX:h\Psj(7"2qogOa:jlVQ8=7o*T6:Kj$;VMA<f;
%NJNJq$IUQ^<t;\>,?ug=]%U_Xk"Pg\/IPI=jm00HM1V\V(Q0Sb7]fP116dEPlH5ArG9UAHZ"M$bSZHf"^[Q3MWZ%_9'"Ao^DqROe
%-a8nEd6ho7H2J6q1.K'pce!n=SGGjSDiT[B.Va?Y7Z\$DWUZ%^mUcd(]ETo"0[-TCSqXaE5WuR0:iN3>X4JKg+LrKmr"1/&pkBTG
%79ChFGWcFpLZen#!a!L@@c5BW\`1_ps*4KVAaMN9^'fdj"ion1l0_eC:a#Ni1fE_\bQb+O`cPTdGX6"F<3T$Cp(HMH]oZZ=j1#Fi
%g\k"OSh7a1=k6dJ>TcLVXZ.QS[<`eh=&<+!jIUP).P(i<Yir(3[H,$6*h-O%^oD8-P!sF(\ma#(4SM?1(c8>>:7C1iT!%f\0riJJ
%5nqLK'n^>QEStVnX>$cWJ_:V"m$kHQq*@9Y4Bbh!ZFR3Xj\]4-Hr#()>/huDbmDq#("BOA#p?IJphMo_>ANd"OP]2.q7s#<bf+.!
%eopX0o'F4&eps4:Y#m(`e]>3NVZqt7INr#T#G8AT?$"Ec+-.d7m@)j[WO-^Mpc:@1]dX$T5f]-H%,8*E[d!5,r@kPiD1K2iKhDTc
%H?+:?Cio,.E*9J,]hikCr3eZ!-FH5V4*L01QSdi0HGV1bD=k*j`I;WCT3WEW>R$hNGb<lln1uMtheYKN(6N2QTK5-%>s3c9r,rMn
%q"t>=pK0N8f=DWN*JYFoHH[<_ood;3IL/)Z;A>8W7pRq(Lmpj`h[Sh]a[dB.bK2X<_q#RXGf&BG>2-)..5X:n/3B-)V!>K,G/M+)
%c4H8]RM<IH=5$kR_ICQjjds+B3j-THX%&0ND?GhqF5>H%+$%N2=nrTkq(dlR%O<qtSSlGFf:5bcAnB8%3Pc42jQ3XRWe;rW!X5mU
%o4X0Qkc`<;;qep7DiJY^fB1]Y0JV8Zi!)%eh#`>o^2`S0Q4c0dU,Vq:8UTmHhFYn)3fAO@AI+W"#,^^G_L/[pd*o(<]0_WI%rqHb
%+$`:1bu+/ZG:fW.*,mdeYoCIP*YtrqH00516Jc;0(V^0j0AdIcPNVt+DO8b/@!X$*/bE/b(9nV:H!ZEC&*)rs2>X0(Q@Dp5d^!_7
%rPfk7^e_S`b2OYbnY;%Gcl?d1bO_j<-f\#(,V+o%5C7W!DT0P+Od%HQF6qZH[MS);=M!2..'^C[iF4K,-Gg"`$51BfoeIUqin4]F
%S^I0D4LF9WahnM1ijMH4<+)'S2)!H1Qg\([TOk)W!:P=.T8oH9`54m"HY6/ORpchtl0Y#rkZW.F1].-`%-iB&-SG0(aK=C`*U-E8
%M3tV>n$kAP=QSe#)'CoVi2DeZD1YY01(C7^E8&&S>8fDM7QUXN=4N[Cn/0Zu9jXZO(FAQe;-h$cBF84j>9t3ppM'p$:pA4Y<P>:T
%R%Uml]bC>c[Y7GWIehoV5N;8GLmP%D;=n`28QLlhG!f?]?l)Fk,c.YZAI`^\fmWGoFrb5c.Cr_OJ?C)VbsTKNh/[bPlk%5&BH5U\
%2<CFm#cK"4iUel.R5h\A3-G['B2K5$5&;[^9s7Jnikk(RON%*YP$^%[QeLuc<XHm?Ft5X9,+B2A.M5qZ)`Dhnb0UJMnmYXqR'G:'
%!V1]cTN"3JO>3&3a&i-=9ZaNMBnK`\'s<Yg?)b*N0V)8+SVb;sX;h(.^`Naq2,1UUSH4Zk"_*uTEJPCePY4/e=ehc'mt!0/=naXi
%N^]2,/m]okTjZ,fBbjp1_A6*!`*RK.(,47Lhk2t",3/@WgNtbUGp5jXB/_F5nsLLeN*BjkFhm#.Jdm!@F<JVL]`RjSF\s?MgO76R
%093bu=!>SCIP(t/Mq@1VaV'`dXr>M<`R.8t1$3WMZ!_nV@2-K<VLl"J<ANZp^3=1-nJY\ZZ9"D]ZHhS--=uT!nU0'Sk;hjdcSbRX
%4Boe%c^QQLrOlljdEe;T1V5g`6Y?2%Y*uW8NVY6>QLV?T"C(_EV2*e#J,#S!'Dfi,5E.=f^&.C"_ft#;kuTN%IXLhI*N8_9^4-%K
%SGq!p]mKM5mAhmYo$9K12g5[hqSQ\,&s@2IDh<B9n5oVRJ'u+2SS3M`.6##Oq3QR?2db""rpX^g(7?4SN8.rAZ+1@>)H^P<o)5f"
%&/Y<(JhDmYC2Z.oa(X6%hlZnVP5iFlGk3#o=:1:Sd6LBM3R3A>,S\uLH527;&B,#+`6m5a&RscFR84cEYb-kAilYHIR4Dg!a?j2T
%k#>A-Os!.s3<AG;oUn2q6t^W>d,m<2P43F!jTnZQTd<)@gCgNNm8^k4d:-\'LT]"aS/Yb6InP,l-:11.!)C[i;f0gX6_`pm[9,+t
%<OI#5/Fa>6S:+QS/p>k0jZ[DsN_l6+-ZELQ\;mb5k]mVXj;OOT/pt$Ya;[[+EgI9GVMHTg,rsW[TYi:4/s(L,=C?FNdd2G3-PIlm
%@7etUETdkL>fFa]`*bAf;Es##]%Gq\OC(^7CF7j[M`'0Kb`#;h8f'>UK@)'us3O%MCC[1u;TG5gRQ!X!Ufa+*0"%RpaS0-/43m*n
%,0;P7in^r,NtPo2YHnj3).4ss`09qHle5d:FR):)h*u,BiaVO5+7ZWW+tB7$(GJTiTnUL/F?D(`AKeKan.MjY^:FjnIAIl,AK-(a
%=DGV%XOa)7Y:o[Od#5[/j:`M$oO6M'I!%u#;6dQ:;@0.@!N?E'S.nT^eMq)q&15\^K7J/fH_fA3Op.kH2*5Z&3%reTfLW^b`Ta)7
%4NcY'L+Z7sfh?[2[cLPsi04_KXU(LOehM;U[Z2`315_&RR*K+jLNG+1-^C_S?1%MY\/<K":+s>1Wq/f@0F#p[pt@o[r8EY&+s(>q
%]@Vfij!e+4[SN`STaV1TnX?!>aENgR;4u8YZDA[3pIK:4C^p\-ckCH[Ps-+R[%IJfY?:F7jHMsR$j.*1QVA'<N?Tiad#`tpja&k6
%\EX:W@Z\"W,tb:Df0i9_LL[U>,*`rg\m0O!Ph=VE.a:O*!^*GPg#SnNgBqTid$GN;0H"MRfSIiD3TigI'WKGX;Xqcg.V$MT<\2tb
%7+iR*.!:##HH8P<h\s0S=hg.TKC$\m@\"B"Y<aG+5,mArWlT/?$!m$79'8j\5TKVQ_,ftKI99-9MALGa7hLfn`8hh+>tnJFa?:A'
%jA>OF)).?B<QJ="[!CiZURYD\C]TKggU(qdkNta"TQ^f(dS6!/RP-m:c9tDSn\l_m6_R.IUPD:iD$middsQfcGN.U%PAuVXq_$6j
%]4decUMo<K5)/;*oBaGahK4XAcsn78"&:Hp7ZP)00tY)\LNSK4.QnnT3UtBT>kDIL9@C)@LSCq"bY-NW=J8OBI[M6s`c3an[Np4l
%15I,XPUJKB#dG:[>3SCsZKMNN=.em2SBm*uQ@^K\Au]o#=`lUQU4&a/m.tP(h4[Mg=!H><.\2IZ#8(t!VcO@&Pr6j&K.'rPj&\k(
%iDNVcb.C^"DqAN,%(M0KQrDNH'Oq+tX2;s4b(g3Zs)d2Jo]:IfW!AMF!EXNFf"b[G[n^#pan0DNPWhgb:^'sh7+30gm(#VGTCtb-
%o:pIqF<UC87dDmr=%^I^Z/da$adb;NEo'5d)ZaD01tQ3E`e93?=\V;,eRE-27Is@gp#uRPWm8G&<V8F/C:+k@Zi4(Yp0NO*+gpFu
%p+u[;_eEu_T[(Ds*-.!1kd3F0T0ip_D[rdT**Z\=W2\K'Z=$.p[mW^<$!Pk4p&nu\9Z:Q">uMocFg.,u<hC,f&RPgI,JZd#DSORV
%P>O=#:P^6;/I^"$>h5Xt:Nb8lFgET"QuKC7l\W#b5t@mDV3goFJDOb%`!]ci[&+Z$\4CI"U9W.s=QAl9QC_+Jg[JP9,Lp4mET7&"
%Hr_g5BbFYs2$6XS&T^j0:7S9.@4G_`qbU6+%^&k_.e7E@j*uY\O>.*s36n2>]Q0=M#+)V@7'egS@>!tqfHok$A.uMp_ec^@ABcDH
%2AAg4'oLkb+l[nU]pPQ_P4OAE<Q7]B^c,aBeKgMprf&)_;_oJtFo_'m=H^q:&UkL*Bu(f5(8rYJ2N2K-[].SQq_4<[h+ZX9>#U</
%bLW#Rp9CqS\rnmp/"d-19WUXFT$s!..(0t]#]f'4(?aY/_`)7&lWD$tBl!AP4&.+aNI+s3+*R/g*3$(>>4(8]Z(01R?O7k$8PBmO
%9sY#VPjKL7;+dZJ;.HePgLjUqChbt-,X48phnqoLOr0IOLT:92D%5<WH7Ul,[@!a,ND2m,Hq%,N\nu6)i`)Z5IHWN3)A`W\P7u5t
%-[PKe_+#qK.EOLTS+V4YImQ"fBTC98F_/E9PNC/]fu5f";,VlN'2))YZ[e(sfFXC/&kCA-SobWr6`P8jFe$@*'-,*A2@^1SChXl:
%I:<<#2Zp[oL:(B?F`ucPpmOu9Yuk5RB"X,YHu.ka8fW5U_/ha]Ff3LDrZ#5MW`-3>S7>nK/OGTmPu%"IPYmlH"H'(;jX"qmq@b^M
%'WR^/8NhZQEl%2+AZH:e5+u`D3!cZRl*4H6U6[=W"AR>P%smq(6JutI<.46<QQ6c$_d'gU:-3DN?eL%=6hY$1\Fj+sE.j-Z8-V,$
%,4"`/*-sKRAgf&^feUGGG3Hcj#2"nRd##l2m_!['NY(!^B#K^8+I<?USn,\#PM06YJtKJ&3M=ruEPUmGS!C=8CUQ+MXYFbor!h6#
%U!B=&F)C0!nFOo_IOlp;emO3t,mpY;NWc()[B;$?>g*:)VC@5:Pqsl&K!qnhq=:V`klfUg\:1T,l/Y0*;[95"%N"T</!]UnM`\s(
%*))-\O_YUgO2o\'6\15O$a`0hf'/qV$TaLs\J$Lj_rd[2Xnfc'pW^=pW]9WhW@Sk5mHO%8el\j9hu#SH'remE.YD!t@#gJ7S9W>)
%\&$<V<A`FBD"-NNmBWBXD-1ta/hV:-M+_";)E:T?nA)q\56D9t4#L01:>&C#1dDK5G#k/IaeTNM)q28gK3'E.jR8<0cd).+a;6oo
%c-aQ)/OZG"mk@%lkB?-VokkH!Po.6++p3VTFTF?eF3bHD&N6@.LoICG`GDH?<&2_TLZNjqr"=h1qI"J1'8%<9V=a.,9F"3=je/dc
%58nmPP+<(;-R5Luae>e53Tc9^LC@?U+5G9EU-jaAmg!)8Ze?#Y#@'W;&Oga4d"+t?X\0)pHl:Ih4fcY4.gYtZXp%^t>bn#;`lX1R
%;L:>_.5a"_Rk=+EDhBjj.-F$"`b(U6Ygu0"'j'2fqJ]'(TWY%GVS3p<(]3]1PLTb>3pKafVkd:B;0o7FT7llV0`=Q1#u]cgm$RqY
%o,.cmHHnNUoKaeE\d(_f8$/9*-'lk]UQ=8?ilM<hlnY/L6D]s(;.9P6POltU3U=6e>b11<K<HWUkelZcA",Foo=19Ib5a"nICia;
%"S5Vdn#2kjR\=Mt@2&-)7r"T=lFNC#\H_iG^M7q;Ncp)P2UPRA@;IF`7,PrF;.A'X2>88*RtIS86[j'A9i#ZObReIjCnWk^)P%Hb
%L0(Ag3sRL1Poa4,/fN#GQ*c:rYl_?HW*+$>>IX*m!VWagQGklRLd=WK/N'oJ9Hup.SS%Nthh7NgD;tnsXfe_$<1iYGO.2#gbS?g_
%UQcTNqC:pGFbmph.(W#ei_<S,>(5t?ebiMk.XXlXm/X48NJEs;Y:IrC#R3nH8=]W\YZT$T>;=:U#/*:4jQ`-m"R?g.&Ipu<Fn:\L
%E-Y.;>ftcSbE#Y2Vf@ZrS$&<.YcVV8-?ZkhN.^Ac.I54PB(8qdH+P!2>a/(FIBji5>i-&t%lb&3Q=5dGP-)@P@L5?6hQuG1jr?oN
%`X[gol>Yf89T&qYC@M_]1KXs^><G8L=?=]$o`r#s3830*p0dt*='jFiY18;.D7ba4b/Iu=V[bkqRQI*HJ']8s>AdK6+[9MJc>#1#
%@1S/A<DE29^;9+](D0Ht".N?::4cs@27fQ4NUS?+&^P"_Brf(GI>$&QP2`UkiA]qce+D0j'aK(4RlW4T*0"(%mh_Ki%[EbqVkKH1
%X%COYpT;ns7G16d-rtjC4Vjhh6^Ou]:KIPZaD8sRh(^S6)^`jP#u*GP_:@`b/`8J2>fWATV`)==C=PHaIB(`>FP-91,aVt.Pr2(W
%hIpbLU^X&)C861BL$Dh]-],tC<OHPXJ^TbQkM%ZjTh2c%jtY0<.,Wi%%,iEiqn.&4U1-e,k*0DfWi8\4mUi2J'R1nNW8%`Pn>)C5
%H)sG9NCn6p$#@Z9<21WT2Ln/^]3OpnD9S3-4H(]sj^d7%acI0U[e9T29X?OgkeTGGL,V[2[sdRah5,-,]h_"U(8-k;_b*8r(ce<<
%T6D"a_l=J%;(Zf8-FG`RS]=74k!R8tXh$MQ;TLB^Xj`h@JV<+Nfbf\SF+]<D[q,(!5<*ns&^D2eRZu$iB.';F@;WBI3?D>N1VoA!
%e+Gt;HIM-?'QNi^.WMEURu,[Ijg#7h=#g)En0Pu[,GH(=P'ZKld)d)/\"C(2,n66U8hAoHmgQ1>i-a6*UA8gC1Wh'HDGg,_-9]s!
%>[-43c1^]K5u\$lpgLscVpTS[mi.G\N9NbA(0%5XfTse^BPX)1ZN?]u3f$la9SA(1@SIg3j;a>c@g&,>Y-dEAP8krZn^FsBO2:&,
%J[peO.L>1"eXSnKGoC\?3*&JlJ0++:W_0+,!&jJr#9PJ1p.j.G2Kik[+dIGVW^>$r\1j$cnM&6D$$Mns-g>.]JtB-"6j+*`0g<qU
%n2p>P9k@DHZKQ%4ke8pc\OP&"1U@!Zh$=5oQU16*?P"gdj;ct32BN/_=/NqE+Sq.IfXl@Dgq.2g<mi5u&D_#<J6)27G7*FF#E!<_
%$-A>+DuluDCUd3o_@?/$$Y".eTP_X=P.UD<kqs:u;$JAaek=)T'I)Ui3:u!E?A`'pG36pZ%Lp>pK5nEb_eIjD$Y`dIdIaOQ*)8)\
%oAhr_FlJ4YW[;3IfW&iolG_NohpZ]K"cEQ>H0GJkpel,,?ZgWBf\-fi:'S6p<McRf&36M#EI^8di:85e+kWA?pI0*u(UID%6X%Qh
%Jm76B@q4NJ&A&!l-jF0rlQf37)*qi0$%lNP9">@LJ4c6]jcDO=1Z4N#$j=,_ej,ri?mM5-X4._SlRgbn1<h]oYdGB/5gDR$lPKp:
%F<qk3qcaoQQN[[f\#K;S33h[]fF:aO"N60'\5`FOR,r'o!43]mJFm>sJQ#F\L+GT^rF5:P_*=tlnd4!>TL3U1I!/M3i-/j'=GJOf
%_7i-'$1KcD&ImV>6Vel&O3lI.=PtK?VCKT8$mXIeXH)^VQtY4YjJ'UL2+%lWM:TYOe;QN7;CeHmV.M8kJZ'Y_>ZRZrOH5q+PJ"[D
%)6,C'?$,Ul)r8hK6NdlXb_;G=Oa,/skr(o&'A=N<q7^-VF%2t*]1IfjS'0'G+EhgID"2IifN^--_i)%24mU#N*g\`4cp,K$qf^AB
%X1N,k$?6ukc4o<A\cjom([>6saq\iQ#g5(G)2b[Ng1)5M8'h)GRlYjb:XNOtTTfYaH1]>lhqoJue7:=-p!A>&ol.SLM][c>o[`9U
%Nb7n/EUaKkBp/bmIW#apDGW.lfpk3!8!7l%BQ!KRg1eJeD+9G]*U+)0LPIFT^onCHP&;Qi'O_eo.FE%b]u&Hf5e&r\'\PAjE)*`h
%k0t]rQ[ST8;]u,@><&f1j89/jlWWAX/V@7O:g&r'j]QLnH*e)p9BpmdXX0eT;&1m*&oj&-A/eG-&VunO,JL^eH-CMX$*W^=d_WT,
%jEu)C@k+fFYW)\_gaK9E78q*ZbF,F"@O8'KhkX8hk=(4bFRq(<4a/S<9X&K_XZ+d\"YiIkY2MTgc0(TM44Om$rG#H*:SA:F:4sFN
%Jn,k3Ed&F!&&*nSRj\(oP[%f>YU&7`FgP/aF_@D/9pIWp_"cu(FJtML(7+`#?3T,K-o-/QLIB\RS;4/&;BK*@'uNBVI(NA0h@<!%
%3/?qZml!af]5\>]<TADQrjEeunmT"QG8JCg:\,#n_jUi.N=V`J3C]MYhpn:6[n+$n/sdU4nOD9C/c'IU5mO?6HMk(Olms?tE@ds'
%)j]EJoYo:\p^2J:m-b"@:6:DnO05A/[a6X-b$&Hg]EiJ-f*+cU]O84V2J4f)$Eht@iP_C&;!Y@e%pY>`[TXjOL3h1PB#491/Ltfg
%TLtslUSY".[RdQ?lfc@H;XQ2t6e>IO3\htK6d<nB`RD(&$SK;.l6tE!Hi=3,g'f(Kd6eJ_#,EEHd7pt1aXU^l^UTq`-mkp?RN%bI
%dfLApYd/lWQ3"<8+HB`NTp(80?u\JOo?Ij?]a[KWo&\9?f,0O<jeR134rNbHO<^XcJdl4YMcA6j7RY=VM:IC`C0Vb<`1Ao;a'$I,
%7s"J9qa*4lK<JtZ&2R\%lDg`B,!pIhm5,O8o4`a[\0=/mD4R0NA[mZWfS.d4oMBNqgq'P<l#?Dm:F"&'59E9q+0%);bmCnYkDo;r
%Jk1c$&N]jOmPGd]'e'`&rIKm'S:eB2Vb/p*V]LpSD)!,>@_EkMXu%3*2;Tss*A\-PLCiW&@fO1!RD423/Gk%$qO3FmGQ`iL'm?aT
%[3b5L#DE9kedD[i=@N<JV.5t1!Xp2>_=4ia.:KV#4i3\:dK`fP?i+DL=X*$E=[LSuY!0;1P/BeHE57I4M4W"dN\CqR,Pib3D/:TN
%(tg<!#NX)a:9N9f5iOK&H5`VkrCef+i>cI=j!KeOC/PK'=#gr\aX=oSVW%i`iFg5g(/-B*,gKnM'KhmZ"V8Z[B643FEP]$t_%t[c
%-i&W-'N6e/G"bgk.nI)Z5bDA]?j9Vk_',7G?Oi+TOQ^40T#nGW/0&s+i$ebKJA;pG0tK;OgiJB(ag%`QBY5I>Q=h]!n9,I,n.,&D
%^d&$Xh+tq1^)0CBHn*.P$6DlS+U`G4UcLCr>O/GV>'Gl*mC3D+3h@p-:2GgU%ii)o7GhrCQHYHWaJMdC$[.hSOc<4#fGmr6\h*AX
%KklL)edSh<RLNCUI!W+9Z)jsZ[H!Ej)654f<Q%/B@>idHrUBE;3<[qm\!32OEVChWPC4su=i'86*33"Rlo<#/i94U#""2,aVCbj,
%guda.$7c*(1Y+erRV&Q99:(9^#j2Dn[4F-$=\nn2r,0u)5s.Xu^g"r72VaP"@nYl:9L`"RgCqf4H-2T=cK&COfj!BT#!;$cgO&4D
%V$."H``(lM)DTd8I$,5&CD.:].`N&FlR:LEP:\]NOp'F9co():_B:WpJg"gP%rff(^C9PqjR<K(@](S49J<B\IH+juQc>_"l[ua(
%R0\`\T4Z>-<1%'08G`%EZnjdg/5_<7E]&`b@t;<g\W"ijmlXmGnK;8CUCWF^BkBe3(crILq6o?6lWeG=\^IiIP._B#gNp(EP-\A(
%&4u$XROXI>2)/k.24eYH\AVhVk@FFLgu[soZ/Cri1n33q3+s&$_d1XV,("C-F@d'I1T99OiS:MFVI@?0_/,7b3VHF7knmBc'JMFu
%6a56smu<r-*?3j]EI3Q,)Q[SVZ1l3uCmO;WF=L-N>s?Kk[dmCNb_+@V4Ig_$1NC"C4LI5H&eXXQEt;4_IIg4l#Ua(6`K!ObdYVXT
%6Im;h=WC?)(P7O6bBD8+BJ]aMJsJ;!&l6sTWf*;eUc5`p!W\4JR,&Y/4mS-p@!:#Q0%9q.S<7S9CV44A:"N9LJd6pr?9JNL(g)WO
%QIcc!)ll@/$VX94!s_TQ1H,H"0poI`BRiJECu2C!@7$T`!(^3XM/]#AP/^MjKEuqlCas$60!E0p\o*m9MlEOT,.(_u`O\.8R(amg
%mS,$3I%M.0=H07=6rCSIpL-:EC+]Di-8qKPT["o30!!mh*aAajE8m'%!h)!e%g+N%*&O:>M'LXbD5gr"7P,URgIdGaP/RX/&rfU%
%;d=#?cu`VE#KH`<d`"VoZ7gZL"Y%j+mGYUE9OHqS8@So">H0BS9l"&d6+[`4Q-s?rX<55ZUhW@UW>sI,egHs5AG<eq^"*i(L+]dQ
%D@`9$lLaRt@6h-qQ_@9\PchOk8%roOU8\m!*kX5+G6$7lo15C5r6]8M0R"_:-]#Z.C@R6oTr[o\;SY#^oGXCHDA7qYBL>i!:$Au(
%`!'=)'3d0:.?`,ILeYu3#]#I4?6?/hAuOAf]`:f+&n[k?;%q5qk\Y.:"=PB6Na?O!,.?"g<"S&nqIk#@bMlNTqC8RE4LWj9qD/^@
%CcL<8AY2fEZAF,(U_'X=L@WH%Y?7p.Y$a'S_1M$h,q']<32'ql7d7arnF(<IL!UFFn"q;U1qW(^>JVU4et19oQ)Vqg5's7h+,+7)
%:E6Rh^cOb`Z0^0K2dq#1O?Lo$HV#8P(7C<AXB^]TZXJ!hTFS2fQ%20O8@Wr#pgF0$,n`DIeWlM,*=>KY_SsF/$7qk`QZ*/eXsm]3
%7=@W7X);X9HEqWCnt^sIjKLnZ\8RIR3LbQFD$Hlqe#c>s<?]"&LLt_j;dBW/frEtql/s;0l7.e6D2FTZ?`h8VNa4HIR^td+N'8D]
%RN\>l8OQjsDF"OT(0)i/Dj3F%k<==5/%ATJS$j%X_aTEuQ`Fd<cG>H]Y"As/A3iPdR;Ep[bO*@?Tb,=Hb,!b&;II3MTq+,C33AE:
%"n&m;=tT+ub>kjYHSG;b&\U:mM88>LmMtg-_,.k8J.L>75d#sAY!Gp\*2EU+0GCe]B8c2Hen#C,37i6p.YnaA`N&*!(!a6)5dRVo
%UeCDP^1[F!d55OIKk7?P0RKa9,qqbZ/D,%55I![<JXNH?5i>?1'F)Bt%+d#q(l29qQ'c5FGV\Pi#AC:g),tV1<Sb+Hqb=fjh.tUc
%O(8a<WA&8rGe?$fl91#;%`<>&DD#1i^eC1#.^H]):?b*P]''QR"4rL@6?STr2k,`@l9LZg<+"(6X^i`\;UA*4[,cW@`?8WU36(2l
%d2#-0H0YPfeKkm%gVXe]C[/E\IG2A>kK;ZBLXi*.<HXh^Kg`8LX>rKLM]^-;`#OjU^iVN6XjgkNe6"/!@YHl)Sf6d"AM2XGO(QhD
%dXW)31/;N%q2*TCG7%GGTK)XqI1Xp9*u`:R',[JVdn3>sjEcIENT-O)`d:0B%\%6mPAP0\UU=Zj;g"V>Ibeb/(,KXBPI)LT0Of"l
%lMJl@q2(2m,EOn0`8]S=@T"GD]GA,rP&G[$hVsF`.[FD%-#(>;I5\0clY?4%'\E)W9BC]h55]gkfMOnPlVl9fGlN5\L0^)P9b0^s
%?J/3jK1cH:PQ=&#k1iRNL@"oYk#j6>3[M\GA&.;aY>U4#Um>##LX4X^K-")4+_n5jcUUXF0#%*3Zlu_pN5Ns%T8(HUWHPF4;h>n!
%XR\dqB/_*rWY&i3DO$5agSg^U:jk*1$>knWSO_PN>93cYG?-iF2LP#p,QC]#?&`l*nNsD'B_KTnS^t,RCl+Ea53c9[/gmSshf%1G
%W)rsiS(#%7QBP:Td]%9na\]I4nhp-XTjBi-Hi=[>jtR%?\6Lk1c(c#K=A"e49WCM0RYn!kE^EXtnVMU?"<erV1[m8,\ujXHEBeKR
%[@YA$Ll&Ad%i7r`e420]7i5[:4G9]H,*K$cC,O-B8tQjTqEtBg"u.]EX*LA]ee;P^r*]tpYJHLNTZqeTH_..#fe"6Ti2FABTB3Y<
%-[YRYYlZ."/b:fPZeCG7??G4dam_?ef4mD0DF\oW]^5(&FH4([B(iL<itKO[S80`IZLlO.<'o]c[OD>*H_uaC0H>"7\_YNVX6`K4
%gVWi"<L<V8m,6,,./*2Q?M)SXHFq_RiHbs!VT97t!+K5&%p%OI#O[,!l"l)Be1hZ\o8.'JU2LH%Qs7:>"Df[$2njK/LZ`\Ee^N3&
%A`5#C.j3ZS+!d+iCsWfqruCc\6gcaB.OdDg4V)Xa_Bje9h>o9ChJB/C>7K!6k$#h1(J#sd+^t(tX=1.2_)rI[a`EgBXb:eXZ)Un[
%&c4(o!*+5VKXB!mXLk4P.!_4^/]2!WnKRRf]`LO#[No*#fS!k?$nlVdN]r]0Iap8WY;dsoAo'oZZOW1V.Fb$NLTO*<oR2tS\`GRu
%@"P\M[sg$B=a)D!IA05PDaIc]^SmQM8jnVlV6E=I"^C3]I/s5PFY@T!e5qbXdm^QW?68\qn#VaG2kf,kUl\RS7W4K!Uh.*>1T&g1
%'WJ\gjZ%mVLFos.@-i"._Hi6Q@X2g'bSV[/!`Dm+O:0]e&2q%Rm(CK"="bCpq60#EqPrr+:I7-,gZJEQ2Rp8JB6fMhAOg@nAalac
%Jg^;[GhB:_X+6TYbe``TOO=6r?O2"5bO?^/gp!>bdq)ol&o>._-Rs_dG=TU*k))UA6Z%<Aa$]>&#gb<KAburp,CI*T6;(XcS-UV!
%+Rh3G_!BQ0Xqu!7mBb/r/2Ep\LR#:)*@D`T<l*1Pm>]G-%l@"_OC_g_]R"9tbGnr-eQ0'l]#FF02F.WK#SH"pkeUrXc%l#4R.404
%_XlVa/[FM4)i8;B.a^l:V]E3!=oUrEfQ"SA1/^0qg&2YK3NbDenpO^d<j9?^j\ZjKfo&I-mgus#/.3F:4\_lAmD\F0L0e-._o`(:
%ig(<d_$Z_aHi-&Z+eINO(,n1Gcs72N;fR]XV5+:3.dlY6Pl.P#>V$k(a2!>T#@PY)n?ObLN.?c#e+#tD%#RJFEJ7CBi)oAWP?cn&
%@!I.l!&2fCZ<5[=AL62s`(%*oRXR-teG<Y6Y]FRf&)1C6g0Ds1M#eZ\lja8,B/"#BSqkX=TUSlYO)E,Za;BKnfH^u?YUeSL,+VD'
%^*66qQ;q7o=B-d>D60R_=W#j#5astuXUUUZR]rb7>g$tlNltJ:,C1Cr;BtDAk\GZD9ebd;(QoZrYj^!/4a(d*A&LG(]XO'\Of\gD
%2W/*0I&WR>h-:gk:MuSnQ9gkKiRXOL4,s_a^lo_gS`up-K^1%A+[es-dAspE3%Z/!6RVM+KHdT<jM?`>F,,m$aM_gSJR%Ku*"9;Y
%<[!Q48<;$-cl'5IX\QpB)ES18XjVupBq>L[K%Zn/;5AuFgZreo222=FOh(l5o-NFYpr-]o9Jl.==GW;B<2S9*f^?4VqQg("lS3dp
%qT;Xbb2/9ne'*i]U-sC\EqE&T,s(,HDQie!4CKeQEmobh,P\!=aL]$N&8_eXP2-co[l@UBO+H?Md?HH6iNl6b;m:DZ@V%"V9^F8q
%cF&bBN3T09!q@&TPod`%UgnS8D+>!^#6A5:$l'i?AUFKIeV40MZJLu-*3?eDG$V-8<fN.Ba'd/:fSY)7a1j>6X*-5R&X<f$_*e[Y
%AdqP<Q+#r:EEg<sAK[L\Y-54t.!]C[IH8(HV.CfrMmc3@6cXk4l+q7P#2c-$21=A);s-<P-rb,'P=hbu`^KUTGX!Q[<O<)Sg!<MA
%k*FP4l:>4bXE[FD$DZ1JEk8Akgk<!,??4<"=.:&-Wh3PZUaHiP+kJaLR[qj5\=BmB;faT]^&*qK9lG1di`:qp(O.i<V4riJo:jWI
%U/\?cMX*f;jI75\i;o?]X\?kr9m<qs/Q0E/7mdX'rPWMmI2V0CZ;Hj"q?S$Dh;0>+C/e/;QeY9,B%rbsgq;LG9WIq5)fitT$6OU:
%MADu0DZ)$3/pRe-7Jr"l?nj_kC/-]I,gXVbHAFSAlLWLc6<S60XVC+;N=MUtSShNI*VWg:L[c51R6@`hWjSY7_/c(.->t5Gi7I3k
%1[c`2DR#\A8euD6hlJk)dL`f!HhPlKCZi+0mG3M[5&K2S2Kci5T1NtH?47O[3[FCILF:b+R9naE]4]Pu'9DBqc!*Uu/o&q]c!Vh5
%>4fIpm.X+$h(5b*#MXl*C!sksU7)m.@N'+'rO09c0GSlFJ$()uhJUKEE@j*4G2Pj9W];/.XE.\;^g-Gnb''pjl)5B"PUFY1i(cc(
%OL$$\hVY?0fm(]n!'aN48Ek;%>4UAJ9M?f,4V9c$afqRQQuaC@`8oNJ?!H0UO(j.9MF-7_6,\&8p/l1TRl2+9(Bk_+C>8SX?Ht&O
%Em>Pi=Nd"lSmA\K#!dFGck,EikpRP$ZCa7u9=$A#6W,AFqV>1%n$4R7-Wc>6jO)s`23lNKfYjmiAM*.Pcrm,\dFXs:Y=JpJDTg66
%nPuH>(U\%A<bLPsJncmDDX+(nI=2Wo_r[tsj0<3de!FWY29&jB6!Q;"LKuU8P"Xa9`-8Oj/p1/Z3")D]e_aD<[dHS8R-n_%e`L?c
%OCR%(*,=ZI?o<%"p%n>4Kr7A`%*$(L]NK2R6;c$:5q,.l'-_Z)-dSHWT(%FfY&d.]&03*1.]6#[fYj:GQ*H*V7r2cXe!gRrX^54U
%G>rSFC$jXaSl.ib*4k%WKIe!'N,(\bl2aL6T1RV\XnQ6Em/oY"mMLI6X#`/R>-sAqSLY.rg0GHaatDL]j9J_Y"A,/%k^m9Q)Y$5!
%)DUBTD8D,F(/:l:a(dA^.%gW>p%qE@6,A!=_h8O"NJ#pV=`;?*YgG^-DCNQOm)V*oh(!ojUG4>aZ*!E9.HWP2fcSI.[">GC`/'_N
%R0Phrh+GUgJdi61Z2+qfYBML*<t/1@g^@_<bLGsaP,t?D//59a,2O;H<N)a/3eJ601jD9/Uetu0n91mb.%_nlLiVo!K48<Gc5sUj
%P4*Q9`^/`(*9pQj:sO@YNMWK96itDSYiem^`,lM9>'MiK<T8nJ'*bTto_(uGKECFKZ(dF[m8Sq]4We9Kf*-Xl'ZnD4d-dsO8$1P<
%>PYAc2h8,iZ,r'4WCgU%!X?W[[YV[X]rn[YrX=))@^6cWj;(Suilm%rh94qMOoe\IUR=7SKSd\%ZFeMK?3*=7IM38'141aj'$BE;
%EtiL.S8r%:-urH6F$:\#F3/`,Y:eo"8qg9ai`5HmU@#hMg,oD&YK9)P%pk_P?q3IFMm@%8Jkbh3TNAQ%*q\.NJ:=bo^p[A0?4"lY
%n`;Ho3Qq`X;(7^f0bksREaj>MqgH)TM!6UI@7EEt4h,oJ,p-ppR!2FmRhAr4T\rG0@(IXJ,u$L%@\:*&/QfO5*+<&^c$f(;#[WDo
%UQ8kWd'o!AW$=]diokW('Y<hKfo",A7#7FcO<!T-*VLo,JqqPE3$uGrRp=;A&<4>/=[K'K'RfgP6P\7+[HmHn!s1+\=3]LTV,d8Q
%$^KXD8F%k5?*c;L-dZab7+)RG@=%Y;JZG2#f$&ArE#!Di'NaW[g]eR6kpGGmPZ:HGO'V0kI^N]Pe(j\[*.D!)KLP[$*Vj-k/7.]\
%Z0_5S@E\GC1ZPbVO,d;F8'Z`#%*k424q<<\/QtOC*R:Nj>!='i6he0k%a*@;.!E>Zr=`Er_B\]M`n+nS8hSsEmSJQ&-/30VCEd]-
%.^Hg@92%F3U?f/oQ,6`M(oh:CI&DC'RT5Y73R/JLRRB>L%0d>_rr;>5Bm\@L]&7s"cf>%56NUjUP"Jr@!!0E9QEZ&pOLEtq_->X\
%S<NdA;t!m9[A6jX4qm'RhqZD/[nF-\].\mQPm$/?HmP-Ue;bc'Um,<,8qdec'(#T)m>N_/pu:pm@mpo[&JYE_^I$t;E2;2-'?:$f
%bT]>%W!-,L+m*-42\I+-kLkVG$fH"O?3Qc_/5cu8Lg)aDj<=\+js[V<)FV&4m^^iQX5<W=(7N2f;6rTXCJ5:P.-7%AFdqn"$>CQ-
%@mjiVBZrH\N=38sQ4pX$78SnBGhTOOoL(-^?Z6O0PR/de#q?/o[@j_B"_/t_n[IA_NRaLhN1t3.!n/HR.B-+=Ob@F"i.suU4<ehq
%OLn#nHV":#6@`dGC,`m:QE6QUQ6oL\cY*Lu!3-90:s:B=E`H\NC!rL6:hn;C1plMF--_8(Kf2[`ja5-1>QC^WcHKdke=/NtJ+A:-
%HpJo,.N-=4i@pQn.g9lB%XY.M=qc.V]U;kai2UDK+/i=tF1$i+*\G9fVU_P:Fq$u`WU,Dk\QH"LWfE[%;(KnuQ8#*Xoaa"10KA4?
%'J>3X4,g&)@`MFunMsu4\X?UA#m0A@DQVo"'G14^XS`'!:4"Tr&2`J/_fJZ31DI<?7.FM9auQ>eeGUp-R<0=6Lb:.gFja5`g4gT,
%ec[VDbu"2$_R!@#Sl"Z.-/B$jq,2`_/iNaFiuEA96uroM/1soD.Z#"k9MM8sTdEK6@:Mjg:I),Y'Mm"2<WAA<fL##B"BHg'.AnN"
%_6X`T,9*A$*>Il`A4'<J@*YnTYRg"IMn'(7'gA\&,iXC^CXW!fa<g:q'MH,o`0A*k`OZRXGm&:gn$)#hi:N"TdKbRbQ.fpq$H`GK
%,0->)I1Tsl:sp`a)1>G(EZq*/cD780U`K&-EKi/!-RBfjUNk-CJW$^A7QdZ*CPm,=H7N5[OIQZQd"u`8(!IB:0=ia[GoWWK(->\<
%WAu[(:FoP3:ISi^7N,3jWTkXd#WEFFA'rh/[>q%nc-dZGo=aZBb?.=MN'8&jO@V5L^/BWhlEG+l4".n.;H[U,bm'S(KbKeD'5/8A
%*[actR?CO2">;X_QJ@d*R2qK,j;pC=EY#]9h+!UfRp71,;fsfPR0Ls5Th<l1kY4UUWK"mBm!1+FWaDS/'58@l*M*.9\;+&=MhFk_
%WCGO;Tt/"8!O%u5APQ`eeDK9+CG`/%BgQ/sPGkBQ9"kB1o]aC@f(Br_Rj#/YZf*71-oad7DG9QfKROd`FV%F3TJ%,>b%VF%D*YCb
%'kHEIX_$KVp3q*iE\VMW3dg4R5m'Uimfd?%2<(L5dXuF16!gBuGY9>S)Ea9iIFAe"M]IHkZ430/PaUIJmY:NBHGa,WpH<3>B$"J9
%`b=M!1d#&P,79\qi5cd=B;DVp9b7LTi=shHY!Psb%DM#bYuiJWI3)e#6B!+ebOog)&QNMo?'DlC.b7i^#UWE45/]>K]8SU%9cBi)
%JAt/+/?2)fRTO'ENO"*>6;1>:7(d!GJ4DrK0:PXS-C,">V6<X'\1f&=?gep;QX:V-E>=&EKa?-2AK\dS)M*WGJTV0nEeY5$@D&]n
%pWk*c1E]26CCfF3k<h&1>Hsek4I(b'XFsDL<?)'&&gNuUBbO/)BK.nnoECmc4cEh1*[4KoRBX%!!84=oQ^f9#9[u6?juA=L4"hhH
%;@=aA"BVbOZR/QX?7,I[b/D_?;\._X,dAip"Z<Ncjsn]);L0;#Pm&Uj'<>3W(TpCnBhL>.CTr\RK;sbb,>*Jr+pt*BHbtOXWETff
%3SK%gdV3C72Gp-WZ))?!bVu;kX-]8);!Hqc3R7oam_rjJo&2iTTl(0@CLAi=#7L0@-Ia#;8U_SWBu!9b"l.4%"H(WCWW92qG7q?M
%P`jH(2-#%r9r5l9*WuhU&EJA)-j?,i[<PiS,p%XL!s^JPOi9"["V7Mb4EM="Zs+B^5^NjW>B5#a5-u^ee877q,4nG=KOi7nKFS@*
%f7DO&'Q2;XD37EkQq<[Fe<NgM8c"+AYq!\U>eRL#c/,$+6/`D-)j2_lSVKg_kb/Pd0rJdfTL9S4RTDMk2#gTOq(oR:9XQ@\WqNYX
%KVhdXJ*t;p63J+$I'-d`M,rC6T[[/e1fk'/X$$_5Q;c#2QEq,L]$UAg0O`h1>V-giH\=D0U2g8^auF+'#Ys/GoqAL(1:,r$U/_^\
%eg*>UgXVl'!kQQ+g[:8c-S,7+i=X32'4_GDnt93go0Yd8Jlknc9NJao94P86Op,$U-EJi$6EV$1ZZ78u]m42NaVX6'#DoU?b6;9!
%g!I\_(j[TA>'X!?pW@cU+UaHmjLnaJhit-!!t%js_XQ4LB8Ms,9!Xbb.1osUbgK6!5*M(:X.lrJ-n*;<'p<mBj9Z,idf>.rD:XNA
%'%>o8'+G:]_u9r2]luk2\0b0,e7&r);_"3V`'M\QcBiU`Q,9[[9!"nJ2<ol"=fF@n'6nlLIhcaL0M2A.,]E?*$XgUqiY$S2$rWh=
%?P:\'(n[\MgX^=&-.c^=;B_5f]48WpYd"q,M>9/">/2$hFs]'^!qXPL6CoG>cr/On:Pjn@_,QN$O=d)N?g=6bd)oJ1MbX9HM.O6/
%+'^8>.i/r"oH;+K,E`RZ'oB)FZ_TirWI>oaatd",7P"rFqDN_9HO`+AW`@358W4Kcq2,:laIkeTaQ'RPJWhe<X)'I4W*FA')NLHj
%?n>H71Qr$aKM`i,b;'UT#""82H5;\u9roZfJ-ogtos(cJTtsi3ZIn8-0It6NCV=QqYe#s-TBL2-eCBc,E-Pe*0#eWu%Q__MI22A!
%F+(GQ9OR(4mh5<-#a.1qRc+9G+=^ZQIJUc:$ZL?n)*^PkSM7ZO>J\\m=>d>@<u@a7L"0n[>2A75jC&$\!NV'7:S.@Do"G3a*UHQG
%eW=9=8cl>\8p.cp;=:<`r#?X^Y`r@pg^S1@U(P%W9hH;GGeI4RR6Y0f;J*"p0^56&:/X\.B1us-"jET1AAVO8%'gqq@/>]==N\nm
%%[t-.Y"^a'-Rn]u-X'Fp.CFDG6C$+a"04k=`'kQ@9:WCIP)5=`)Da)@NWn(fEWKniF@sN.L/OEp/n+<].QiY)s$`EUXqYhH.ch16
%N[[U\ZRVlOdG2smK:\0*\5^Eg,^JoJRFuH1?Jbi`$m0O$fUD_QYq0?5G[5J$*I2[d5,E-[a2]_#Q$[+6->)hc=3$4J+QsZA_AHg#
%L*!Ggbk_,SL?#i7Es%\S')'*O4OL6+0F%sa`WD?l<X.^Qi235Ue:^"fHsCaARQ)^p=B8N+:3_:LMDF-p3"Zd@L$B'ld<Z_B]Qgh+
%,VJ*OG`r8ae5RNXL_7t1@Isc>,:R=Kqj;hr80ei?bdKo9>%pP[0p<Lh'Q"ABP!M#SDCdF_(;eV"]RO566ULED<G[gl3DmOZP=jYI
%]G7\b><._lVP0j*UuLcVNO$5e/P`N,30%(gfY9qU=Tn"S`ZD+T'EpoKVZq`!HQgID^b)@a(1g[Lj[`=R[nan$"a][sps>BgPZ1pu
%9dZl0BIjh?`0:;UX:t9fL:NR3@;a,2:@NL+;0kkRfnrqcjBAD/a)N$=?BSF$:UI&e]H8kp[TZC"+hmj4[F$`RYUJ(3PZkUTXh<[L
%\71sb&W=Gd*mK#_=ef^8.Jor?i1(B;:bS0p[13RVf#Es62?9fNM+aKI9J0+;&h%/Jd`PM;l84)c$q1Qi*8!7VHH7nA'iK!;G2q+K
%Kp#pZ#49<IMLuK[Y6g_/IKYS0NJGb=5Z4pDYl-tcRKBM1H8jIcnnZ)\YI_hVCV5CF(TWl`O[P7<4VBB5__<a;AW&^fUn4[A`[pZD
%GUZ1GO;\E]"=,J:pf-#VTk.p?9;,_pUC)LXg@@^Pe3mf3fh8$H'5*Ve;6_[J$jYsJ"<ac9C`MT9!!@-g<$RM?Y\jn2jl2k>@H<k!
%$#)a%qaBa[-?R/9;`t@7Es9!C/lEKa&e/-!B+lQp!gp<:_%QI1AcZt*>$&-,Et(X=)]\ViBY!05imM45iFZ3E:,C/pDg^rQ>f'"h
%-$`S\1_7)6j=AgbcCPm(f,4g#%OP%B4e]\PM"tF4,c#u5:lu,KMgRp()IS7fr\qCP_AZ<([)EV$^utqc0ijVAVL?lKVH.09XJ&=G
%QcLD0X:)nL:_2JT7X>GX6AJR7Ysu'JJ57UC%e9OEs7'2bYV9K7I27aIZLo*qTGUuYcO0WJ\;*HuQ)\2`&I"ZsnbD<R/^/gr*Qbr"
%Kh7+'^INH$6KEbnF0,h6W9g#8P(!ic*QK[MNJK+rMU8@.ZY$(hB.,(r-Al^3$pYqtSu&kS`fo%K?3^:f(6TXL+0tWK/gsn_*jUGK
%'VoE8'+tiE6M/rU671oIo,?OM[1[lH$c!Z&Ca16Z;@;4?*_H`^J<S&2<&?*O@1o)DS-Mn5;YS*(8=i/,KpK%^&<QjLXU2C6&<!6c
%<cW8s(3*o:K^9sH[mDcqTS&"@,!hoj0/CZc3C&/T/8nODPQZi!0chbVW@]nE'b`BEO\i7o!E13K/BF04Z)t:DcVfai&=fN<0]<=H
%+gG!iO1;.;AG&ka&[/(YW7`@C9j"V@+S4]E,LY<@1Z]0<?cU:i9,79!L1mGmn>Jtfj0b\#F$qb!IW_Z!YcK,T?nR%8b.&<5GIbFr
%9L1M9dY"_,WtD773e_n<,]aO-b9Co%-r(hAml5,1o6%TU"7bZ14Ot^9#o,AJ.27+'@cbDh3>%0(.%Re4n80H^(Mk%/]Z9*cD5n5?
%L1M+rliLl$i2P'`X<=2[LU!RY%D^I1!@0?;2CmNi_JGZd*&'1I_U7:32PaQPDVdB#CriZI$c]Ho"3pe0cbXL;G`+rqL3QK=P)>(=
%3G&KU<M2p)6[D9P@jB3#nlcm\*!AROkVXX_&GaE@9]F638fhnd$E$,kXR0jM^g7L3<IYnljI1+sIETTE%MqCYN-HKkLoAQE;V5#T
%828)=TLKMQEm9XT&rVEKkGiS^ABrdeYg3O//(RO+8eVeiN7C<9li7Q+q%R1t/;9Tci0:c-0%Qgnj:\csXg'31_b1S\,+jKVF>Fnr
%6blsmW<\Sjc=).OlKbtiMMd<b+93&em=XX=Wj+"#67$<8AMmq`F.F@5%+Zok<rBC6G@K[`EXbBiI:j5,)c!D%)'>BMY0-N'I;TiO
%Y"<kj'3U#<6tOJCe_ki`N[aoI_0eIJfG;T;(.je_J955*+-dp1p*r00Q]T4W)G:5SUQ/HZAP>trYZ`_/koB7\oi%#?.T3[.d;j8h
%:W9Y_PoM/XXb/YWT8OsLMPpkb88q:$9rV$h6Ho^kV';2Z5XQ,q3@Xm,AZ]MEd34VXXG+t.AVJIVK,UtU?8=1q[aHlt\gaLhWMZ5`
%QD4/qP+W'*4+YA]X<b+2O?f&mM,,ci_Ff&(<8VX*M$iZ:<nL6B-3Y*A7-Z?3lI$_o74/`$;eY*R%8o55P(USkCp`mYR_b5#ak[m"
%+c6QO_/+C+-8]!Cl?<pJ(6BuH&>Fa2%,Y'M[Y)q-80:=KAgj(e@J[2R;dmc1mOCVAJ/,p<W92&aEsc'oQt;6T1_S?c(X*g48RQk[
%ik#'$#oIN9kpV][frV/t'/eg;co7mWJOr1CcbaXY2Y<l8'gXN>qQc4(,1j.JE6_p,I>)u@il=i\dlA/BjQo;-KM!bV0i5,[T'?^k
%Y2>U\`*JL?"k&@X7;EEoj5n;?Qjc6W],@$S-@eAmOLIPkN<Qje@)Q16OHMrCa9%B'nQ_nY[.,#uI1Bki>,9$e2mMFb8jJ\LUhi-e
%OGOO0Fjm`r,#!W>\Q!7e[2as%a8[>"?XpIuL?U0d?P^t#a(15t>_S<qMm6=.WZI\XZ:qf6s%IhRXFDXd`nZdmdA1iFlrmF=3_V)!
%f`a\D4sB/6f=)7\f#$""5_<;b<g$,QBo,=i*"Vp'EnP7l*_C9HLAB[K6T#+]Pj7*.>FA*+.7jRG5cW7d`TmDCajlHYo]Znp9kDDB
%cPTd,!Me8U^H/2*T+@*79\'hX3;]9O[J;NF[+8MW'NhE:]ZR(EYt1+E;Ocme[A34bCK)+\P^Wss$:e8s8eRk#ZMJHP%n:*E6:sK(
%HF'F"guJlWEY0+Ac?$Zm"mI@XKZW=Rl=HZs-Lt'XmhObq:bl,5.g#rM"3Ae\8b%Ba2_\Jf(#hW"!^/qL_(<&ZKoabHo3CZY;j^]>
%FJnq<HlSQN9R"_AC,POCI4cokM[<&6k..^`YSHNR#!hms/:pJSR"?kJgfS<tj??bP:d6F31<6R7jPmDtZL_j0;&mLd0"PM+WB2=&
%LfQT8/.=iLn$CR:Tt0p/ZXImQ4K+c!nIp2NiUKrAroW&`bYh3r<BmlZ&(!pY8V(:"HY[X6FRu:JH1&So!#,7!#6L>.%2H;R,q0]t
%Kl6Bk'420lHa2;Qo318$"00lij;;.1UMpDECQrQ7do&iT?j>L^:hmda6h!o)NOdIcVV3?R^/D-\,TJEOK*M^8;_9P+W_+\\%;[o>
%aQ*s:k5b2:o!O'(G*M#X"T\h\5bL9^j[^ibpjin%b4Ce=UG*T*@EH1Il$\f\M&"Gu/#7'/as"3WF7[k@"Q<a&A(UO:^dU9.ER9@V
%8p,X3e=0KSrE2afTkL7O]op<XORuLR/I<[VpL9lX[Kr\>KH2nOVp1>.Uu5I?*lPhB;RE7n+L.,r*11umqAMd]NDc6H%/8.CciXO>
%=Q4u?a@%VYJ;b\DE)]-KbJGV,XK4`:>-'aebg%^I*(jXG-=qtO=EW3A"!u0Qo'MF7=ag4fBY:f#Zh9?q3<IX/g(8cS:oJMm+jMGM
%YKS]abG`->U4>Zj8u?>3j-#o8PX$2Rj-m9hPLN;kY]BV]^JYEXB_bFh6)>LG-*^8aH4rX*7'VUDHY/_L_>5PiE'T_u)YoJ#PA9fh
%6M"p,.Uqq)'[,(g#$:&<)JQ)0P#NG`!gdl=P&McN\W/%l]"ar9508H-FI<tE.U7$<iQ"D;VcJW\=?^57<7U2;XZm-DQ^nr@,Ui?Q
%b>CQ0<HcEsg5?q-)S%]];G:.Hm?3OV9]c*X8VC)Sii"=NK`cA%TYr]UCpL(igAt\pa;H'@'pg+8A(?W./)Er$d@H6;;P-Q1:"8go
%rERfREhm(PE],I<'(CPAQ9MlAP5$4Pr6&\UT=<QidYUqeAn*]+AJS/c:h>&G4J^*Kf>2i1)@&reZ!i$Z"9Oi,Uln1cB4Ws6Up8oh
%L$r>j0ucgj%@5W=ce1oI1=kZcb]q-BmU`G5:CW[oKUiC>K-<1BJ*'3?&ou.$JCX'tM(aikM\2'`8UKsdS[a8\@khsKhXQ9$UN%R]
%Vc;bRjMTVBf0l-RjT2%sLY-=BQ8f&X=-*.(,2u:5XAP+6A=0ZB8=%WK`c>:C]$mtRJGklH2S#i.:g"X\5bG7p*s/,3RVN1*.G:#K
%W$HrSMM-rB0Sun\2"upY5T*L6/j\fu@<EBZV(Z3Y4`HZ/X-it(N@5FV0<+YQab?BCbhK`Q4[bFf<N2;i>@F>1Z"+P'50ZV9k/i9:
%E0t!(>Wr07<CEfhG>)-*363BOE2=IE&0T"[\Zga+RlJ)SWSpS0=2]fRb+LXF^jR1,C*Dg/8h%T>$u,W7@\&gg8I(;.'ge%McmqYM
%l^$U;6pRa'jPs8f8WY][R<lGr+9aE18)TP.Zd`.dREtm6_R*pBPAGSnp2&1Knsg.h'Tgfq<AZ1.gsSI:,/R+;,A&Nqo[He_<GSZ]
%lc`7$8T3.?(E=PSStc_b/#AD**YFC'1utU1&m4Wq-!q`Bf`c/,=u7Hd$MNiX:Sm=d(Pg#I/60r@lnb<2MJQaoT?DR2`Z\9KV1HsF
%q"d9C4%0L>`W3<o=jd3l\%=+O06TW''EUA"5V[tEO%=!8D8U"hK[AtR)iJ>dp)jS<Ll9[>:5Z)P:j*NkEtgm6/sie!p!"7*E+hh3
%"#0LLG1_/&pi=7X2rY`-71UQ,T[tW*]'[%sKS(0sFK`Vj.4MaR#V1'sp<3T2RU(>E@"bkiIRVkIg"F;b;H(+De`A0Yj+7,>l?!Vo
%<X=aSA'VAiQ:R$q^e#!U;KmUtdP3QC5N#6:R20>?M2L,WOV/R4(MJ&S3h00/_q]!9jc-ehDMCn:ibf$*T+0Tu/#P$u<0iCeLUN+7
%/sShY`$&b(F&O;i:a=$D>RS1e@##%c!)W5h@dsVYh(`oR5N5*FWB2hNHQj_AfMb?&(5\qf\3GgrZ:8SdbS'R[p6m8JpI@gkb7Rb0
%K-h&G\0B1U`jHIg3-cO,7Xmf@B1a].8jisMV@N*#PcU=?23R%2d$SO[:K<,HLR/!WaFC!hNYC?]/2.C#oe]Yd7W`?NZT(nBYi$cr
%V1p6VI.!3dqfHNb%)iTOe1KX734G,r")D"Q%uI<P`Q3lb^;L7T0HSF]QF!o(d@U2bMo_g$Z'$n7b5X5Y?Z&P$4k^")j[?;A>]XoL
%4p]/\XBgtXD;]&!Ns<6?'+(FU_Q(+08rbU+D\7MVkjH=3Cd'FS8^Bn*E@%^C/Z#rgpgbk`Y!/+7k1PL`'f0q\NT\77Pd!jrk"O;Z
%]q"S97H%1Zjakbi8PZ9jZRpb=P2_I":8L7XS<*YE1Q@R*`%No#';3:kV]"aN$(.`p$fFL]*oc;f3P0=j?8FLF@p1-dM7pN9Wlb(=
%@e\AbP6(K7`Ubq5Y9^h#C[,u4=LI@jhB5[1\,\JqVo#252?<22$uDe<WgKZPX0Yb@!u@D"/@EDcVs7=c/\Uo`LLK8,\8/;-4;:-t
%D7c1l+mBq]PtEW\Se`7'?]Yttf2Ba4'e4F'V<0!QaNoKi,Ue3Q+Acj<>'H^>W$"2Y?;QIb`CZ6c\=cp`iGA/G"aI,j"t->ub4I13
%9I6N-`/md#OBi49D^!o9$*fR5fQ<(m?&7+;<7_5M)H@8X;'9q:'G&;DNG&`rZ6Nniodtg/XM2KGfCS_:-=Lf<5!?Q@`_oYRN.meW
%5,L.SZk)09)f$A=1<_e39=CNNT_UJl@o94:=gLY!q#uV515E@F%b`S3cq>kt532+h]9PjK92t1m'k+a!^btc@fL".9p=4bh7gYP:
%_CLE_<@38;"Nr"M\E&s+oP[-BOaQ"Skd?Zn9kmR>-*o/O"Hs!8pS&^</$f[`[AKCB'<K!dK1hrP_D@RI-LWAh$*#6oOo:"!/i-ij
%ZLHrU5d2ba)e'nDK=TVB:<KFOZZE;A<-mL2lOOBkaKhK4JC)&_,/2Qr3nArsb-7.7)mAba2^]kX'oKh)[T$4.GcP3d-k<U.;lk\6
%8m_WJ%Kq0l*,HdT[Amf;3B4;;NL8Kg+=AQ=H`R0QP)GVOd&NFJC;iFk=mY`>FOq)9E(lEVaiR*loIQE`Cfj&W_u,Va>FClj<\I\>
%$+ZsfX@03$;rFIeQ,'*]Lmkch>#i<-:.\S3WNitB7]O_S@nkr[0h=S*P=.ah9d6?X`_Z^hTNY%Rq(1(r5iYE1"2Rj=LeJL`i_#RW
%c+@`.I/Vu`X.69PkQH*7``gq0dn,05;BJL6V5amm69m[M!BH,gC@AQ:$ti)LoEtRC+Oj=,ADK%<Ga+q?Pq/0#;eJM\#43RAZ,OU=
%eMu/O1EPZAXt0JP%3<7'j5L,cW[_cP4HuaI4Pbak)"LAuH,GQ,Bb<SU;WX=0FET@b*YRUTXJQU8TGh#\j;icF&,-rWnkAXK=dYt1
%I:nFFXR],37[uX/R,%<b&:dS%\04"+E<:&cK[OE]T8C;tPY#A[9,).<_;e^!`/#+MDI,aWi@eTc0-n;a`--[iStjA9b&-Ni/JZqe
%.*oiR?*#\mln>T11\L+@9SNo^YN/kF(EZp8G=#Q0]iH]IfQ\1!_Y7@$%?trELc3aG;7_a@8lr?7jGB*($LA&/GQ3Y&<6/PuBoM&Z
%0?+]+N1NEtD."*;1+Qc?EMU0hT9pFh2%&=5e1E$T4J8KN16b?dnhcFNCCfj%$g%G1^IFAWGtF%Y;0Z-!Ki>"g"@_*<NQ[b9HW=!b
%OT\Zo0FDD^iL9RJh"22WV1"_3(.jVa2]t<:fU%"d-e"`9:&reN]*MYYR2^FGS:BcTZ&j.HMUN,c]-D::Jl[O2ZI2YG1b!DOa[8V&
%Kl!I*DZER5%Z)L0#b(OE8'65IOQmOEl$trsFM\qf3kJ)!]4)9?^kin?^ar\)+?>;o`\>JML[0kcD$cBF:QDq#9SP@[93NO29Ifsq
%R$J$AYA`imZ?Y_kDQ^%gK7rI-W[(58[/tuH-'>l-k@@HkqJ)#snARER$Un0PDDTC1,H7:KUZ!\BB\ZCBpc)H!V7/RW:YTE#"kNAj
%4Kh^ojtI9CcV*gc-%o'9[j>9(+[(Or]c%_*N4"uNolQ.-N[9UdqK/sF2IuSo4CU#"LL4]:5(#g%[':$-*oqI*4J5qSJq--JEcu)`
%S:g0eNH3PbES3PH`Jf0n.o%q67ds=Sf*l5q#@J..e4D&KE^S0!*8mJtUtco80C9$-.Kl@(Oa%-G7V\ZS")]#Ki-_ph%n*oD;F*s.
%U,<GdjrC`@F<53.6']I3\ZH%a(@T7r1lXP5NfkrQAjsY.j-J(<^*s+QbgSg>PQlS%c[*Nqj%j&0RV,d:*>0q;bG+*5bM<")">:fH
%-3A.og_%'71)lH/]b>rD>tDU0Ej?Y!0tAV<1M"MX&S7NCPB#Ot+*F/GE@>A6elqq?6Y'@IhU"od1.44:ek`eO>i-T4\)Lef,^,cc
%2erU'Wu5+S+!s&%:O%KpJ"YZ/n2JGSnWD)g%PLiqKNYhc\Y`+P,'=$gp$:L=)3f&2][pt'C/J;)q/]OVQ^:lj-SS.Xkd0@J71I[K
%9E0IKWQ+WWP]_CE25l?7!(n@uj@\?,CgVf$;VoG,$l>]TC$m.pkUBkQG&e(AB.O42&CUi_;g&kXK!a$)9#L:E=r"gW?M,-YTr&5i
%T5$6198`.F!_h;$5;@pWdu.3o%AkLq;lljoT<p\)>>:pYDGH4Oh26G*7_+QD6*29qIF^3"/Xar"Cag@If+tZ\+-9>>(*!t4>Ps";
%Dl9=>iH'B5U'<5h"$NQV;3VtshVT#G3_88IbfA$6A]=Sa!LScQW=eMuLN9d6Ti=EE*)?//7]XT9U9S,2'NhZPoh5!Q:dCo;]:\o!
%A@3Ef4[Gmb;+tSk*RV5#QPcd02.U8hV#7"/493U$#SH>2<S&Tj;d]#S/$sIglq?m1b,`IS$Q8#J+@ca>9UABb#UoorMmM^0,5h9a
%qVDgo.&:=3ouh`JUnEBbY#RF@0U3A0As`>G)mFC'F2<1dHoIPGVb^6=g`T(q0EL=W,hNdXOuHNWL8<IfJLRAFcWY;)U=>4@f+3]H
%@]:f["gU`pmi*e+#<Gedcc2AK=/C['PofQ)>;b,""KD)kS&7^75c&)E73/3GO=D#+Da0bFR`70_Ll\\e6e=J7>c8GVo5Am=P))&Z
%mq^s=$K6N?:6^\BdX4jm4HaC0dKaXk:s7i&'e/aYkaCL8b,gL"M3a6lS:eT1&4Ig(I?B!EdhRg?Opo&OE%/\0P21ViV4Y0RE$RkM
%8kEdiE5W"0-P_9p.]F\md7VEhfFkuH,cI\FB`8@?.OhQV*=Ao%g]8h@8;`0J$/Zi>@#P9>gQ8;lMB`jP-<CfI@BFV,6S?W>\He,<
%,Z[,OEC.J%1D1oSq`6X^30O?l7*qi">oHE_h71*nU::i^Rg;/OG>ofQMgc6'atljW6Y&,:<8JTUL<b%F#>1eNP/YKM;8lV7i-3HN
%lUF`?d>FlbRJU0Op)ZR=c3f3SQA,2kWBQb!P+Jf-05$_%gA4uOR?l(7F<%OcUJ_`:jk_/*EmA)aQnV\u.1%k88p"$P=H3[@P>>F$
%P9?rG_jjUu?A/LrX`C/P&X+HB#*\Sq(E;a8)`2&r/Io\c1*bFSCL0g/lj&M-eNu[l3]dBZn&U<4G6u>A.&t!kdA_F0,H)+\(+Jp6
%\"$`IdN[4$#=#n"U?J:o(V"L"+D&YAB(i.O+@]e&PL/MXfoOtj#jgMr>notgTg:E*Bcu>!A54:I%?4FQaT@t/@a[!6[IipkT2o@/
%>`qBS-TP"%obbgZFf.!`+?S2\O-9KR<VK#Tf9TasJe8A^9.:>T4t>+ZI$l[D=J(u,!B<)P>n.W)ab9CeXp-D<(uBTo.:=_k@4EQD
%"9>hnGN#Tu!Sg:e9CWYroa:QtG]=0B05+Y%+?_P\[ts,tU+Ljhi)8ha;)9><;DRpi3-Y_o9&u]X#`A/(p8=#KFI#(!Z,i(BL6JW*
%<6NYr:nt6f9eK9=N$;)MVj'37qLF**ZqMlI:OC01a^m*16Y3lSBp*]Z8'\Z#5Sj]b8hN2$r&KT+>XZ[M98=DIO^.H:cM[EnEoPeP
%/9mc<"sEA8N665?4B;YiP[2B,,f6Q:])fO[[;+\Tj'Scl[g;^5X<+ZtR1%gh.E3$:\e\BLLQ#5REhf3W(YkVHiZoWs<gfm[opWmb
%b#!GH@T#GsN8/Pf$VGRK+J?aiR29/6lC>p`\.rfUi`HPGkl<lZ:jSAl%2M\p%\K9XH]Sg@RRT%mEI00&H6^PC_5W+:,K(bQ"d;HV
%LBmfrCC4_98?>QH@)>a7R'GO"g,7rk"U.LP3.i&L:92K%0")d9ZutVk_/ds=l9Wka(mSoNDOA=;A3S<&NsUd)V"tG"$1LgYX"L*(
%\KF-DUd,FBlI2J[#%^[VO#%'88'R5A2-'k_QP:,^kAF.`0BL.\F_sSh7s1Ss.11CJU4#q3`-PZr_Mf5f9$W]1pd/=s]7^SoYdmo<
%3eTYE5WgBIP_.'kXTF4t/![mqLC/907tRpsn/R6&eEXhoXn[^b]#Kh)$8mjN*2s'0K/M:7fuK:\mr+Lig3i9J/u<_oc?pt=?DM7M
%cM?kTj=3:tN`)\_.KZ>YED8*f&Rlk(J/Iu)l;4J.7tsL,"Ms[_1^;]f79%&Cb"/YJR"]gi5T8$HV]86]5%/JcOKm9+,;$GULB;p=
%>!>aQEPU?:/Mif^!*)SgCQO4TfV>*=$W>/P^fjJF'<6XQ]a;,5\\C^n\YBEf'A^!nge+?X=%;$=J6$I=X<<L7Bs]:m;9'R@2@bLX
%UY;=CO%<5g9F4gE]($.R0,CWoE12$n1.jg7a>V_Xhiene%-D*)JfF/M'$rITNPogi+sFh6`2',,D3&-9fR<'c6g@VNn5>'qR/DNK
%/jsOg#r+t-+upg#jD)l.4jTKdP&I!YWS1q+6lGo)4mfJ\H,29NQ_%6<TOU!HTFkiV7m`QVP%LeUTp'P%%AqAe%d_Ut;4TT]s-6"!
%Sdj'mGDXZ>4kWWP:&>?s(jDeB1hRanjI+.BQ#LHZCBiA8,hMLKJ=2^NL9VLr."/u0=GpQ\c6.M&U17SqlR0_uVpZ,p"$DpoP=RL\
%>5HY>>KA.dAQ-E&C.I6Z(e.0l]5p4I@m[VjF;rfOGT$p$>a6@`C`1bO6FWuOPOO^V3J<GXZ=:9M'!4FI0%M?OTd9A=0T\&%8^p$1
%'.38P.b&AC1Y*H+%#hA3%WGJ=F!<PsMif>09pEL&cJ4V^Fl0'"3"\LW8Qc9`.k5o3<V\N\9Yur5b5,SpM6bDb;\,WKbiWM'"!UWe
%;!uBdOr_9t@O2B-b"-Ig7l]7.q<p]RDuc9JS40snE%@VF\9mfGC_W"M,/&*lQEXDq_BEB^e50!Vg5pa,]X=b*0N@TDJ7-lcq0lF@
%hJ9OA$rTKqnH&,G.#H#j<X[0:7RMnN0WaN@Y#B:Zfo\*Wa4iK9=Me,PEd;$@k*/%GY6G<BYkNGs,hK*A8MI(0nV*oY*h9\!=ephs
%MRSqj.,df2^QBY5_%rKN`MalV<W,C$eGm#JXmq'S0dqsn&sDRWinIkO(=;-+%,FllQ/;+!O=A%&Okt0(?\\&:SC^k:6(f"Djslr3
%4o7N$Pp]75K`\bd?qlaR*kGek8b@6>%8te'fs/?M*?%nb#o*:B^cW4c-r%W9^L;k43r)agbS0Q:g(?<2+n;K>J_i\KgfsmDCN"R'
%0O2><qf%ZSlld"CcH/kUV:90;JJeK8?s@SBg#[H<SsYY-?iZ(hMM"B">?9o'%Y9t@9X.']j8gkO.ha2Q!/)M0#>F%Xf$I2P7'.s[
%6Jc>I!lUO$b"0?2"=EDB7<reOBTrhsnl55AGqt4;AoP;V*J$jSMCRE^R&btE,dn56P+3Yg`71h>4bl*AEC2)2T+J/qIA@%nR_'cR
%88SA7:UHR\OW<Nn,H_67WGT7BL8//8P#-$?"I:7KYQTh.VP9+E@Rg68RL]1X87W@gbXIM77#LWEK0mkH$]u(7cs/NVO'7p&.]ej4
%qk:,mQS]jaLUitoM^IK,?rjU[=^U5W@L.nsd&YMFFd<#!Q6KR,JHA2!()uGp3A*9$aq1/.#LSRIV1(b.2IGrt@]/WfdPb!'#m(:p
%=oc]Rjr%=R$(,K+VVG?T1h]5I+GghZ`KR_ndlN,KN'EGB=ePhS1g@:A?(O_Kj2MZma+L[M4m"M"\3\;/;KeD3CA]NgN`N'8V$DiI
%::47na!%_[AecuZk"*$(U#'4,k1JjQL5::QPV1>rP\-Bq-YEN(!m)(C'DBrtA.:Ofqs^l^h8qPIro@ASf-F7`BL0LshVpYk]dP_0
%*bN/3T.akoA)4PUJS=rO>KdmAVl.GgErE&UTDc\Jr:Dc3"EFX@J_\&peKAP_!R!f=9gkl[(YVJ5gY=/6J@e>1_J$=l-85hM\;Ep5
%9Hod5Fr^N>3O)u;49J.P]$ifEXD%ha3ngT6-\t9mFBR9:lgl0s2?;\3M.@O6=\pJGElg5BK&Q'])JMZ)"D52dl[dSHGX>ig#*_qf
%Z5nY"hNo7m!%9o#7$QE@G=[bOKZ[T(8e7'b/0Hes0V#BJeh@?"?CWEZAk9f#]XT<H>;K9),!8b1D[HRMTI6>t+55)J+4M)o"iI:c
%c<-9sU.6[c5$!_^oL?4i@tS<n]04QMi*<q*\.`?*%[/P(9jf39>.&:>S(-e_-)VCVXkkB?Fdsj/Ft(]>`fhpOW3&p@fen<cko\nA
%nSl=S0i^'l=YPEXBVsqZE3"8pn1VD`HuAKIDk2CXn](Ouj6b[IS"mlR02Di5nSkkYd$qr!>J!o1o#okF_9R"@&]'A8^6hCQ(8Abe
%&4c?gh[BHFKYPH`&cVP$DtqodpU@=9p@#tBn^6@.hkS.bpVlH2DP<)oJ='@rrM"hR&=2->*$:>2/f5PCf;e<[o7@bep\hJ8_gZc;
%>#4&epb,tO##S&NTbR910\NuE'N%lC*J-Z&KVRTLIL2espWD8+E'Vc!6BWB;*C8!<(oA?!>pUB,ajgr:QlBe!EG#cK@^&'T#61P'
%JN4PLdt5T^,$)WB3..&H4O,./NSObg)csPIkKnTK5d#cr5`BF6TH6_HA]O9S6P1=M;\O3_U`=U5aJfU\W520[fJ,LSi)/q+&,1UF
%QCQA*6#iD2"AEYNbP.[q!%;fU+SOc)Z)iic3\'C4E*cRJi&O2ee(oNBi*ZaS\DrODZ/`?50OSnC;LhnZ#jD!7a<'DMPf;a9$3i$u
%e/1^s!i^8u!ZgRCYn@V';r9t$6jeN-@OQ<%+T3E:8hsP<q^]*CbEqp!&:9?)gnZ]6%!P-J<^?R*[>^md]F3F\%'!!Sa/Ha@+StXg
%+@L:j,m0'aAd`uQ*r@#$XC-;6LI6d+@t6-7[a:G]i8fGSgg7ZgE=?mgG[^3.)`uJ_)//e/Q;f6&J<?H+plWEV"ZT@i]K.K<$jT2H
%d>[N=>nR.sCoIZ`ZCBtbc_=;i04YDV@%=+B6Y:@Q=d"se_(f6)K7a2mYCB6&BG!e36kO)t?%bJ`qIMDe&9i2M4)#IsN)^X6kohWt
%H_J)<">:VSJ56'u6V\-spVCAX%>X`n90+1.SIq5MH&/XAe?%gS$47<=$QN=)8_7ehYuCE#'(g@f3Og(Ykli4@_`af+f0VH.flKD:
%5U$a]5-6bpn08()XONeojC=Jp-dk@Kq3uUgP=W/*>i<OgPtbXZ.gFLkkL.rDr4(-T^ft+Vc2cZp3/'1VN#W^(E)9-G-JURP90(3U
%0apJ)RU.Bi*TT&IENb;h%P#b;Dm5$Kp(.8FJp>IEO^.#[;e75-3t*d%ZV5m\;-KA)j#u1%]hXUbapCWdYqB.m00GE[a=@C*i+nuU
%kr=6Wi&9VJ!:H3C!7VP;?-%_q6qe^$Kk*LNAM?`e:8KPQ#@d`&i^Mf&69rZljN&p!LR&'%]O8*r'.?0ZgOXC&aJ:\Lf*9'$=bEKV
%Q5e!N!FV?':q%cE,2!,*kq`K%-I5-dKPZ7]=@?8)1?E417b\Ic2&G&#Tgq^&PaIUQU\mYJVB;`\8q_r<WLP7_R;C"7!nC!J9PFu%
%UMRc^P3Fr^\An:b12olRG`%5g"=A-*4ZK6l<s4JaehSq6DE$W%:fE7<2iEJI'p(\T8GS^,Ce[1Es!)P5h9jB)[\O6t@T+U9>X[73
%#sDif"j*1I'V\J4U.<PM\6un"L)QL7baj8EK.P*i6u#>;=Mt(hZ^=;n(7(Zs7Y<9&7[=>`]'G_>E<]=I.^oH-p`eK-R5>\<Kpf%N
%!Tl-2:h7^t_0odu%mD`?0(J3Djt`ZiW$km_0Q1Amb[%'G^lq33QK<.0MUXC*b*[064!X,;\?2,BfE^mO+I4:qj]+`p_5j4A3I!t4
%qnkQbP3ES;W(%uD(F:dpL?C.A6=5GJ(V$Inp9,ZunrSCk.S<W=q(coCaCqZ6r:mgXPhmY%.6A@JAKNZgHJ3F6>E<tHWJA3)e@<k2
%Qf0^j0LT:M:0<*T;?6jah@TUJ!-^b*-mh%e5`det?,_Dh*$&G:NL3Cd5c0WLVJLTS54_/V0JU$=!fef7#laAL!s_F1]]>gmIB1c8
%`6<h]2A8c;/\)+*;mm+4BJ]iQ!JHeuQ<F>*&4&XMaDhL"LGG\rP]P+V"PP%kC-Z`J&fau/U!p]rR+."8E!^A"Ras6kg,\aLTPc?<
%Wc3qNRY-<'$rP0+'h^hp^+MlSi#`=R,)m4MM=c\g!(NiU)(<%Z^cn%f%u6Z)!2JHU-'F1GhFg92"H!Brh[1NUT\lRRkJZp[So'3;
%BZUENE>;$o@\C_#b9DWZKffa,OI/EERTQ!d$\lM5T7uCWJUg7%B+`Ia2;S@DSHBZ"M\?.Q8Pd8\oR4gnSs+uHgRb2lH);1f//3P*
%TaI[XU7o((pD@A.0GTp>i=oQ8Bqs(3O)lj^$QLe]g:"R'Qn0:;/YNM^QWU=U"HIct%*bL,97fFNj,-eQqkHg"'FWFUVSpKiVl/$3
%7$]SPBV:dP3P]Ed;'1n@VSSR/3HEfWVb'3J.k*:pT<:lrjo^ME'Q8^DKou`fpg.NV8RfS?iJA,3U`)d<Bm_9AQ6D,&Si#:PA;9=E
%`>SHkV)S^i7j@FIQb[YB[5u]@9?J7T_V:%Ei*9?n]dBV&bBRcUq`"6L<Aa7`-)$9MCpAaPTuR5g-%h\NE'd!@DKn`t%No`CJpP5]
%Jo8C`N[,Z"'[n@"Y^VrF2o)BX:6q%()o[c6@g:#`!II?]9>F)2RfqLK*$![_==0ck`!#s79LmEf;3:oY6?=hkR\:eNN1sQs:[t%'
%6T,O^<hP5kLn@-!c\Pq)Aj[%2/#OWIECie$NJRsTj&/uQN4ZlCOXj\%f:<hE/E0R4^#_q\\G2fBARa:E0gmVW<Q*g488u%LAPBQV
%(TJ@*KaGk'OXA3f=fQ%,]9%S^[h6JB>^ZWuO/rr<<e>p<!MsssU(ll@Pe2HLK.8`el8&DUN$T'IjN-BtKr)^-DDf5%F-Rs$B10ip
%n/7uE&fSe)a+noj(3I>o*0RNkjQd-1*6OM1#nb:F"H:0UMVDASSetL-9Gs4<:c6K,[[K_p3nWF30S(ZZ?e!WAk$T`I:=h<+dg>CD
%`*9,6.Nh\/9o'8b[QG9"!=b5:X+3g5AY.=-70\n:!/;c'o,sQlar;ddnL23C/k,UOV^,pHi0Mg%\j[EUOl3&lT4>Z=8NhYj7'n0f
%I6i$%)@7iF%4%o2K[1++f!#ChPfOa%,:F*\6"'j1PO\Uk83TpZk&Pd_?tuo"iQU0hLZbB;*tD<WcpMbf,)T2^7P7Rj!276M>MMop
%r(*P2Wg)F$Y\YR0Gsf\QiOUdI7:0tLkG2[89CQ!s)=rOH]eXa`8AjA_A_B"te3t-U>F6oI3iG[rR0E^g6.+#r6`(oP30<YcV$dAe
%*oi8Jp3dU>bQM;c70bBC\E9g`_"\qe4%[nTPgZ5]1/f2F$5YGFHVD^"a]eaZZc'kFabrQ%S3ql)P*N`dQrk[KM\W]64Q]XGHFsMO
%eHQ$LM%MG.od86gCI>-q\K!M%/2i:e+b<<R1^6uX+?'gr<0B##*`>VJ6Z?=M&P5oMN;u?J:;A.J(BIH=qb'PsZp]Jk!G,n@qh(!Y
%VSPD^pF9R__8G/F@mmD[LP?X)C7,q@@OY0f$@#bdNbQooiCgTpNrc0lBp);N9.JX01-SgR9JK,C#\U7@!2EGCQ7++OgRq;`5U^.&
%2Z_PcABt9oGoIuSEX62)LK_^QdK!HM2B3AEi0dHp#X/P^OsoC=+n>U]*R#3#FNg\^hnV@<UL9E<l\@`0E"AnD+s=X7,Z^p'Z8q6>
%Ym4=$!L#fA)][-?#0'&R!,.&8"7&br$Od\D8Q1A@Cd^01lmZY%0pT&7HOAbbMF;+``bT/gYq32>?W-uWpk<N#jMh63#VT/>G/ZEa
%K8hX"pSQorR[LBFPNA`;18*T,+kpI,:M?8#Z@pTeT\]\gb:5%j-:V6X;H;Gd[[2ZmfquaCS"_HL@PZ-R:6riKR[ELYpAcZV4?-G3
%b$l7"_H6l>5a.%a_&0I4kT#`kR43d4MdYTo`M5@gJ<<8fGdoS2$E''`4.274)R>NgNX$"2UrtJ(!)gtANl\AUqbZE]1b>p\A%%4b
%2+lp6FbWISBe_oP!o"El,"]l;S^h'n.1QVYfFWQ[6!T^$>c`I+1g9r@&R*\`QGPt&\;9Jk+?,rJ!9bbp]gL)]M/!I;K_290b=J3/
%_1^A&'ObS[(gAa$JjUE]7f`04$S$Vhng#[)64f6W+Qho]Ug%FQJTWnXnWSdiO[r&YdWH/RO=7(nAf3TP!+Lnf.XhrtU0*P^*Z\a<
%nA-Hm+ib!J,sHSfPDX$RH=3eF]+:%&KfS.U/l-3hhT=8NAnT9=/"])t./Ba*U'O/N/,(0pQ4gP#j92ipO=Ll/(o\D`NOVBR*L$)c
%'YR\4ZT(:T37Aph]!_k\KSJTV$O.f'-"'<uk/<G-=6G+QBooY7obH\)5nAZ70nt7\CFoX*VY93dP)J6."$DH//Sn!7#LZjKL<7<<
%j:-0$@Qt+=m#EaB6sL1Qo_rjP=AIs'OnQ"j'WNZUE%%F1Q+<E=>?X=6^l/6rN(Lg=S)Z*"+AS"N4ip8eWCr6X.'pcW1^HCH6Q[YE
%R3CIajb&)2<:m7I@EXaZ-\@V6hf'd#U>Q[=#ffb^!lcSL2lP:eN'jlB[,#$83<6[G#WuN>_SF63A&ff$0I8da!$g#=Jdj'5/2=$[
%`Q6ZQdaF*64fn?oGc\u%+q)oE1$V+tM1Csd'7kjGo3k5t;\4aYU=u,VRKu]a>T0MSb)KoSf*OjQ8C4HiAV/G^b.06,q`sHhAjSqC
%_[>fhPcB:bYrW,?@5>kNO76'6^AM.JFKQ@>"a4g7Z&Gh0B>1a)eT:BZP)8]T!G;fr$,Y-+b"?^T\k;\A(iBO9#+lH;>@V8`1J#nj
%O=m3!cjot7KlC?PK@AF,l7l5q/r?&g,-bJZN[b+K'c7Kg$T-0*`dp3G>`rg"$Hu%ra?=dXiNdW8\)..]_-(A;S<$hoM_]g3I(Zrc
%FL8G;hV.pUkn:n]i@+V8iEqZ?6YE3mgP>4C-gP,p)rlX%/`549>9C.$d\FYHi:Coppgg`l*1`Smj!+H53nW<GqE,\_J(`Q6VD%Z:
%[P'9\Mu2P"`@$-EgtsKKSm/i1I=r\QSKB[FV*=<`&&qO40_iJj]u/[NC0TtuiJXGtMoiE?Q8kB3jMkm2ACmC-QV-/9?O#9B(,%7'
%h\^44YAXqWC[.\TRlfAOUVZZ`oC6ci3p.HUNN!HgafXNVqe!M6QTN)J3&W_E'n<9a2rVMjX'53)/l/uYpi"eJptmKos20>KDctRQ
%lQa]j?V_S)Jc?]B8TjCp^G`O"0Aa5=AEgp[s-:E7kMat<f\%Hc[)N(DmuQhE*(Gs.e4U@M9R@i\QNf,.HgZ-Rg%YE?T1IF8L[!>D
%"Pq_RMrHg5/hb@snk:YhipOdDhKLg-^I=)4O0Q02;[j::I?pR^X.M)iX)5/$9)k$[W2%g\OV=ZmQMPk$Du"?,^0Cac_$N+K^t8bs
%)Xq*JW;r<+ErUi1Yk4DHdc]Z*[tb1rs18,IGOOG$pohXeYU-o.]B9q_5Bc5"GgZJ;@fmLM^L(='gY%@kFD#CD/JUKiGBRbGOdZjV
%**l6UEtLNf0>H4%fQ%cH4)O3Bq09.6mC8_25*MIgK<:-U1e)iLL9kuai(r*'7f4_-H>C^kg>;7*o_7>[\!MI%B5ihgh91=UW?H3E
%@_9[i6]kB8Deucer=;+Erj93)YJoUrYB/(d:Q%4-i_T!_b>/A<ET8NeD@^qMBA09O'k)UB"XSR4'J.1HdCtY/7BQ"FDB<\Tq^nc#
%eUQ[1_6#]-4a%q(F?!uSq;oH^p0Y_n-_$U8;0_p7eq7HrQ2u2B!$5b1H39"k/L2Bo^fc/aq\IfPRu[4BfkpVY\jH/9mJdSR%Uh-b
%,BhI.(D`].ba^Z:M8OO`RHMM^RlDDN0$P".s/Zs\M"pSsc4U'rnUII'H&h[_;Sek_r,]fMLuuWa:)q!sb<.-^I>C7*+MeSuL=n[=
%h-UN`mpo06k1&Abe01A]LH0MP:+u4/3qT'TEF^640u@mdbUfJ%4X='J5:(@P0ddOQ,S8Y!5g0PQGC#\?"QFY/+sMSI:*esiicmkc
%QkP<:On_[)o:/AD+;0e)#;$LL9d))cKPC-GlSPLLF6[^,l;5cK9QTLg]jBh]Fm)+35[Gj3FHS<"'LW4j5U*HnEL7Dpit7'pAolX6
%:*%(#gH;ADF0F+Sk5T@.rc4%pkEu92^!1WB5F2c?eD[$q%eH?J3Hb+'DtBJ[b\[].o'fG<LO:/o0IICglYW5WL[!lNYLB!SbUL@_
%.7"qOK'-?"qqI\TSA\][lJC1'hc,b!;48/pn+:&5M:+KtHVUO=8O>;\cSVO0hs5-N;hqnQCJGrM;=ZDbPF[nmn+ATbahp4THVPa`
%BaQSU`L^"an+ATb.E%`CbULIp9d0'fKpYepn+8Na.E#K11a`h6.!_3#g<IaWpNi=ljC'*F2okjr/^-G?[@:\*n+ATb1&kK4R$3;T
%PW[0BmH3KgHbI[Fnh@O(bULIp9HiP0K]X!.]=lI1$8E>>k2bJC,nKO94NtpbGC#bAjC+Y'Bhf]J8a8!jMk3k&n+ATbWP_uS1oCob
%1kh=;7aEO%pNi=l'OkB\DGDLl#:_G=Oe,L.n+ATbWPgp6d[WArPLO"^*^-D2hs5-N;hmQdJIU$X#tYQQ9&]c?bfRbm4<0nS]Q<SY
%iV*'@RF9#;PCLW2%qiJ"nR?:ffH5%e[i]PWDVc4iET@3)AH;T%G]3?@aF1;#qt\YdL>Nu"hV*B=fH-'n6^l<LFW(8Z>CQ=jrI-FA
%%:BQmLN@fj!:-b=(]O)LUU%>ihnEodLD>&mn=/0mOsrN5,m/Pfd@5oLc\@q*-^C=\%(E_?rlr3toj@0JL;Vj*a!gk*p$[J3/[#(r
%F8KnnbbjscUVZ-PmW]j=YJ_<c=@%'d[CYWgO06K"[.rd`N><VI^\[b9__RDsYIZNC7W5FjfYaau6bl!rg9ALJlO>YbC2B/$.i?"S
%b[cn^4'6plPmEi:4LlW:7b?YS-/j#S9d4IT)gE[01s=UA("IIrf$Y$DY_!+WgKi6NCLb-8\ClW2dJ\dQ>?n^VV5[1@s'KUa7<Oed
%*'[UuIFBs7Br':f5ZQgfhkI.T[Y1c$=BjDh=,+a52N235OWPQDrWq*Hk%[q2$B:7.rWo"Aoh;#uP(ahdLD0=s\ULJcZRfj*B'=*!
%/3#6Aq_VIKZtQo,U9nW8^Wj7h8bEt;lBBpJc"-dP^T&u?"<+2g`[N"n$?%OS:SI56P=]<Dc,Te,_qiT0"m/[)D_l*sdr`)_9I@gR
%YT%:nl7'1QVk.Yh@&J9&7:iNB/k'WTNQe4-kAGAoASpij%=1j9S]NZR%Aqjni6r+g(B0G.'b#Y3"IZE3)[i3/+g#[cKClBqB<XC$
%*:GHlh,k@h&haTGJ3Rt$L9#@d-Ld:cp:`&N9fKgp\'GTZ*TQ[;n'dY-0#$'9]F-!h`t7Xq<b@@KkopeDMi1A#KAFk%\o7SNFX9fo
%7uk\nHoBX4)Jo03^=o0i?!\It5270KX*dS?]aHmtI<"/ReI)A4RDB?U:c"^iV-JZd/nM33anY%kgGDY:=gC7gP"3Og7iiIu2]Z73
%5mPP'&1.r^jK;[O$!A^Zqk(6hWNEW\>f3j`BN`njk0Rbgd'BUZbb/Or7.Z8$%?7Z>,La)g[,*QP>E#PjN8#,3e6>CZMhrfbVCePn
%_?a;YWugS&1,24gfdX5HG![E(>u!(L!B8EC92oSB5k:<!:6N8[O_!PPa2Is1oNC&A<GG0Ne'Wc4-]#["P<t2UbG,)A/?P#:,k9AN
%4tK!["`b0p7@k9dFBJ=f^rhfi^Sa9KEL)q^'XH4Xrn5,CBemdY)OM[G#5%A=L!t5rL(&)r<H=`F\[#GE+'JO@@M#q's.T<=&JbMp
%,6ha'L'@;g4O'<":?AoI^$14m'lgn9'?WZMs*D?(_@unqimX?[E[pY9UkD02V@-Od_o35dq#'TOot>5+l@0,qF]O:+NPLal[C:.c
%j(+H[KCQan5@,**LnF1_5cdGjlUP`OpGRdY5QA+#r1BPI?.\#_?p#KIXWNRY#:M7;`]$A^_>i&':2#lbh8Ye`mELb,*2urDGko).
%.fC7a)#q96jI_dbllLQPCG7gEaiX>(h$CWbX)7kTJ2#*)iJ3&OL:`'YBudP?W;cDgq5miXg>-koNr/1-gX>9&nRL@<*nqDf^\D(c
%G'@l6D<dC?DXVFi)fG@QUbk6V96'lhLq>U?hcXk,f!gFJ?:LR9rPoFuG,0*=YPr29g3t-1*7hZ?GVJ"/q$td/J+\\*3>d;#(20X6
%2#V@Xs,D6_-M5!rkC;&]55=d=n)/Zp5Cgid[^S0okFh@n$$hl0%0tW./,o:ok4hTQ,NkBM"l_/*4?%+g?\VdW^[siDg@W!ZRhHi;
%O6-><h`Ld3(3QV&M>c7G8Ul4;98^\Lhn#EP]s6TKeqTg::I\P`OR9HgacF.T-3CI4o=`&h`pb=b:4+-gKHkBl`B8<uj2%U&Y>/I\
%p=PQh]u`<u??\#89dkh<^MuJu(KK5LfV6:^`O3PMkJP.!iSr>"rPSTf#HOW5r>VNjJ3:oAG_#WH/IEFM(.H'(lKR0VmMOQcr9SBL
%33'Ul)<KH#_>a/dmmi#X2d,U/d<L(X0\Tb7iV_g*eqRD(X?2NDA&1H,D`eD`UrQ4irj1SWMnNa[1sP.HhSBt$)h1V)3`5p<i]>Z#
%IirfE-/@OX$R0G,$Y;QgHY@G&f)B&udr-!2Znj]:<Zh6IIrAS12qZt"KMi*@gYC[i@9COBNP4_A^H"7@0A\Z.mk$^B*/oZJXoCPc
%pPN$CY1M[Bh7\edH\^Y#c_J2Cnhdc13nW1.N/*>Wi7-`rEjE)Yg`M'ol<nDjE#X3`C6'7$%-2$1M=8R1PG#a:1tXtD+1Tq3n[G">
%eu%b/f9%@n;RZ;-R(1fip29aFrAf0^*iZ"^cSC]l2iY^89Pk`o@;9::LH%5hdADL.<X66d%1]!,m><Daq/eGU(lnS60"r2%B=rJ9
%F)*m?hqHp*b=,`dpLq(IFh"dQD!91@OF;-6caO2eh/UIu*q$VGa"bSli>^+-l\.bj)BO:Rl\UrR(lgg8;<<uhLZ<f,8#L`6'Q.5g
%CuYiGolN/SfH2:E]^,"77j-rt#.n(E?eg7;S_tRa\kLS%>s-paloMukm(l(;Kq5'((OQ$f%t[kegS5E$T%rr-?p'tMfq%ND^!RG+
%$P<=9h9Fo.mVIjmVG4>pc1Bo6hQC,;_Id\49q:t8RFU9ip?hm=4XhrRU?<si!u^*ca,GEdqj`'f4V-7rd!T;6C3jcnmqH5Y*LY0H
%8MWNX_[oZ??UMIpNS><pR:u,SU4SBlXaPu95gAsDLUo[]V^_fYbalo)K\qaXNF2P*9u(2MomrV.7M@Nb^Y'F1[eJBmZk"K6)9*pj
%??GT)h#R=!/Ic'37aEJdW],Oc%Ie7u[C3`Wk>9gfm_)H8NO,d:<ul3$gmI5YGW\bcI6&3;e+P5`0XF!rn<b:G:C#<nVK=19D&IQ)
%]]i!pOsb8'd59YUp:8V_.[06\<G_*$41/cVh_ZjA[eXCeE5HHFf?m4j/>cp3k8T'@iQPC1:kA,@1AS4u#@D<Ws6X-oA(&E6@nKt/
%*1Y9E_8buamcX!%Xmm:ZS$sIe2P7X/=k=nka4Z;&K;6ZEG6==8n6earfSUTmCdp^NL#1\?*A3?mA(Ap_&"3uOa'4I^[iYm=>)oqS
%BI*ug_f%L%h`9KK(*;e,S!?'QpM686;,]G:+)]sTN8<Z4HgZ=`.s=aO='Ae>XW<Gihl=$mIt%L1GSn$TAfP2`N7U[/%c-GdX-dk@
%pHlcd,7,Q;h7qLbWWkS#ZKPhm0#"]=5Ti&&akVE1n^:-&F0N\b+DRrNe=KZs>.s;:hMC?[NJQ;W^$qAdn6uC*+l;ta/#%q\lZBD[
%p.:e`:>`-tnb1Gp1[GmaT!hqSB@$ON`mZlJg9,#-W):kmiu[N5(5HAdm[iSn(:SILW<$SIYj"G3>\1\%QbB]oo%1SJQ2SP^+hMPk
%-8s6]L)t/L:MG"AD/4XW/bE6V@Fj1mL2K!V6^ZkH8lI*aDL9ZMGu>]bIiqYT/Ba2p!YZ>BXK^^qp=A^$IbJ!7E6km3YCt&?9Ggeh
%`1Eu4WJT:LN42kHWCrbgmb<sHJa`Ad5f_L>U]&FXp[e)rs*=!Mp@"TSm/E3Gj58`9EP%5;5U2kN&G0(!$h]7Jc)S"MbprFZW3+V$
%NdEl=gQ"btCH:8+T0>VW3XWmqQmXa<$\<--]6=`BD(`!k]m+>R(l;,a=[4pX'f8!4e4+lPg07;/3U1E6PS?0iX1+QXIVa`g].%u8
%F*Oq^GrO4[-='/NSIHL.I:CC5:KuRr<CSd93EY/WmgSpeUU'1$9WiejZiY/f8s>7J?$?atT]>EC&2[B:ZVH&WXSm!P52'7]U*R[;
%"aetSnrk<9?hQth];@]n2qqs[H0</^JNp>[?UeoYSjdYKg?\fM+RO#\_nW(MoO)0YHfOQ)KLLkYFshB7og[uDm>@@EAX2])[Kl[m
%[Y#NB/R\VMcF9(t/hl"ML`)X%BO'fO]8Z+`P6[/FcU[C<N46h+I6hgJ'/G6LNX>bf<^Tj2PBRD)^;>lW?JV83d0:Gd/]Si)CGuSE
%8Z.RVlLsnekb.64rA#@QS5+bfXiKD3VDSit;;U#SB/'1*:n(%;ecAL8hDh#se'%Tp4'pUqSq7QRdJi@YhJO]%KQ[TUlhX4JdqKi4
%jo..(ieh$*odsPb]+4dIAU!op&=?!m=omOL,bou@G6f*J]!OPq\*Y%/)s@?m0qW6+n7CPQoO6?h6*&r]AFNk`5JJ;"rRI>O:"8)c
%q^Y\6X,3:bFj3CN\g7P45#"a9:Gcp&a<WQ<V_jsHDb-m_.8:fhllHm@1P;\mgX:+\J"mD3@#KZ?j2Vq)LYW#X#BG"F:LR"g!-Z_A
%P[LgnLV"L2GD7$@G!PN@'`*A&%<csGZJ@&8A$`.4`l:cpBe@))H+pTZgMhR\FjJ1,Ru?a%TE"WGl2,O[IjJ%S]cG-$L)a\:'C$Ke
%^fI^Z1c5o`_oC!Z>lo5sEc:keWk_>&C=>hD7O]g=8.U)SC#=_//);9g$ubNMgk:/8bNUtHbJb5K@HQss:Ug<ZgjV:(I2[!^6aS";
%?W(Ik*=XoX`EaJMDR/B6doK.LXatBR`e_>q>PH';eZhXM2"P,I=c^taCb+S4KBB`@DGB?m^[1prhUZ:hj'(1(%N>7)Se(f=5&q;4
%f)GC47SVL_3oo#O`j_;H&0q>WCbRnDSLdrsB,F-WeYGMZa>m.V5D+T]^bj\kq%;%e\K=-L.#Mn)?bLs(b\djj6"&"TY%<(s(TtMV
%^DpOnnEA;SlX.X9rg'?Es*DZJ&&7Den;!X[obZYX[m&KWhsR%aG'.ci;tT4@rgI*%qCMZPFO&[R\od3-fk52iV$knhrOd7?nQWVI
%n]R6qm>k$n9,A)A4C>\pkk2'S9@9L[\pX1q16.tYXe,DI4\-&(\_5g8Q<o(3a#.qE1hHYEhg,+jV*FD7'u-/Me,L?Bq`%i'_i.(:
%Y--Zl\Gu??0+[Hd[IW2#^TH;EH^ha\4aR,d](PdBRhp:OhRL-/T>+7inhB3]fbOg^7dD"Qd\Vl*529MV<*h&@/o7UOLNSj^]=i=V
%j(>`ADX6'Nd^enm/Qgf=E,k-]BCNC"DC4gji'OU"HTuoN96.r.WXb>D5C4n@HgT=b>-!q3#Nae&qWW>Kgct7F8"4/JgldAm*K3HP
%*P<<(h_$!?Qdb-)YC<P-QTr2B^\k[U%)ZnQM/b>Cpqn'L^3]dF'sgp^?FY0&l&7h8*&ZQ!p3a>de.8>35CRla)c]s<hS&bUp?28M
%W,^;tq:hfaUY\)G]mfcoo;Fl,]fS4PlHN6EVK'/]?9NZ&b3HSD9qu%iBd<SeA^pYMkuVdFB=1TV(`YM`o/=1$1Omh4lDZjPb9(oP
%:J[HLNUD2J\CWe,R3[3%S"=91Emlt:dG;F02pH-OoB4;-ou/t^CUuHEY%Ms]n>K./T#FQ@(d;+ZH?K#kNp:NEqX*Rq^)R$"ld\oN
%p"\V^8q0XW.k`P5O1Ki0JK(IEYTG`P*;sujD:FQmLGF>74R1t]k>2,G+$T7j\mbNP#H.<7hJ!r%hXtD<IbQu"HLB%3T=/)jDB/?!
%SO)CmW=9ggmDE:L[Z$ZIr\5q0lRemGq&%r@Hh"t6$EFI;^AGgu1Mal]0,mEpqeQ#-Fff://ZnNQhL>Ll:?D#9Jp?U6ZbKa-J:Z$B
%/GJ#A*I4s0IXT_Rqi?6i;;YV^Y-#+Q<`\)R;;nC+bC+^n>2/k\BHHjGWP`cDbspAGlBCVo^"-':0Fq7agqVLSh"9EVkkWr)LWuSX
%1`t<:gpt/K39lG!>PJ)pE&Q6tT0LJ*r6[FfXlrdW_)@@cG3SXWc&_%;C)RhKc)V@V%pG=sC3fSo^MVIjd;PASheX2'p4_CQ.7^Eu
%WZ.hLgp\),HtXPnl_t\92d8b"T1?X,rj^<3.bqC0O'cdQ]CP"BMiF5(iPXuBXeY:nY:kBC)td)#a6g9=3%EdlqQ##^T6`["omYAg
%UXA*pVg6d7F0>4]0%fd)%?3D.288BH7@)usV(8<.ZPpZq(FM\#Ecq3(&%>pGi^UUBW`,K>HZ(P-W8Ht;g8I5bH?\WfNp;?jDSCtr
%=)l3ckk=%\G@AuoPBcWf-)!H%j8'8C^AW2.7_QN`qk>/I0_FIZm*"),$]Le'%p)dR<q52=_U\5I3uIY]jJ_m8VlmbEGL)9F@&Z'L
%;KDBN(E=19k/skX[H2kn]6a>nNI(Qbg00cS]5@QDAIn$2FRP9gX5U8(G\8J9ZFaH?eJ%3.nB@'Kgt?WF4?_jKca@TAp?TfULdtZ$
%^Cn_0qr]?9WPJ_6IX<qUqo'iUlQj2oHTbPZG!0^>ogZ<sq(Tirh(T9I<hi/X^QiZ.hi=:EgjdoKlc85blF1d#f7:2QG;4FClL[ut
%kO2HG(V`(9DYl;L?7u2ederFW9+eh+_khr(9Ob,NdArU,=6\?%Mh>@Y7'Ad]]&*/H>4gP[p4dJ=A:qqMDu&eN[a1R8Dbh1a\,H.\
%qYg*Ao<hqX9m^58^OQ3(Z/tTO2Yuq6-e%eT0@@i<UM]i"is8\lErKLudU9:!gHUik/\eH\Nc1NbE2W*TkOHGs:H`CK[#Mcon[E&0
%jn$`<nXH]mcSYZjIFru<e'I'`XdbUr4C(!pmK)l^b>-Jg^/oU9#<.rLmeq0cI][+rAA#VJF8Fg1o<7DhpOI(/:-S^3f&6915QA+^
%/GOA\deRN,'KYT(D1?j&`J'e.#EK1T?+[]J@j&G?IQtIoW3[hc+\E`6Y/`d+Ed<%Up!/K]`>]LVDnWj_o88/hG?/XbCojer]_q8N
%qs=,BJ+gpDgFsX8!sV,b2J7kHJ$;<2d*)CTG92TIIT5a,F`QX16^3?GWr;Rr$FZicDd?X5kFU\4gJ/Tso!F"[8#MNV=.`e3@Hbh.
%.PCc(bGa*\o0<5e[+@ETqW;qtW2K'"?ET7pA5*;hm_$(*CWiZ:Bn!A\B[A[&+!%-5]k"1V^uh%@Vu<QhK.@`JFAu0V[Chj?rj)6]
%N-]][ZGWT+_bnnG5Ib/"^n\e3ig&(ln]nP$l6K+P=1iGm21>(V`2IY5asQR&XeVV(d5ibu'q9YO=A<Ab@Jd"bj'Q0&Ns\QQlOLO8
%J5?!n[bP4;NqW+1M`a3&NN`5EmWOD&\EQf&\kM"bokSd>.CB8j5n_";?I^E'*q>dg-dJ?4\&tm^nE_JWL4j2MF8akn-,0.0^8QOo
%PI"[eKCqh5iPYNP_CkKN/C<3YH[997-4$.@o3Xg("lhhgIf'fXJ0Y#p-EZeD:NT(85e=U\X^o3Pf3'tRpZ5?JcSIfV++r1S]Eh>4
%lFFq'DT0)75Ielt)d[S>l"dbXj?G7\g7o*$M*R0/?\>tGX-GgV\,POO0>h!Y_M*15hqcNBdJ`KIBp4iC?+bTJrnoAf"'&eQimPgg
%p=OWfK3*l'HfGI*0)64popf-[rp_P(OW)Nln_]D)S`.UV'VfpL,VmpBV0'-;UlThVW#_[&rcDSgrG'(Z5@(@5jcq9#f=q(+hgMig
%ID>^AiX=Rk^S4NoWAct`^O,:/(N?uNmC)_;5sIe4>;'VFID;daBOu)`$ba*\?Pu/]n%+9_AiPq-Y`QI_+$/Wn(-6XDmq1nWHuj;_
%3[:5Q6hU3ZD]buo)n,5/qcEIR)<12Kk=Lh6_r@i>&(c+YNm8tV?Y+5D:3S@OrYRh)3HK';gs>lBgO/b[%PY@DoZ=<&%'?T+c@<>E
%%1g2Of"E>6c/b#;D@k5)SV1^kmWTbEWA3t/S*!K3f&`+JRucri)cea7^V%cL81ue+5`NIZ+11amg/U\>Wt-o@T6PnPae(^sh=UQD
%&qQP"*RIpEml8[TLM%V@punHHVafF4CHT+jr-il(buBF_pFW9MJ+3)%q`T3jg^:+WYgV(@S'*c=&j1cV?"fd5oP&I0?->!qr7])[
%q%MmbWuaq1kJXWQ.nAD`Y8[jLaI6>bl[q)fe]:Hc=\4+[GAAUmSnF<dofhH]]CFg7ZhJc"<<:8T2jn>f^[0CUrOTSSgc[#!f\Not
%Rr@\Hk%Q96f>d,VkB+:nHMS<A5tp("If#h&gGh>j+pa6L$ElD+)'VfpI!g2p]g]iB_cKQ<dFlb!>EuutT3-n1-[PZ3p<V><[qSbX
%^0-ctl,rSOPM<G_G+3d+=;*#BS+3mNCXR'?oC[l>HrT:!4kn2ZZT@!ipSu0HMq;gCg%W:nF0?O\L"pks"6#R<mF4]jc[0&PGrU^A
%IBMZg5D(`1r:&1Q[:=(#FNKVl3P%05j%=6<6cWqF0uOJjos%AonM:cnUO+cFnA3VBTF()[a5kn-dY\$D-?Pqso&H!"Rq^IKg-Gu>
%CD%]91b)rKWlOWJWV76'bNm"#N5".mpgA'Qrs0A48!UFVrEsh`(/30M:qkeinKKiaE9ae[EuL\=M[F4e4;2Z%rlLf7+p;9ApI>DC
%.i_nUgU':Lc-.+kNI.V]giUjUK'MI2^3j]9T>13pc3^TAi(F]%Sc'7u/Y]k@M!i"WZh6el'!hOdF[#MrrPDl;%m@I11HtNTIT9bO
%MNG6gA)DQ.II&Opgf.RDq;KJq;n\DESP"[.#9BPsU`qbiKUf\m0kh?!.1E((Efin"M9d5AUU'L,>^uG+;=!3QfhBqMQlk[ed;]jD
%N!194@:&=AHV&?0)es9&om2muH>ltTn@b)T'm]t/PKfsWC!l<1W9JId0(eC?Psgn^^4,2.\Ai-MlS!`mWpRQI6?[D'PNT1ME$cTp
%7lJnuFo>n,XZ!8%a_c.i+jrfQSm<8^*aJ:8_^\qSik)c#o'3dG>^*d+q[_uqZ)8L%]^AjM?)eOS?qGf)I?sM8H:1^DhR&%O'^uC,
%^hlc)o"gj7;7VDU[BR3G5ul&dKeD=<_W`ri^U%hAdq8cXY5?tRK.ZOc?Zkl7g=6_;T-)Il&[(Hfe"+i(eV=3LW4/EYe^AWURiYa:
%f3@u"m"_:nn\iIJj29!0>H[YI@O[i(dJ93-dqiI5N\6jC\jF^)=<1]40cbFfl)'0egWD7lWc"8E`95E?MOgqX*8<Rf+</p:9endc
%q14B&X@>?)KrqttGp_ccaV$0q9oa//DGIR\cIK.gK3d`XhOR-RaqXR/ougiT2`r&"E6cDZG@<G^<<IDS-];,E:p.9qYZhJ;"U]*f
%Cb,R0rUVCf"XY6>g2G]pNr#E4mU!sVqPQNEAGUC#\'"[uYjYl-.X,Sn'@q,9(V4ETCk77(/pkU7WoY@d-Vjr"U@WN"0aI#c(qi&C
%<o%]g>7K7K3O[PC4N:CdH"<DKlYS]&ot&F_8G?+kLPdF;j0?DU2uDDtG7QSN:Tit:eW+ICG1=\0\+W^pT%_S3]dfrs't_'eq,9B?
%ldMZ$.BW%NHTR[ZgCqV(6%%82ik$#loPnhbXbY+V7J8(%nF^]I_>V,epOht:H>iZDHL'YkRttRDjq`8),531NCO@Tn&[F;Sp#or-
%Rd924e;/]0*Z`uq$)c7TfrKAP:%'KJV2sHNYmK+%V_64h+$5;=Q"BUUY1(EAb;0JC/WPRdDC4hlWY_&^RcRg:>4L"*j`Zb$G8$T]
%rFNF*n=2%L6mfF[7Y&1sr6ALoL6&uOrQp7DX.,E!T4ZW2gF4ng"+A^Ts(jI.L-jkb:7ZU@a'RMjJnn66F\[F!9k%@JoC\SG2)80Q
%`os7SDAD3gFHNQL2%FS/K6LRK$Z<]X;V,=&oZ4$nRnp(8;hV'_hH8-)eo`l,R=Cm=.<g%AAP."7c)EM*n/ZXAa7)F16,d*dhHHNL
%qE^=CD_Ok01T("Uige`1an8.NB2d7rL!SceUpmo+Z11ld3FLY![3o>LDSI*;]QJPlnFdn"__3,"]X[\-2TG<u@88/>mm:Y<ha.m]
%FKBGqcpMS(Q>[p?@rRrW^@#+;"Wt=#]PtSme:q)>cr'U@iI'IdHjaBHic2j2\mtQ9%+I#Kq7:)3(;eG;j+R#Ha7:f]6Pke)cIX)[
%a(4T4iI'IdI!D>\,+PhuQB,*'><$!?!P0KU:\=s-_OJR7[E!jsfjdd*'Z=lmdsT+Vm<*L<m$;UkD?W#*j6aH_<Q7!YNe7&jfpVci
%4"Q*SDH.EL8(];JDjq%(R<3#@#\@<3J=S<BNL%GAhPPRD[B+<k@\lR+?ge_).(YGDnK5@F=(tE\Ip0n"VCB);k-SLUTkBABRfVo(
%JAc'?<]I\T58e\BQa#Dq_o:^1E=@40"q&t+D"X)uh##R.`AP:!9F\V'e\@nO0*#F)1M`F,QZR#>V\h9Cm&n*Q8NZ3ZHdgn^E[3(;
%06H):Ys&Y(f@H/!)I%b2k(P78R/QO+H?(uFRF41bF`?X+WTf2c)"]k?U$m(n<6h:Q"1;^gV')pS<*BuQ<F$h'_&'-jQ+O7T[qdT@
%a,#jn-ZrjB>d&CZE]f?%QmJX!_r48i0-)d$'o&e=rWYKr!Zb?hN81Wp#cGs[:\266gZ<_\jI'bYVju]I`tV;?]^Hq@f]\R6&4Ya,
%&5u][H;;'ajCHZpgQVu9^(V__qGk-6Icb3::Lc(ODsauoUMSYKpn&E_boEXjWkOj`AQG>"-j4<XpeEJ#pKh-*g^pjRT7+K$]ah^&
%dK,ra1jKYiGrugCJ%jM[%lX7=p5fO"f;AbDGeVmU&DEqbO#+-:;<d#m6.D":V'b3eEOTf.[#hte;[SrIHP;.!%RI3Sm'#s8f!)s>
%*U0\^B[s+Y$eUrAG:i_$/1I\QC!oY^.Y)Yq&1l]WeK]3d5PR?Yg@^.Bd]:N![TmK99P77BS."#d.C"1t&5[^UeqA+mOnlAfpKQOh
%J+JO$VJ]E&GMD3<'\p(!pLhqYF[WH6X[):q9ZWegn%nW5]uli\1s'IlZt@bCFNb&^/5G>.F_Pb01uh]QC!ENgWJaVR^%'Wm?$cZ^
%;9.)@"?12\_6LC,k(bJ15;YrX'kGclWd$50p82+KYk-f*g)IN2FLf;#UjkL3:[QCn<urcKLHD[4#(kf-TS,G-?daQJg)GK";e$!c
%[5YdnK9W]n%@S_2W71:rEfH2fO@ZQ(Ts;9Jl%cB)(CRQ;87)+7b!EI.%[.r>k5*8q7ke_>ZtBo_QYri/ENd?Pl[)9%T@SBe+80f2
%Qkm[Gc4Eu]k7L)ZVINko4f<u.ondALI)-MQfqG>0j)u&O:n-1GG+mYsEm5WO+j@98K<0^5hh]X!CqAljaH:a*Bha3N:-(/6g[4jU
%,4h\g[$-?j,OODWE8Kq%F[tT=i!at&aLmUi%YF:I3\kVO..$7:3E'HpQ`HB*TdLD>[h'<sC3Yde'Ud"5p\!IWPE*k&3Lc4mbaTfY
%[Fp9%^=kZ*^jdJP;uG6o]3`(OigsCf&(aJ+>B1?Y_!Ush*_*>&ef](EI!H>e#50h2LO9570m6M2Z):?p;.kM%*BOE)p;2kFUn3.&
%B-nG\eca$QT(fp'X<!XVm<njqhL<5n]nbr9f],-/3EEFieTH=%4"\KGIokj?J(@t'&"M59$@VWoh>sc"XSQ[q\&?MBmF;N>3l[2W
%jhg7,iaPD6^;jikp?G'&j/Z5?)!Yp`1B,q\qFl_h0@Y)%24"WY_?kuDJB]WgLVm*OTUrRRBC<Be^R]&"lu+6i,l?=&"j+LYo)sYU
%j&;:>-:l^1F>?.fd*_B9A>,>'$'Kur]'5'Slb8"R@:\f"FJONUjhFc;k5egBq&Vb\Ni`LqA.uoC*SXYo.4DAdf)#.K<L;B?\e!)`
%<PUhMTY03.Ea7IN,q/6GZKFnIH0rcO'+N)o-]9G4R`>o\>JSIe+1c/Z:C1q;TG9s/EuX%kIaM4sT8Vsemh`?W>f.`:'.4k^,ogjW
%T8b1nR2+%%Z#M#GG8/?b9g+4$FN_ThCT'@Ke+KpGF_)Tu`-rS<i'LX!me!IDg72pRbcB>>FM$saGP0bh:!>oO0OS!ZIehY-`R;^Y
%?_9\CH&+#+_Wr;1c9M4U?FkCIfl']3rAbQuJ$F+p`Jkl:p(Wsu/mWeu0oI[!r`1^m]"7VfS@%LXW[79c+tSsA.q*Wt01Xtr<s%:i
%cMk$aQC+e/h(>i1nEa@pY[;_EI95(WLJ+bE@O:T2;=i6RS$gTam.[2(lu"7f*u-8fl_p\S:18JLgs8X.GEeBiop9=-W3m7a:n;s,
%2:sSZErME_cL85rU:odu]DESu7U;tD.K'-NHa)Cgh_)ZID]<iG1$[TY8sS_Da#8BqE4U2AV>$nZQYeg3Yqt&$e=HJLC.A[#p(ECH
%J!6P@_p)NTSt$kQ4G_a\SpGF"WCN;M_iN]lCu_a7c_>`6RQP'Rq8MG6NU>.S:\X=KA8\$2fr=l3fCc@<$8,MTRU5lnHE(Q\97'C:
%?Q*u_[sN5)#8^)d;);oNCX`h8YIn1a:5<rss-"q9f5uCgeTOa7SiTVcAtU8qGADN4Q&>$<7r>_]=hPkk],<*a[B=IWH7cdDKi\&O
%E1n^"gl\@@Hdu6_]CAhB:X&<GU/,Rhqd*JAl:Ka2np-qu_ufh)UlSZ$2E_-=R\YUK[GA(hqjO8U>']>,#PL#h&QqDIP(A$U;184W
%:,]>[l2%>qmGn?Gg=>",)VE[&Se>GpP7$ZGl3V_kJUL79Se`jEE<?$;k=SU"*JTiS#55H,EDJX"Y9RN<,Qmr?k3+j<?shj\Y>K_m
%k1*rFp,*F0dQj@:?shBQ6IYZ8"njfBp!l19:*QpGkm[7@S6TH/;cdEZ5/G%KVPq5+Lm;HSp)SG-Addsp[V7*'f[ghf2s[@6#jc>a
%l<@qYoK#HL?P?5H:lkH:IUHLrmKn^A8HnfF)-]Z*4OLsYC'SCKMRZ.blt\ZJG/MIb"8fr6'$Erb]fBP0?]4:(\g']RljL6hH-D!9
%J?kpSp,+F9+ip2'`im7dN[Z39^VH+eM=@5#>>t?XY!=k4`7Ol7,DK[WdA*nBif+l"E=u:LVQh*g<5n<06OCLsQD<><9s"F9>ZFZg
%[MR,V)QM]`*l&L-:93&p^>JI/Bd^[?%fT`[pSQL+D4K(Nb6UeBcbo0.-]pam,+FUpb%EstXWiu)_1'"$'q$,m7A`YsVRk'S7J<h5
%s#X]ZS6%MUqUtN%f6\;5PFL-O"NN.o7p:pep&B?XoUSC-n7*45$i%)hqLAH2V-8cVc)QFZ@e%3F-"O^ghi.)'PK!P;-5)n/ec.^_
%#DjZ=5oG$+nS!'fm0K:F\JUD+LF8:L*7*ciYK)YMHJ%WBi>jPK`q2-636pgF%0qCL.R=SL4cLg/@&B7WC\J8%*?KtNqkc@"olF#`
%h'r2+kgk&i(&Q+`j[jG1Jc[HeY9L*nA2"(eIdd';/sgfAe[/PI5)ZHV8d$O%C5'2)NdoO5T(hc\l4\u!!gXPeV8CA5?%JRfbsDNe
%*QOhJ,<a#&?C[NiI5`rPg5!AL-V<Z']Y5HSqfTD2&afI<38GM'561*:YZH86#/7:WM;7cI^)(5dLfs%]52X?8lu=qWYh<TXEa7Cq
%bP!GYkM'kJm%l7<Sa]-0@URF''.rYIo&PZi^9!#b*#/jog7*r0D\8bK(>WtT%,X^eqrfROSNn(qlKDmr^8pf6FO]9/1n.^NHRK=H
%'ZVpD4.^9Z4ZZ\4#fTZ*pID1ZfBAV8QMru*HORJH_-5aFlMgHeeW3r/:K[;@dXO'-rj:2RRoRBi@bnd'Z;rRUGFWeMk\Oi]elV<W
%HJQ?)K"*VjpIKH,HDb\rqu4oOa-XUWE*V:bbT$MUIH+7cU8;2[fqNoT;mY#@DcWaNSe$1dI7t*gPgFb1&KJ3R?HTH#*aRFGnY1H:
%(S[MAO7rOS1Ul0n83LUB^7XoKkuC0V_V*FKW@#<%+H5Yu2aqL]K/NJX\CGf9`u+uY?DFX&SZF]h;KYFOXg`*Cpnm^"n6Ks>HMAc:
%V>HSAl$E6Xj*C>(UjA"ErX$]<+%P.-re0Xk6DUb8YB5"_:?<>Yl3B8Mc<.)L3Q?1sgt%7#i0-\r#D$ob5plB,(&%uR\#V%HY'_9>
%/C\^sG=8;K-`bhZVO^gDbk2'Vb&+OUp#U!j=,J&@FJ3=J_:Ke+(J8PP7U_k%'.\h%k1#f1Uj(UrJ&^*G8%X`_nfb(TN(1o+@\Ynj
%n:>uiTnY5YO'e2*CofaL&AqM,1L)YMp'3ap1UTs;^K"b(7L/IE,<mYak\=hC;ood/*1?QmWACZ=H)&8A<ncR7@@3[Nch0nX(OTr.
%L8okEXnK1R$Lqn:PAb2eLn>_QD]SLEr8?U)gSgUD0lh0!KC\QWkJ;2>0ldMs^C8j@o?)F3rqp1pf34*V3u>g;/njpf@$@c@XeS@0
%D"P5KeGSqLcZYH^9r#:.@(@<:O/MCcV!Xr6^%fXKeksa'Q]!MJU8o=J\C*8"g=b%S7gC]N/N&OQL7plN?[fc^U2mV./*#[Ipb:!q
%^>7T/e*b-4c>Eg=Zo$$'s7tXIlR,WCbeET6A&8Nq3q%":f[7LV@X2TQ"*<XEe5!?7o(DLtA:_G1U@dm)M3M;U"iAo_RaGo>2c<.G
%^'ZsW=OsVC[/)h2:>3i?KYSVbSaIIaI@9"t2'q`Y6XcG?HDbtrVH/3R*%nk4C)4jlC#O'p>6V7a_W0?45o48rLjRsX)1B<S]nTpK
%;]Xio"op]U]_gOW%fi-Z0#r?C^M1*RkaD,"r7(.(bL;mO_lX:(%EUc4&DB]H)Rm?Mm.Sub^:?3eN\7EEBt*!7l?9GsCBVD#11m7>
%QVO0'54/&8,b]m97!Zc[D2HO6Kd?@lK!J"V2'd06$IXCnM#HAbVF`YS4+4p@l-lZ8..O*QBKc0tHe#flc/?kR9%*%f<1h(l&Z%]O
%odIU[PO:Oh-L,XKeWKW6PW9*cptnjLo<$fOf@?kd,[6Y#"\P7?29sLPF=f>B=$TttOPIM'c-jiJcrM4=aN;;=,/)R*UgiiY2+!l$
%EH^`K(j`FO'aAD>90-in@W7&ZX(5^hJ_mZ.;lfmkS7/JMd'n$P2,pOKN>PCZ!lsT.22$-=l`JF[gWUJKCX].M'@!mu-^>dmp"!jY
%4jp3M7)hqh0is@R7gquUb;P+F2b+-FX?Ou(Gf5;joH,lB,ZZ;?*fmg-X!^&?87LJ$6m2]81/_<uZP=BpZE;@_P1YB[-K5W,"SN^"
%&uUq^2XcEh65!M2F<Vd2`^%ceP1WDiXIE:l9:@;MBhCKs]-R@9Ab3M4%s<BU>t)&oJ\p;[/cLCIk]&[/1NHs3Yq]'k`[^,eJ/O5R
%2K8Ma0CNh/oggec134E'D<T_u<B%sIS1uH<KgMJ0bk,#2ecNVVYsQ-`lJ6=TFcR::bl.$h*\30W_9_ep+W`0#lEoI@=J9f8cMB6Q
%5p%TcDS+g'=<V`(](LCl/(B^U^[\SG@J9l8om6,\;7<O%4$Uo'V-c:m@;q!MnBeN,n8!g.7b^Xbn8O\p<\lj_3,roP,-+^knF07/
%:^;L>E;p;r7t*a).t7!W(M'p7aFf6Q]C1%/#7i&1L7B;P$pE'lLZeD[m8.X^%eno?PS_JSIIOJa(?oUi]`=F&+$A>.E(BVMhfFY[
%&,1S@E$&HMF:TG\59qu6J&-bm57NAG2%Lbrs!X8`Bnq3-E.9SPVL%tDe?f`-m_A=8mBi9'4A<VaHES>!mVc]_n8SE;//<>V\-ENT
%E0]Kc4F"C9CPQ?33UDBR;nc0il[st,/`#"gq[VU'+$?&5Y3)2K2%LbrIidWlg>O,9h"PuN`2`j;gM2pZ44H?D6To\(s#CVE!l*a2
%_u2s8-[K[.IIM4(AMefLEQBXH<813u8>69:Eol<RILdJpT`kqti*g$&_:K0D5+>[s4P[];,88r`4T(HPp"JB`Y*.S2\3o_T2BOKW
%pAb^FmN4fC,ifaIni5BVL\k^*M&VLC5'RnsILY/d5,'\^*W-7Ds1uSTkd4^ei8O[=*?O':G7PboK'V%oH1:;G>MNTTi1[>cGfSWE
%eu!lbn>B%rm\=T1Gjo[eM]P[.]"R:c+$:NRZLHT,iH3fPK,QuNh"+>Q*q!tEW9B#S4a7eM5'/Z,>4:Cf#7m`IM`]C?LP)u;<P8?k
%Ppmb:S3<T^i5*<6YNd3L2^Aq4i*dgj^"3ajR:#IATtaSdr7[jnBnq3-E;q%10lDKWK89?mmQJsHfu:#Nf++_JFf%Rm5'T'ahK,\%
%%k$U/H0t*&Kd^j,s4ZFo:29`q+$A?Y[6nSI*<*dlr@dCF0@DX=Ge!chLHi,o%Xpunhq&@G'Cns1*mS6JbjaQL`7a2RT_.Gp^Y4/-
%i8K7H3Y28KiVmTr]2ZDc`Tuu@gPrGZCP>t>H=8)8*UGAIm*4A8CL)uT@Jf9crT!k*99aI^6ugbDNm!>-kgj?F!6I7gng@-7^7Pu)
%@D+YsC"&3/Wp0^7mC_<2gH0oJh>5k"Z[Zk[k5J``WUiWhp_2HJ]!D8.XVZ?U-_;l]S;5^0rm\8)s3-PLrO]=^k5<hSq<XM2&"!<F
%p\o5Wl-d=^fqj1":M8G6DJro+f`(edS6`kbY%H^p2g2Lsa#@qCRibu:PPoX;BX>IW^:T`frV"R,lsBDa6[%qO\KBN'eU%\WUQrHL
%g!c9XDe@=e4a<1XgaTsMc\i%+ZKKgUDXZu[?!?"[p>kh5]cZCc4_eTta%iu1m8SKHG/Bg=\8?P,p"cZ!2m;"MhlP^^qWR>Ed`E.5
%DB3Z@I(4F\emFdD4Sd>#'1\+lCH!#hIFp]&e[?iD^AR`Af%D@!.<5@-aqoEb3DU#iJYQi>2n&bcqa>W*odbW4I3)?8DJo6llaLfB
%i&[H:^%fsS#;Y*CMl/4Okf(IAd4X<?D2BH$^1P^;5$Qgs]<SpeLYEcK?$rl([Q([dD-sr!1#%/`qe(*Jk)GGZN]jFLi\Ko6C[h8R
%9?ZLe)iq>5m@F%tE^TD@G3N>H_s\[ZCH#V(FH!G'N0:(IT.bSN?<T4r\/Ie?5jnZDS6nC*_p5HgS[sSl^g$EN\!j`#Q,WE=@"6HT
%h`c>gGCa\j%i=A02i:]./(YkJR:#f:N5k_RCZAN$hA=G'TgXs2V+l#cRb<)_@a/:o46pP!o6WScgR%Ks%K5qN(UN]+m<SQmhH/S5
%B5?ssNjs=R]`%Ugb8*Q_r$sVbK)=fif1T*&b+^`fk1&!oOddlE%QV5,MI0H@Y@Hn`+FWbXddI"9D73JObr.b7*e2qSG5qP?dKeZ6
%f?a']@f-=h_>iI6RSeQ]EI@AJs4c[Nr'Pr'dG530%p.BB+35dU]A`d/dtBqJUIdQ;+^;R+DM^))"'E$]H#k9\YFE7RF[S&n=e`=k
%aYHk<Cb^G9mGB#XLH>_:HeDZ7E2Oh!gg41@=ul+_Hf<,tX6/NujcL,Ap'Oa?llN?+]4iOe/';RMopiiGC]*h"ftD>>PBP]j'"@=M
%]snW#p)'6)`eA)46BC;fWtpogpF;U<%HiWcf$C"W1W>'_^YcTs@J"_Wj4<Xfn^b+Ko7+a(88s,uV@3=KhYUcrG\-cRgTCG.H>ekj
%Kh="ahesNb:!HplqP\\On^ii^mk-bLFXt?Pc17]X&$B;XSs'W`Cu*@\_e4\doY7LP_UaEef*fKEiR3,>p*N*5m]V==+oO`m^O1pf
%Q2ASSlfEP\jNmV##X;Ikj3j?V(&e!M<OoHJN<sp<k0#s2_G>ou6d8/_T'+GVq&V[K<*,]1]g(pQk5E&k+3gQQFAK>i]ZK^TJ"=*V
%dOm^f5EjnbY1G=VO8+OWD5[AQgR,4b4rqUCMj'&X6.`%,cboXi.K%\KT5sndosY^(%6?**dI$>apE"3i/N8UBgR#)#CRe#pris[R
%^H>eQAOj`0ZY,nKmjpYOUb)S6Lf%TP5PHHB1OL_4ikskNES9c^fb`pPVb_cemA9[r^YYa9HYI9+/aZ\Ia4JqWICVUm\Gk[BNu,9C
%dN?b?fPZc-H+!J?cXV?0J'=s@Y\^8)Vu44+q,-iVUeV^pbJ#t4k9A*@s+E3Xl%9Sh%!k)4L;0kp#(8hQetf]HZbXF#QHcrnK[`ZM
%(010sFUIa4_H3opf2qd^4OiU?dLl6I6t*jE<M(!FMmVg1_2[`LBBr=t=9*h,/#W@IgL"/ab%[^N^'ng<FIJH]dApVVc_?=*UuG^p
%^\HdOVerd2XFBOspKGS]eG$+^5(C?;Wjm$:b=/T]:G61/Y*76mY),E'&b95A]7AGtm7f'Z_l:MrDs[hFNo\eBa4JqOr]L'<UKVPI
%XC;cPTp5B7]/efG@-^63F]7%jUuh9tr-dP2DgLSn1eaZO`j5["HCG^@=\aA9nA`JjQY_([p\'U6XUE>6T,T;Qf,(pr^/.&L\5GK)
%EUiktqjZuLAp<@bhQt\Wc9*"p3e-tC]a%=kY*=u'E8Nmmnj^oi;d;$0j_N&`A1hf;p<GFCauq4,2FUObqm*bXnboF_:UWacWGcEU
%[sRR8(!chXJ%]l8I-JV.;^51t8,m#@L2<CBLV.&Eiq(XDr\j'"Xe$Tk=[.?!ot-.N(D^mq\oR,-=oZ(<[]suJj1B6a>9D'XB?]#1
%GN'`W>P$SYQruqGci5sb5@`/TXrZDGZ??!6\b@%mD\ZX>J>nq=N#>Wu`P$<Q"*XJ9";GXlO_eLFX/rf"T9GkKNklL@[/B@>59#+0
%]>$9>\^>LoMTT0e5gsb&dqSc0^,6h"]t_8PrM`paoB6!4q\-\:oa>EXTBr1pr,,86HMd*J5kq:e9i">a&!t/nqBtLB<OJ3*hmP^S
%]Qn;kl1S.\52Z/4beFNi=!(Ln;UZ"Df?[dU*X.Dul8S&\T',S1/6t<tF:T%TRe\DW^RlFt.iTSTV'gcG)2HM<k7j[5)#?PN:#$6a
%+8lm@J'u@(\]bMdKl/EnEHhF^Vr#[3IK&CnldYSdIt'J"C%(<0S)oElc]7V6]tUqqR?K6e^QJQ(h&\)ma&W&]O14:R/ro;T^&6B6
%V9@>GI7NG),FCgaB4X@U>'9a&WS4OO:)BC(3u`Zf5'o&=fH\)TCs&V6k!SGpG>e3WE_eK!pb+h52BT5+-U)C0Tm%E8Y(I5^0VaAh
%A*NBIj"lSK6"LPlc!e$X!E;/iW2Wkll'M&fS2oicRkfb%en-!X05EA+H`@+A)7Pk(f^0InE"eSG^52^p:7Gq<9s8$14aa3G?$]SV
%\E(f`SK&-H)tV76(=qZ85M5B!Q(;!+in%,u5<]g[g@FX+BBE9beXQ0.^>(k8^[h'@9t90GVgS@pGh^M6QQ*<IiniP7r6"s/;fM0\
%;bfSA8U5aMgiBiHmbnJ7rC]qp^BQ&.q_?Y\hef"@>JGCI_:SA+=8!\Qn#TbS[W1p+feF)Y*oD9bqqE-'B\LRWRt#a!bK[r88&s7u
%-oUe]\'i`W"#kYm`Ucakf0=[hHVWtc6*?o6g)+W*SG9`P>H?,t>Am8c3<fZeP.Im01I\@:p/9(CZ;Dnpa5K_7"))mU2@!7O1G7hI
%0cI?u/tSMojp*4-&Pf#YZShP/%&dOCX9o@5!i'4SMaDeL;f3hW=18,J)ts4,8MQmTrf,5<%Q4.$Uu,gu3SA-H0YRT:RfffKo1RCn
%HjLFpcs,W,SEIlC[@rd8I=>,>0A^s'@PQi+XV\6]glPm0:)uES'kN>XBT-Na)ZDG-o(*ZHh8\-ol1pTkca)H8hAeouBLg[)qOMn-
%gX3^`XZ&$p*W4:;[sP=1mp/#!Psk02q+K&7S,Wo![Y%6?s7UapEN.u1%SZ;C%iEIO<YR[LhgG=WNZ5IaOI!Y*Hu!(*_NaHN]/r[O
%B:f%-ZSf>c*;OD/hjjT9o"`^;Rq8E,]ah^9:=&1MBCh&:AeUYWlcmom5GaH]:u;t-2WK=;U=3`;Zuj+9YYQKV1CBPuBa:6o)2.A>
%S<h=NN'_\U>q8?CfKWY+6?8If[QaZ^f(F4H8l`"B5A)WUI"(,.%K<cKeGRB@QTr]$QgS5YCV7CTrPGt%/*5U7et_VZJ&12JqjqYs
%55BKio[^9K<V@B%L%h:7J$l&#aQ-cnj4AT6%XCMtl^lt*&KGsU46'*4O<0CTTi3a3ZSd6O-ATQ]-MQV$m2su%46r$F_QWL-*K9M7
%U8uoB0:_tCCiT4,C&D#XD1@$mlq_uc0$WZW410jA.iq5\)JrgGTtS[s7`I<,:l4)^hKf-0Bm\mXMgl8AkjVAIbORP]69ZLCmbn,a
%f?m82gJ\KLn)b]FrmZ!.aXo<.T2ld&2GZtJe&;PF^<^22QrC3'DuN["I=:U%eCS7JV-/9FpY3uidtk^tm6%:2jZ1`8M8W]0Zh.eg
%n%8T`4-6!(:YRu&o[E&AnYkA:cirudAa`E7J)BVaeGD&dh`(F])tf\5T;N_Wa7#RIT)'Za>JfiurFL1_jYtN"hr"@og#o>9>2V?a
%5#8kn2nsG-e+Mi>cG$X]595ZB[NjUDV*cufSnQ4_guUCpCagfF^W(LO+$8,eQL5t1&@T'@U(2Ir4+?Es)2r1r(=nW7X(lK7\_C@^
%dhjc$s*`j1W8gp^%_HhNG@l<!oJmckDh63:?B;O!^<f%pP04[4#gS9ba2;M)pLLIfMef=&Zi/gfM'8-@o[-0"hZ>UYg:Qs#&RKbK
%o@ggAe*$Zri8K#i)5a#Im]F17q.Vk-E*b%Igq.PX&M4=-J"kric^srWa7I=1"8q+[GW4p3LV#M;9Q0rMSoK2f.D2Oa[!mMhKpQ[5
%ii_ho()JScrh+Lg_i8pSMYcK4p]OLo_aO$"5-oV-3hlP5Frk2r6S1d%4dc8^G"Ji&ls5#6369]9$SRRuH"()"[?m^O:>'kQQnO"#
%cSQ[5\$lG[*^r,/G;Kmk\[rD]]hh*VEHWBU<DNk3(?p>j]oR8sqf!u)\jX&IqY_d;KV]>2&QX%QPr,T!W7mRJ8[:`"JKOKG#kRcE
%j-,TCAG$@Q8=AGRl!*$cIpZHn(?f`!l0.?GG<HO-WtUo;-*<mK`#LmV-8<r`Fo;,__,&(s.WE,IIN@>&0-7K\_$]%hqRRB[6KVlP
%al'3+;g!\\l.'d"@HDG1fc7,;jP(@8huakOdI`thU,.h?bA2l@XZ+SWZ_7`)R=j(A;!`mmEk];Mqh;heA=jWMXM\&bIU>.3Z8!l!
%-^G#'3$;FuR?d=5b"q?MS`irBY$'S18m)P73-un$;*=hc)I:CiH3VsK'tc]=(>R`Pf(!<-q^EhMF*CEYA+fUs,A-Jnb?$=m3iZ[_
%O8"O8lFY4U^Fm+dnCD(DmY&9YofV?CbN#@])<E"$\pS^1Z3!po[Vm247`/JO5^#XRQf$Mh0Zq^&n`BC=\4"o;rT_0=LI92NQ.>7Q
%*j!RDO=Sl6*2!rOVtKn+iD0B9:@+NY1SKCNpA=(A=]N;]B.'"p,!?So?G9]O5%l>AJRkr+?d,3G$Q&Y?,?miJV"^@@h:6SAT1s$o
%_6@/0.'_TCF);Zr`6f*l=^^!hF75Nc3P2ct[GJL!oQRY7BR=7%I;\*#*k%GI]RD;r(rK"5I^=<LJaX/L$V-PTSNcABo%\Wka^'.;
%n/bVC^2rDd$?kg;Einlr[t"/[P2$Kr0&/TNid-%,*;TtE5,dXf;/T<<HF!O<IQbrB1U59?o9F5mafeLT]jC4V*cW-Op&&[:eYKfL
%$gdKS#CWA2(;6'n%kIJeGKhZ;K<W/!OoF+iF)U(".J3pDf`1_2gfS[MU;f]1"Dh4h9Nj,TB=sA`pOmS(9thS*%cWIA/sDI&(M'OQ
%?6pN8s2`c/XY5A9Xui0.KWshY^/m`[I!q.?&8i+7f,1dX<;bl"I<BT?qlCOX'g]Uk2-`[)&?jo9>c_62lTHNWmq$W?<HalCa780W
%F5IE'>99naXh?\%n)3H>T2+4u5'tEN)tkNUn^>SkDX6X^6^a//EU,:RlZtXX*_@GB4]oCSIq\Auk'#KahHiG>qX:PeYKkBSDr\_?
%-JUo3PI\dO5O9A2bl7*c%<QigY=$(;ac*et'X!:n?f#(0pU"9kaNViteOB?!Z#Q*C?TuZZ[o`1I4IVTi$N>a.H=aVs2q.6aE0[Jo
%H\-]pYi^hXJ"6>,T#KI30Cr*Y`ogWOhS1Q"+!@0$k)15qRJcmRY:'6BeW5tV.s_)0n]g2\eb77G+.?]!3`V9trMdi,r[+E?8(-,e
%7!(P[mghm]iEaJdhk+KBZ<:P-T3`B7e#PT[kCig2^UDabo)$,fV8`%=l?fR%YAZY?I\Lu4%i:.f45]>iccaKX:"e"<h19s8amjN=
%2E^)=g2AgGpg0[2Z<NqA+Wn@`bP7TTL+h.',lZWI>:7>eqJZ@bk=F%P38#PT`SQNO^W8t@(J^;I/+GADQ+.(p^,"]\4%LGXo!uB+
%(Qc3+b1_NMW`QKF'DnT:J'Ao#r:fei]?6/A&F$_YY/f_W^$8jAPWjS>/Lt17]?o#JAAbu/SDB+tIpR)GEr"LR+!G>W#c4UE1^`Dp
%\?Y<5iKr#/:8bY'VQWRP^\YromUP?UZ2)lmhu8,gO8Ml,XdQ6U3h'?coAdaS]pjB;hS/kD7mf:XjH$^.X2`rno]l&AhWrdC^]&_s
%DggL@naZ:MmrPDiei*N]]R$t7[pJNPIe=T_37tTu?4o10a5B"@8s4KrY-W&[BeR69EpV)^(L(g`LZc:ID2ZAuF#\#hB,#oKB-kW<
%je$bh\*%[!o?0?ns+PO%XngN6H7mLTJV6b?J,cJDpuq)0oBjlsr??S's2kg<G)MnUpMsd*bDea<YI3952cn;]+)QLVAFEgXHh&S[
%AcCZG=QXg1(\O!.N8$o+G!fGZ\de*I@NQ[7ipdY(s8IZHL"-u00u?0FcP`5hhP,RnHoAb7m_ekrePEZH+Cqd3A*?<67c=/i_^8*J
%p>f\rH#`cB'@BURc93_l/FN#=[d#J4LHF3bHEW"fhH(I\8\P,sSl8rH\Vq<dkR%],Ls::Q3?!_kqNC-`\%W)qhCbb>(U"Si:A[8G
%?;e<cPXQiqVUAZsFaSXbV#I#B+.OFRoGX9IfW;&oe!J[Qe%?Ksoul*0JUYUW8eO&U/&p\?)3iXV>O1<4m'qT%g0A7U^b&s'Y-(7?
%.+0Q$aP7\p`.g6omK(H"XZIE'Ql@F([iS)R,WD>b0"o6od@shO+("'^>h8.#*o7k_B3,=EKY"]or?=X0hH:etO.)KMb.F&Scb&@8
%Df4>nH04qb5P;E;)h2dR\h@[8`Q(Wt^sL<FMn9KdVMN!FR.ipCo#pQ\Z6j+eI!K?ML;]o9>Dr($Mkg$b\0.gO`OQ453Ru)=`>&jh
%+GMq(Q%*iGqsnSQQ@l8gn*c9E6(5%WX]"7"$hBKROn/K?Y,hqG%uu=M2"0>UOOU!5UNoGBHi(tb-Ca(Ade4Rf2#51gi`#sNj0P1'
%^HZ&b9a(-:@nD-\o]4>0q+:8WqqH]WT5R&?VgA"*b(m)X-b^a*l2''@&$35QSs&2Sq6jhW.8IT=EK\qsKBFNd$%8[D)0@bbd0l*r
%Li5$XV@3f'M;7peg.Bt\Kr;K&dW$I[oC\8;>i64VDr-:9A2C\,]79(!Cn4nIfGQ^"8c&ppcBV@OY2rlgO-b,Kjgc*jqoBP[EZLIk
%jp:4r*e[3%M_<Uf\\0nkDmd6HoiQbE5g#B1qSC'H8(I0L8^G(rbajL#&NeodcGG+hcJ'jQ`KD4RrucS?dN.$RQ`eo-/E<KM*[L(&
%R.nJNEhlV[;32Vh:oDTP\rjOf(Y(KG0!b]$aJob[fKTt5W#.($Y%c#Id`XW(aV#95,isjKgU]T&/3e'RZP^]BDJgF'kF2,Lc:/Um
%"Y9$oFXk1?2NM4TZoi<7)1;raO.O+*H/dN@\"h^4.LSN8qImFjWIUF_nDMkeW8l]#67&o]K_Idn92Ej7(+7Ej2Pf!6<nP1..I%b&
%Yrr`dl*m48.I>`3kPGj%P?-r3Nh+V=I!jja(S;c<eFD%/4DeRm9fR"]iYbuY:F@-l/UogsJ_S,l2K%[9b,7Te'PVPhG!t!Zp/`BR
%P=Pg?oDS4SAt[%oPRblo%Zg@AQ_"]RaRVaOI.Z]l-c0OS+[Rcki7sah,W[Is=*1sVq=V'XFlZUH%s?e8Xg.S`e(=Pc@;S"fJj.''
%cOP%(mHLjbYWVUKX]IESNlC8K81Rd\W^-Kp#HhQ^U1EUD(@"#2ETOD,=e/Y\,+e\_0q*))qVddK_[[qrhD`$^1\AD(R/Q@GBa$#F
%Blq0BEk\i$J-p7I]jDe8<AlAE=5a9df5].T=]q<BM1dJ-$$!`jehK5$N"kTe(D^6Z0.u$R.o:U^c-4+0/(mn7.9`BKLH,Vpp/qK!
%EaM+T/=\5bNc.E@?e\7<?!E2Y*rf30\`LQ[rg9V@*J@(aRJgg*G$"pT[Q9i*%a(nh#N6<``+2VI40/Keb>M*)BctkRTKu=Wb7?'!
%CW1i?kpuJ_p!%'IA++eJ,^&0(.%ouPSZhs])#JMd:][POW<3\V+3hkBC6?fR<mS-F/>'"oI_&'k!_V/_YCGRqC2t81q&!I'47d-u
%dr+O/ro1i<bB<8&'/'?@13K=Mc1:c.'O8&lr9j"LVg.JBSN4'"r\/A^D/iE:FQjju^+YFi]A^3]jbWAZ\R3P^#I-<sRn>)cjGbu-
%3V0oYi:.lWZ[K+G[BL%jLQF$arWtT;Y:ZX7MC\)gE#<jp+%F[R3ZLW;G$=i1-]2/%%gV)sX6CU2?Mk/DHpaO5?G=#_:0MT"PLdoq
%mAo`3&\BJ'=HU]Kc';;S`d1"Xk<_9Y-0AM4F]j"Gq8crQhW_B;L'ZmYp=pnK(QKdhmpW49b/J]q?$DTV]Y>a/075Zl3o8uUOc/s)
%GSA`-j8CR?Ga0'6NgARbM\hKtBfb+gjl4P*Fn`,Z^B9:e-BTbGmToC:r9K9i.5/E<HEC`pU=KZtjqOFA,+KF,*cd+T=bp>Bpf6`'
%4o@E_0cTHM:L.5F-9GaUXfu_imG3E`,<<;^[rQe_[<?Qfbb[OZSk.ngoZg&"&U>baY4E?LEf[O>4b%A&GP[b,$7g<\*q`]!IsdOB
%*$8hP&2[,Q%!>U)Cq!&GKSpHgj3BqL<s02=NVqf&/A1c9iP4Au,Y_l=P=<.g>pd`5WO%[)$g4)%!KU1(SP,S]kn?dC:D!0MlgI'P
%n0d>C`Rf%cI2]lqn*@Y3J!`7l0;JR:Dr&^,]U?sdP("j2NaEk'A)ZO-h=kj^56(EMC2n-MrSl,V`npHlGIubiIK&kJn%WqA)1-=N
%I.upWh!)AF^mV_:l<1P_-0VOjI&+?+rpCd%,FdH'57dbVa<*XnRuK)rod9[#s5)d+oIQp?J+-hCp*]h204Fl:B<o)6F,ur*F0CVN
%+7C3FUWKf=<nMe;[@r(`C$&bs,JT<"mhpQ\?`1[7Dr2Q1j6i$og:;pV\HhlVh-TIrG.R?:,a2Ta2S+#boEbV,f_G+7e!t.+.[0!7
%!Ch4d[S7G"O?#AO<ACMSZD*4M4YgSGTLT@6l),jYk3B5i'lD5m.j*?=$"#]+o>i#>^<?(NJ^chu7TE_0$7r4HR;3ri^*cla"LDiB
%PpP%Z5U&SP'Q]uI]!_*3kXIh9[b0VjNe.&#"]Q)L2kcopf%?mmbk_%.P7nQJQBKeKT*e='_1Bt[s(Jt%O6;B&$4VKu;bSDj5J4Lb
%9\)+i-&-,I?>,/eK<;JCqD68&EE+fk.-21@4?#)-`nF9mB$=ToXd`2@jE#UtN,i^YghL.n+)ErMCd-#-b!onXe>>fSe5poZC5U6R
%HMm6*2(B?Vggm2.1t>j4LSh7lX%G>6+d@rAnn@B9W,5q$]*!(<9F?bT7uS*CZ]TlDS=(L!p(/K@PnXP+OG:<,<VCn.B6(65chPTr
%mAS=9RX8F`gAnOS2U=q".]TWq#pgu=jZ.#[P2P+l4Wm3mcsNdB0sG]J('[ZB;CuIt?quDj;RnB%VTpbj2]l%b!I9MMKse=C84f(`
%Pm[Zu['#6t7(qB_1c4Vn>E4TPYmf0.;$![d=^/N+2=r%$F#D8PWN!aR?SX^K9jtYI5sqX@XiX($KjlZg$Mnc15MZjN[V5HR`jX)*
%oZ&j[fpjCb[L-K3a@8U0Mr_cl<&IhG)TdgI%r%bBW8KF,q^ADF]04J0[]R&^R^]jH5c[p4V_(A<f!bI+[]W7.o&Rc-$!>rp<o%['
%bt2+hKLeLpS<m6N5GLMV7)):!"C^$PEkr%P*&R&],&UF+IY^F*PW,I,##j$Y;AW*:10Y%:i_to(/bB(Gkd@f_Q.Q%I"ZF'd;<\,W
%"$.QUcs3p"+Nht^L$6mF*'t_W8L!X+b$t+ol(eof%k*JdG(q<kj'A(;Wr#]I`OuPKfGTpt%d[bjiP'ChHk?+L%qh/(/p\'HV%n/E
%8r6qCEXI&78c=o)/"-ES=B\FeO),!S\0+?e`[7*2%9WZflN-&2o9/r\/$`e>+b_)66I[L]`&&bn7MuMf_.[La<D+kN;6#I/;Hnj.
%^?HPR[,*0b9%?b/b#"5X4*I(q)j9oP\lfSuR`l'FW=_3^Pfg9O]L@,n1I]Sn&5/IbFjj!(hTcl.=cSAQ4q$Yas1PdMBomA0ef<0r
%UXmfeRu1<1&u\=>+U'koC-lPY2E5/8EjKI>4i,f,S;lSWG%MrpM4NnQhR+Q0OC(f&&+'T=OaN>-OpRQ"%Yc6lI]*,cqZU^YBjn;&
%?.C.a#Y&S2)9kUGBN<Wj?El8FKJ,nu2/T)soo]SO1YRS@,+qLLd3.\R0!>dbRn@hAY'D_p5$Ia[@1KR30Jt[N'g5=YbY/TuH3fs9
%O(Y@_QbtT'<D-c4@ck+d]kUd"IMdu^9kt)=3CTF,8pd+\\)f!ML=LlVR[j8?d0O-tO<Kj>i$?a9C"]S=\"dNPUo'EU/?fht\YtUp
%##/lIj4*Qb>h77hTO!GlpaB<3C%3\M2$=WLCN@L8gPuVEAu#XX+=dZCWjWC[94p\!kLrtANgZX#7DIhjB5S'_bdMSXKgM_e1[etD
%_3,)Y)R`H"lQJ=\UuVueZW3hu:`u[)9!K&&`CqLd,ph4[D&;Ti/$>SB];a;V&dSa3c4^0#%!E2MS=XYtoFU2!=E=cTiun'r+6&o1
%4UN:l+k/<d71SeVd>=E&:*P(/?94n-Gf+u7RBg7m63BS["al-0:sT\c%G!`RI/nbf^_>8P+KVs\qpG)q<>G$h;klNLS#!&PG6)<@
%=5=<E!R0\cZRf;V!D)%Rie8QaT*tiHT!>F<mIL`'Y2;S'2uWoO;->FW>S^AX7gC@U\t4#u*U6iaJk\J0]Q@KugD^oj\rpL0KklkH
%WSb&,h>i!Kebm`9W<M]&>L8eZ4k*6f&7uL(]Dn5poLY8f1M]=]6#LX\QQN$s=ZF8/[)3QJO\W_-'<1p0dErBIO&dpB.$O]jUTB,%
%+mso]Q41=*bl^EbE+BCLYMTB.V?R,NP9!Io]oYT$^]1!%rMV-E2DmS8?dgaIC[hi^UGK+>+u)+^kaLH?oc'R0KO7>V0l@4!X^&;[
%PAYroZDDtFB%7BiUm6^Y**-p.'VtFg&bR*:.\fRG;/nGY&U)6C+/1rm1X[B2dYot)LAsqg+GTotZTt>t0b760[[H>q)8,u\ntm,A
%)@cD7=]RHs-QPW^g/`A+dE,m4H)JWnF37@qWCj5+EZ$`H<9?Y3QQ2/.RlN#>!/6:m&DGUrB!rn!UTj$NW6ArY`p37!Pdm7dWeTSM
%)]7]9DJ)ZPNDE+UI;h(Z6.F$0e0NH@^$1C%@B[]E:<olpD*p,=GQ\M8XE/_.LnU8<GW^cN0X$\*>JZ#XQ_Yfr0,2pR\uBq6aU>D.
%@G;To(/"ACEEY^F\Kt/gW"I,S7!i>MLaYd:=TVa[$!94L$7H@8A>?)NN?0Bm_6DgS2??h*!$[D&>AAhU=`2qs6(;oW<oW0oU16J.
%*"jro2^N47D*h_9Yt\8r88ZHEk5%226u,M_96C923JT_<ZZXh)<*BZ1U&qdM&?fqIE>ldhOu?ubegdoDhPRGU$OUkog#R_poN`M^
%5TUdd!T:d-:n+a^8I+pC%?r1Z9touJ!a+,QD%.^)br_5GJsH];l>4T9$24j9BcWSirf)uGBY2aE/./7#`@n)7BlGg7]mpqn2]V4n
%.*MX3)J;*VTqXme"*f!WOj\ZW8b$NV7aB-POsBa<Z@fFbdZ_Jqaq&<P!=9rp<Z0nkI4=Hs;ofOg?3?>n,AfnQK%FKtR`IB/PU@GA
%bq;l.EkuMEWmX@5l4qRMP(m=/#[l(lD8V8FTu)OLo*W[Q5E,b3)]6ap-3j`#IlMc/P`c.b!A#Oa!2]9`\gcd;#of>3X1<eqLk`^e
%Zb_c4@Asg?XPCjdf@sQ(/l73Lh`.u05BD$T/J.!8O0X`F<?]b#rC4^sK%"Z_0qXBbEch-)Tm<4kP\Qa&#iTHIC-smD6\TLc"D67%
%m=.&k>MAF]lqa4X"\bF`k-7-%"[G]_E\c^+L:3ldA<hcsCjUSSHCkXGQ+#Ath#gE=@I=bU2ZAlFI1?p<<ZZ<WK0_[7\BemWo9ji?
%W2\u()Wj#7cc1%?n8)@-qpj^hhqqR]c^12VqkBiUWOfB9`jp8u`l$"?a&m<T->2iLN<dBj<m\8p)jG;.>gRND'V4:Z]VUn3'ZgB\
%g&eeeiabP-a2;os,NldUs!'dA6g-c<ehkCbdpYmB*GpYfGWKZq9\`A=5i,OPL6Sh5B>G@7],V=IIQ(l'_k)_jnmKb;TXOdGE$3U0
%4nh1+f4<Lrnl$3.+3dSSH?D,1(%Ki5r3YNdL\&tg5WG:+FpbhDVtH]=`/!UG+/$m`NIfC%[Wk2'c!ZTCL#19_4rMI?lJls'i=)=Q
%%JJ(J;a2B2mmkl35,#,e*lTJ6,o+$-:c0_0gV?)Q+f2&76X?MPH[c%<Zns_;`(JLg"2LY9E:;?\;56-i42?e=EhAE`fEm_a.2='$
%C[9:'$K?f7abr/E2MXR.$EukK&D=*:3'O(T,@mG_Tgk*k,+7&]0h9Sl0)Sik1>cr.(q-kPcmGVC*u1nX+Kbe\Ls8Q=U-OB8m2=cJ
%Eiu&U:m4tk1gAAm_\LaUQ>gJg9QcZ-pUpR%Z`>),UbV%RA8@AqJ2I2\fs[].nqprOPd[l:^Da07%&54kY[>aW[_W8!:-+ZCZ;jW*
%=uT&POo7N(?%a!qU)rh,*5m]4'\"jI;d$@7[#:4b6+XA]:p6j="B3l_X]-$XSts*gkc+\mNn0Lg<TWl9`k[67g.FY'@7<"d/D`(i
%Hkm>#f;ES;fgq[A1YdkDVo2b",O-]pO.75Qe_,&7$PiEq^_e'OCPmq>$\\fA$^Cl*NK%[R%Xe_X)HCa,p'80Y?r?2fR?\sfAC6Vu
%d@j"X;alBH9M_!^E!>7!S-;bG[#O$P&2j_`.8XFc&d3hhEF;cj+>/D)UkUf:<2/s"4ur$0$YPm:)(C0+KSeb!.g-rF+;b0G"eqX:
%C5'8mW/s<0,`U9gmSF/j)Q9/*8NqdlD=go3**ag]>nejP$sNA>?ulMCS0<.5BQ0bQBP0dR/5hO*_k^Fk8kgO!Bp,`g=c8peZLmFV
%V2ZC/P-U`T$bSQ'f:cd.*Ks+r/'L7b#2uq'coPVo$qCoY.Q_AaFI1KpB%`54h0%JkRWWW#.Wd5?WVtPlWuruc&f8:iSP=K>R7]<1
%][!'7`;X5Kc=fq<;[@-Ja>ggObhA@0="+!T#$bH!.9[A#X1V>1QC,CT4]n`O&tqDH-S,.><a8Z._3%<q#)H6j)`;Ue428k\TG>YF
%)=m!W0Y$H"3>SkpPrRW9Co&RddY_9QS;2MtXeBSW+Hnmj(CX+[rDbj2*@6M3FuWaO2!)a8i/^skX:ii:nT8Os-`n`=EFP?J_o2RZ
%$?01bPpi]IkT\/aB&Q2;",UseiD]mF9$Sd#-p479K3g?l1"?2a+:EW@;2-Us@)@;#B3:Z1*u&CiL'JB+Ho\N0;rLlu)DQ$6$9"XT
%L.!!Um)&]/f5XL*5Qm%Si+!0b5[tKtYi'".L9f`I&4Wn^<>:0CP$A\jC,WX?$tUVSBSA@,"R2A7%eV/r%)E2rHjmj<-@?6;#UXqX
%WX'raJs6Q`d9si3pkqDJ!>=iC%?l*e%P\b\,\Gc`87H&*S.?VS1]<9rTU>!,6jL\)5:]Z>f/V,h/"SeQe4!:mBg;bKNV-2?@F8!+
%(6-%%*?Z@I'>P1F&aJpPBMo)W5afu.>K2I1XP"%r'jD)CEb$1eFVW]`2DEMVO/t3%1d3cc<1(mo1f86J;c?+,4&/S<Y$.udl1\7D
%A$(V!!(uL@@@&+&Vi&h"8]k63Z)RlfQk;8?JgjiC+Z-R'8@T)%/c1nbdQ!Z2Fh\p)>q&=6=,f\NI*M=EYg.3K<<>W7BJMJPEXo?c
%1)cZXkH3Nuc!fl?#h>&3;H9qE"3O^'C#uL;49f#ECb*&!K$XLXi6u(g'DG7IZ7RPZW2?5a*u.`i/qtH=!DAG_@4N4L^T1c57f8G-
%LTIH0<GD6*ErepI*Lpqe"NLHr_4-m#+?i.4,PZ(;K<bSaUZ#q_"p\d.S-+.pG;s',cTMCAnII2/!=j_'2[^->7Ugn+&0`hb+8oAC
%<Q1?>GcH@L2^e!W*Y\f8Sl]?K0ABN7-0;``AY'qW_IP(:`)3F4aYG!Z<Lni+M4rN$3JLFIJ,l-_d=H-elkU)3C>pocDA*P]C.m%Y
%Qg:tE(g;&fL8-5#D1"^ls'F4gF;)t-X,JH$(&N'P5c=^@mXJ37$*TBsV^B)@.\*+*nZZt)nuL6VBdZ0:(/?XhiO!RH8a%bZq4U-Q
%j2$W(`t@uD;o^_dZKaPB9gLo'$Sr?S!lG]T,S>TX##u3a$i2&*W`;^Y>sRE]6>Zg7*TH?mP%]5XU0t9>,n%!?m"?PE49TAE]On%"
%U])-T<Mbi!&O73lA@0qJ5a8VW%N(0ojB[I%&QYV9D-`0j2WIB-7Vu'q^,25#\<B0k9k$MV.A2R-UN#mnRTB8!icHW=;HD/ui##C?
%,oT4V?q.J.,IL/3QKc''m2V.:q3GHBE$iWaKhPj7NWmZnX,%NOG,DP^2[J+O-u0/UCu[!]$7^pKOJH/O'o9`)Xplfi^RA=ON@A$]
%S(7OK!]0d;'B9SJ2"92]>"\O%42n+gDj'P))&I\?3N'`HZOVBVH2k;KTShLCGY5&3JTqYHd!-$B%"WX5Y7,u,%NioFE"3t3BKV)H
%QQUbjT.!o(@b8b'OR=%J:i?QVU\J4%`1qQo#fNM5?jFU`p0\4U86H$%FlkqOM3"Iuds+D'LSk2cb06%M[[DD%YkZI*+gUsh3[N;J
%+XVosSpadgCM3@AnucXP)c9DNkbRsK<pk>m/*d&hU[aT+<u)B2-Rp?4ckiCaTN,I-=oj?F"]2$f$-oaR=SG$(9\5igM5$ajVC%32
%PF.pql?Hldde&p/+"+=3g6K5rF4,"o-%p]3-*)tCcKbm3#e3)DXWW0)-*]OMc[jYA#K6^Li=aW0+Y)B@fEZP%)QF"ES$MITa?><R
%9L;>,e3uQ&d3:-tU4L[H<R%[g>I:4lFX)*7'hTZb>46nbX+<[?O4Gnlj3\b_ngY1S:k9Jd7/_5Q&e6#@P`UMU'9>g5,NJ*#NJksa
%asVIb9\$QQ2+SmGZ@&Q4+Qtd/hHQbjZ%1D)$3\6?C:F;C@P5_FgY@urOp4t^R<.e9YB.5Y"4V[L1-&X;q/a,3&-5Ue./X@E7bk9u
%ND4,c:d5>H,(g1@*+?Di=.^G,-e0+P4%@KoV?Ai>'iLhid6SdSnQDfm41p=!a[C75%W;(u8<t"Y.l#*m9^"RAC;3Vs.2:sL52/bk
%-qZ7D)s#q`Es&_X3N2k16l)^!6UE;J?YhU&aX//9IF7H@+iVU.p_&#]!L=tP^'MU]3[DXqcRQpIDU921i%p9H%:Mep"eJGY&_&K[
%d"9RndVp<>$$ChMYm*D(?qY`3?aP0)i4EFfQ<s1d*:W;=I`SA\0Oinn@H@T2'&'FJBCc.`BCis<O(\(,W/i=t_5*,>o80.d8+U$P
%;,66e1J&'b[$g!8ANJD;6bPW)&*AL-*tRMA4WfaHK/Fasg4M8d+D&eJeCjE_9Kpg@JB7UX8u,[m6d1:FPaHn`FKEF11STLJVOnMB
%/2@+)k[97HkG;hb%L5X#km5mDj-4=IEj2Kh1G2C[F0qmqNkl+kEscnV;/tTMMSegR$<IamltNIDT4:SQW3W\-Nd3I)4sksLO)f`2
%?CF3!<cWHbpXB<PcL4n,U7GT=';`lWAM^[aH^LQ:$!da2+?Z<e?^jt(f!qRe.-''jL?MX'`k<*b]%8a2(N<#[/0Og'OW_6ViP?\1
%JL*cV=]$IO_NO(3'+gQ5lV\4O,Do0?Gt+YIT[FY^Q&QM,.t(_fL=krh]1TNt!]h+(b\N1>b1k@@j0P9R(@d3.57l'T<T>Sd+KV6$
%>[J[BZRfZ_E@]VRERI*(pr(ReRc`rN21,i4InOm\T6Fc*TpZ^AQFV2cHaBpGl/s/fmNE&OHq#0=_EBN%)gmGP`'$:7-i@/-;)JID
%nX*u@qI:N]]s0cG=EMQ_1h4oJl][:H$YiGGMBg]M^'e]h]Wder7HRjUW=B]:].,hjk8/1\fNdMSEunGQjqi+<=-[%7q,C"P>YIF5
%\QD7JC,+n!N<JQFFanVFcLEeCn[0`l3q@VVp^@fISDZ1t6#_G%1'tc%534Wn<mR.A?SXrl*ZFYEQ]3Ge=chV_gYmac5fE6SGT`^-
%kVu#eSR%nuJm-$;S:Ddj$[Yi[""/&XKU22](8FD)d8!/fpj@-nS;^noeZB^ILDbu+BJPH9SRL#Fk<m=\$u5C/,(.)5_;1$haK#M6
%ju+"V24Ra7?fu0W<>ACsL[kX0Jf3uh1rYub$b8GnC.gGLTj;r7V8Ad<oqBVr_PFaKl"1[q],.LUA*=G(e,lP'`Z$:Zire#&g!#R&
%U9Nd-JusQ8X]tlnRcpVCQqNLh6+]I(ILS_q=A\_q$Io=$\%=/qRN?U"*2b4YO'+WD)Y'o(HK-0O0m#L+(l'*2ld9<'i?QY!CiDn@
%BSqh'<k(]Mef>&sW8^l(>]g]DLh`>DL*u3A%S@+KM7CP0pNpkKVLp?i_BX58h3G1"l?Z%.eRdE/7!/sI*4;<3C]^WW(2K:f.[lWu
%XR!Gj8`\;LQjtAR72U#0FhMOEL='E];&A4.VC$=TQd&s'[,.$0KcV84BIQ,DT^9;^.WPf3,>m,G#>]3$>bj5*C(:+HHi\F\,2ndr
%PkTJh5tYQR1h`1O>>ROA*l$Z7[@W93M][[n^u%^am+d*>d38%J,[r^?Fd[e.U!^cXd%D3?U:[_qDCRMroPH#a-l4AQl2p&$F_*^.
%VM(G(Lj?*6Rg?SMp-gL"f]i0>*,qi/6JUjD8f,`2OWT?Ua,_6!DNWCTZp7'l%MoSETVfm&3BUD4-@qHY=c)'>X4B85/u<K2:<@Jk
%C"ne_d^46ne1HRS2ki5Y+QQuDXlKU%2:Y,qBU4N]:qVR#:2LpJ+^VL<k\fNG#VThBM^V.4:7fMsA=RcMdNk&;(/SW@b/GHS9Vejb
%"n>tM>WOaaLR!O28Ti7%#uoI)03?_ui'!U$E-6%Nn30uZk]X5O.U(j=_(i2++pRSa(X7CTZS,b*$M"V%Z$'ZO+df2S'/f!9(5FBp
%%qR2W(061BDW/LW-+I^bg*AuaPppmT?Dd6>.Yf-B7bLqemlYP=(!$St4huLeaAJ&K@Zc$T\X@n5;SkWLVe\6JNU&,GS<8jS$VT(i
%"ifXKkIj=59LRDT(b6F+e^CID22pf-$rT1<h6n#4KfY1T5`<a_XoV$]qk1N5+B)L1'2`%&L?J3OmO09Zknn3'J?%jj4e$u%)WHR.
%;7o"mauZ=I3J]">6uEo4#>L/iJ;omtBOJ[Y<aotKkhF+V"HmP>oN5!?P<^rF'Luh"IOU3gOo\P.?r#IY!nS)4TEuj062bR5Ys264
%Y)77-j-o$-]i._<B5[O4K^,-t64Td)L(A:i"4E<@X2RPCO9+XAPi5+:,O24,"^UQJ&5KuEem5L]m>(\D+if"jZL$orEnp>NajB)t
%/ZfPC7WY)G3HNDIEXG\kT15AgW2fHr;XJdD2sI(aC..a%+PB*7'D[GN/DMa;HL/O_+tPKPA`f#.'1nm'94j=nc:\i5c^@lRMYfAm
%`]^Ik]sWZngUbs?(tBR:I-,Z%W2I`=W9M_Pbn,ro>Yoehb"]_@&kS'(`S7?2fNM(VJeU.31pB]U/f7Zp?#>:XO_[Zsl47[o@t*be
%<#6_6Y!ROA@s)c.^%!RJ7?5;#W?Ldd7F`qY1s@/L[[!,L*Bd.TM\U'TasJ3nNS.>=;aa0%.Pr''*K>B2N/[t[NP/2Y#hA>;@2s<d
%Y"+r^:Bd8cV'p(3c_)C5PMt.QAQueYKj1Gg;5Km'lZ.kV6<+Ih+`HXh:oL2:IrLB7lWT+?d9tYlell;rDep5DpSTH%272fMRgr%T
%f58!0SF*-:;FdFc[3@E%L0`r*cr^CsXOiaKmRm+'@MQPX*C)_Hl^V=-ZqUh6Kr?hfepb)keBh][<!=!^WC;rRkXV:b0Qt.9$<9e7
%]M#O&6o:kD^(/mm6oF@@%22Q,IC*g:TFFqp6OV1O04l4BUc@nm:^cEK['C94K@k/YH0Mf$[/]71h:*">diLu9fs'k]\RSi:8'3Mo
%Kl#WAnk1R"=h0$`+l&"gSZ5OUZ(.W-1hIr3B-PA"kGjr+iZ<7ian@T,h6>kO_L\BH.7h5"BqB=kjrc%NPo\C76]lF'M&F<gS?>#1
%ntE$]&k3/-Te'krKjs&3$)c1*G@%9YcUXukC.V5(8/NrhbJ\#h_\lS1$\Z2.a_HJp(Z;F`+brC(Bt]hr`WB"3[8;>iFl&N]%E#,R
%Q.WDLW#]"icUjDe8Q`i-TS]ctU.J"*&D:h`TUIX@L'afAq:N#^'\EBNVX9Ce&G</J1a_ddRmK&b8ZdR\?8ij$\:JD"JIB-S@&eSu
%WeX_tX@$&J7T>Q^%o!bOWK*pK(,B!]_Nkk_U]prKoX&d0FjJ\OmS-_MonXh=LXG)JFA_ifKOi3)ZQYK"<"G0[-]6$EXoSP8aSIb#
%e\d>'9L'>.OCari<Sg.V%@n>=GW`b^-M\r<,&5((?s'WE)=3S</Qet)<49,@!A-DP(+anDeo,G;_4p5dd]X(b?n"Vu=:3UMcj]]B
%'WU>i7UE$r)@<'CXs3(2.m1^IQejC8X-I-1[9E6k8?Z':(7\KA[DIhSAYg1n4R(kNaS]MD+LP<?<%h8ZFc075,-4eL.se=Th+p!^
%%SEj'rP8oE<?Z"IhM*60a9f">OUR_cFN7[YL>mAQTmkmtWq3hqeZRV\+t^@d;McKY4ms4<<#6_6Y!ROA@s)2srUHn).)MtEC9ucO
%C,Bfq($bOQJ3)/Sa/S4+W?d9mIu%osm!alC"\<Jt2&`rt)KkpHeVNC2eJkn*<S`ZW`Z^-&HF+RBL0C1XmP8MPKp&IB4tBSa"I:]o
%aDs1p.aGMXp#[Mrko>r^gW`#`.34=>2"a75QUglf%_nK`l>C/mPNo:k$Ito2<#eA_QUhLNAY&<4'>J\Kj@R6$<@4Rp1<GtG&WJ-7
%Y$i/I,`+[RJ9iFRnR_4rZA7Z^amihAG<&a'DCI5PTA<eu'q.rGe1^o'/0'!pN%,K>O*2'T2EWQoVIa,/E35id473B6WikBJ>\VB<
%W$VgckW+/N)T0D\Yad/bH6TAe-&uFO:"TM5]"KPOW#gYec7h:1.K$bs@`<qtA@IJUlad.r-)0rJR3nV",%:_.TGh;+eH@^"7"r%q
%94SR^,f]KqgeF8klBY';jGIiY,-&`tCRBW%[Z!?g7^Y@Wd12laU]gC(WcLBs@[k$6M=DQ1a0:<Y@tus;*]/aR-N+jOT:fqdE0]#)
%6r9.eOB9!)'snDkG3NntOIW.6Ib>4"8SEL,KAfVMS&qVoR%iUp3_]MW^>iJa6'*00g9TpW7tmu2+CZFTq3+Y"Og0XL<0JU$C`(\[
%OGQ?U;-3Q^1msXhiaHq*nW^Q0agY;n^eTc-^^d$=/K.Kh*3`?cq_4p"NtFI>PH!_K]@b]t&]Y)PrMCc^2!Q9./5c`3enqe-<?IHf
%?6Vn8>;a<RXX(hkeIak]NCTonmeJmmR=oV!%\U<Ao7uO+<>:FE\3ksR);KuND2ScD!/0#s+Wmta:`lqEW,\$[,'Hqt.UiX9E..F'
%4!h$R9Dl:1g!Pllg!Q/pfjUn<+m:j34>,g#LjKl\GZ3pL1eabU/FFa+'WUj5A`g9Omt5Z!:5O=SI/bo(ih/N--"Fk':qmAH+%CF>
%Ln+RT:H&e1c85m'[1VI$Np3-qdV'=X>Z9nQ5(tJK<](;\8l_g]%AUK="9imKeHdN#MW5^HLXcVrcXij#G.g:K^*nQJ4#srLL)$W@
%%;RA0Rhb5_f;cD)i3?Ri$-:E:9X:kbqm^LBUJM]$gJt3@@&tshUH`(m>q^2]bdm0$G$Uk_]<4uF^BW1Bo^t3(G.iRX3F/m^]K4FU
%3f[3+C:gWG-#a36qeO`<B-,SB[9ZkiNZT2$_j'H_Zl.N!QR0;![^3Lmb9f3@Ph7EaYq5<DpO]piWeCXsk[I"pe@HG<<crf%7[5N-
%QWASKRad7?LjUtHe:@J4GrZJe@uE3<5S_PBB4]JuLW_I,\1t^'Ta<%*$k8uLM?5`Lpc_b7Yt-7pjrIr2UT00^oTmHMWX0DU(e40$
%`1@F5\d!C;gRa^jW:$&lnM!!tW!9^<$L^]D0,K:nkKkgJ%NVGqD+6>!mc^rjHRj;="bquPrFLW""F9QHNMliP]rDuKl8#)"YK#jZ
%p2+bb>]dWYWe99J3"g_RnDA>8cCc&Q'H0H+QAoQSM_L!Y5M.J^eP2lORhBWQ-gDO7+sp*MG(d5g<N+?O$MA-g2A26em#BT%Z.nfd
%393nAKNu-YK05DS*KiTgZ*j6[N[L*2h-'7Q@Sr5M7Ic.b'RrM-n40S*:V1@CnOH"o9Tb_<Q/PiN6<0p+eZMAI#?>nq(^&eub;cfV
%2ark3iX1Y2'g^.U5`-iJ=-#'k(Xd/bFe4%qK#S;."\:A77O)tge8^+U`:JrQNFK'ClhFa&DQ'X0Q%AV?b)>[2,A:0::5/)&bo2QK
%&d`j+hD)W/Q'+UPNGOn;MJN,YSu:n`7\f7OHtM#&BMpLjOdV.T2&&>j%\e8cZ%`R`U)D!8F]\5C8RgK6E*U-mRS^:,3#j!,[uQ2n
%iF%TPA+P/$'P0K0T\SEkA)^Q*(Ueu4hG$gL]T&EFd#lIkOr-4He\<OlJOZ3"!&^0*e!FEO(UR(k)`UYh^+0Tc*kh7[BJfPf.YJ;A
%h:s9?]``k%nAFaNkYKiMGp`WkdWWC+JfWg?"=`E&":Ffs!jn*#R;boQfW=WUE5jN>s)a/H###t!(Z*1r!Y'DsJ]=4@J8(J?o6=B:
%9sH4P*G35sabTjA%IGE;W)daN1M3*S:j*HOb$/MRo@>#^EU4NJ"JC^Q9q-MH3E]Si"!!p_]F#25V.Lf;U7s6Gj$tD&&QSi+Wj4o`
%%&;39YA4tEQ(EgqRt,f,I0J*MXUkT%eoQZ?WA?=BeLd&obO7.deWbnJ9L+l7M`i"KQ%r\,Fq>[;**9NkX.eos5V%KgS%Q'.<N%qn
%XUoSZq_`^#e\c3DYGm7A9t[@m5*02P:J)'FR"4GLLp(O!DOhBiSO,M`dg[L%W#f`Mi@rtm@W^1_n\l`&SCk>TmTfV\CAd)+YP2(!
%*H:QAgNT8,Ju'go+a8X.bNJYl8r<Sik":0aQUh$WGkLIkVo?4:-fi3JgXuD;oksO$]?d*Um/;.r1h.'!O7-E2RQE[q5!:^2Y]83(
%47k,`MfUEDl4![NbZ"<"_>j;kdFm="pt._]Fh!@]9<+-!rCK6P9A'9gR;D<fguG<cgoD[la#cfj5\,!ILC0HQnGBKu_*u:9;XQN+
%#_aNk3?j?"IuJ3-g4?ZnkPYrceIm5:I*\uq#]93Q=&NAq$_NQMj`a*i>6Q*`JeY&KG6sYq3M_+Zs3$UnB@^Y5e0DdUf-963.;C9@
%%9bXeW4<fSd%]Mn0#![^@V[_oWM2k7qk]:+Q<,.DG\FE[j%1CYTG6K"%J9S55*HH%i@Ennc^T7#1"ABd=jrd''$:WL/P2\TfH,6%
%QERR.@p>B":g:P%`0ckg@\I^U4Oep:GJ99sI)#U.l!*Y3a<<JJ5c_Q**-7uS1WoOY28;;2lOHHp<E\,8`YO4pr;m*K,$P7#I3R=L
%'<5)u.E"*$Je:Ck`i>I8<T,."4@KsQ$kR=DL;'Vtis8n,"%+*O@5LZ?'VC[<-['+!$5K,"0'MroPgO3!@X^h]i`kLbISm&A%83SK
%KJ3[+CuA7BZnYZj34l@<@dOh]78cW(G#>#C/AA\Tim;S[1nfQe_`/'3?%9M>9J]5*'VC[FR(_0EK@7(>#<e]M4N!],H%%c=UuiYN
%qXG]X$*gpReCZRQK#TV!\?K1+8[@1J[;AA$#V"%rBGcZ2/rhouRrD-dT_^>P_cPG3mi^d%OsS)F,n+C(G1*&Um)239B.$KIF7/`2
%XNi#lNO,UM5/cE!*-f>^$M@rHX,Ic;Kd&6eCs$SN@7Wf<>Ec,n#`19=U&Yn'(fI'!7%q1_aO"hAOJ.<l_`3TO?#RB.$opkE'VC[F
%-p9Y+:jR<ET_.U3)-1=U';U\h%d,7iNsFo3CQjPtG(sS_>m0][[]NG"[esUJVG9B5hZV::,h*Qa)]DH'-M1&](rm2flOA$!D$F^;
%imUd/V.ZV4VL<(!T]+R<1X%Yr/<dKtj\MS!1h>Xi*TT1jg.c*XflhUp2Li*eWY7.rnjo/qG(^R].+F;(<#8%Eg.g3HFARB&LCpQP
%NH^J$#0E%fdh2k]B."/NIWj_DmFfT;bORU..tQbs9dXS,ac`]0njV=fjr?\g*@E6t3*G>U$AKIR;,tN'A=ICObMK.ehlpdjjabm%
%Kc,E:?dAIuOTML1)gBIL5eE3AO,T3)TcXCpr60dCDK/GpD'VHN0>!AUd%dFB/,R[^&N-9:TLjk"d%,.f<u=$ecjqmB5Jg7P;o,pS
%J*2:I%T#t!B#kZje^B0rX$ZcP$%gR".76pD`Rn(A/R]]#D25@:f@!4hkYN8`W=+nH&g9\GKdsqd-kBOii@1N_UBmn]XpD't(lCgE
%pbjrALtei%-Z;)HD,k`#)pp?[G9!@AKCbSFl&ljNo]j(^?K<$.X/%_H<)8386(5Fue`>8Z$pD$2kS$%QaW!=EaW!_eMFT`&2Dc&g
%gS:JfD[#+j95brV6N+t3.LW"o!$K`9%#q-abZtKIaBQbb!D.:DcXWE>OU*E,.TDNh6$_[o%8S(r)+@l^ECF1k_GEAC_7-,#5i+[>
%*I3bo3m[)ocAcL6L]snPV:Gd"b,2Hbo%HctQ9/7dW>:KE`CLAAgH&1A$<#qbW$6/3MGB+I"LT+/UU>"+\CS62KV<XdK5X+%;=jL[
%kf?ud\2W_oY<p.J)a&/*dKeAC'7je*i*s(X:_sFl/!Hot_Rf'_Wf79ul:+`O=/.lueV5GIm#*'jlF%n>)IFm5WSj8m80DfBL7YoN
%iu;L>`/SFIGX2O/C,$91D;EaT"YD^bF>Y]af6,Y5JuYnIAl(dN\dDHe9i)nBC*V(QG".ZSG$L4iN\D0.FGM^iO\"=M'gF[iN"6)<
%"sQeJX4$C1r)lLKkJ7`&"8e>3?&olIX+IhQ\D#Zh\_9mCfnES@CBG.t.S7LaMe<njLtesGn$Wr`0g^e^_OP@M[h?tX90)LqUggG:
%'Z,-^6oi]@NV'8[N5">9F8F;'5`c0*A.<lP)c4+8$qUiCYAn,R+h[QK`8D+Jc<[^kNWWXPV"s0Z#1q_/Ug+V?6Ziet)d>>:G9[qt
%Wm2TBXWM/H_cFeD"B$X=O\DI?ZoQS!>F?0qImEQY<L>0%*snk<-PZQ%W'ATkHQD.m,u#2rQ.Fs?W8(f&k_7fmOd[?eO1=-08BQQZ
%5&)@k`DuUCcS6&*@f(g_nurW+&-i.VobEN.M5fte&]aJ4XpVA*4G90sr<VUhP&f8;n"CJV*-5,XJlLJ:oj-o_je4nSqoS_9WLo:d
%j;OQW)>=sJ'(ALl8B,@Ia['bUVUN+-UiD?HfZZ7JKrEr;QCe*b]>u=#2.<-2i,Nc^TfBuT78r==&e7,XJa6hd$q#))XN#BR<^Q4C
%ebBfc/44q)*$H(.#N2UC[YOoC.C>NJL.\q0@W9Dt)*aolEPtYOX@<$fT52@lU!2T/QL@pNU/DqJds"!PjcDj'7r@V6B;@J6fi(iI
%`6O;uQd`P!W(po:V)q4+$g#i=8#g1YpY[/9VSr<u[1>Ag@VLgq'c@Oq<2B^]In\7%Pi[$BB9B[[K)W8F=rZ1li7;Vm^m,P*?"?o$
%aIuVl#>+SfE$i>M'$]4_4g^n+f,7O)d%VrM3r4UG`Uu'`dKkgHKffMUqVm'3\LT2Dp>?1+IWQWi,RF'YaE;$;OFeRcHJW*sB%%S5
%RTi0GHq_pc:(3OO,nl[`0IN-EgX;6i2aC&IYe"ZcqEZ/e.WUpK!QB$=7FBJ:L0SB$`dlcH?AA9;U1Eh*76.7aJ\dEABiT(6Zn(m`
%?-b\16*;<Q#X,--i7lV?lcec>'ba1afaZBcJD_.^8;NnC[/\GB8dHJ8gWIK*grF@/J:ee2A1^FC4(T!jj*5bM0<_Ad&TCqnUT9<7
%D\lt0>.LO;<-=IkS#E>m&+*!+!8#'V@2qb8Y!:e!*YY7pR"-VW!glX!VhHVC$TBIN(n)QW@Y2DNJ<EhQAhK<HeJ9;s&;A[Ja/Z/?
%&4VqHK)mUfqrYVL^%^(L#.^dnELRhkO4`I.hQ6E2O7K_.,)Em(['DAIBC]R]REf@%_-_g/'06$41/j?E=(/qMAC+H>:dmFOQ5scW
%>7+UM.Vqif)bb,08E%e7]97E!ltX`]il;G6>L\i&H^3/JCe*h3deU9s&qhE^%gKHm3W<32/uE#T24(&'%H!mHP]MBl,TD=XPXT/^
%-b8=9_-96NQ#!cmr&#\.$4ES9E@ON3fXsZX]dCd'a6D9eTHtn$0cg%\PAG3<3P88$b(FCX_[3I9S2Fgt?8+f[W&iu<o&DeLndMpN
%$EOqAg1F.`IVo4=#tMl,1=r/[\:dbY\r]L;[78RmUm./Mh)S5Dd;WrO#aXUQ[PD9a[R*4:1_&NMGi:$R2:3P*(9\c,e:e`C%XST4
%^l&7!C59n4eC<`Q1<*B*_q_!n:9t]r"Pdka6c)I(`'^qg=:76HA1U\kUH$_+4F52.7'SG4OCd8>3moh+h*it.4gE\1UispNDC6"_
%.Qe>K9?nHC1:<ARijBT5RW<R8!A]suX8-t\Y,!Ksq3B`c(@Y#h'pVT7hJ0+VU/9,226oJH-1WFP*+_tR-OI5l&K(hS9/n2R[r;as
%Hg>BB<0D,?H2Xh>?TW"2Rmsu6KGi+J/`V&OIg\Hi#0)iG(:mXfJRkMarKETC@%)gI$rD4nV@=.@Jfj_kKllKXiMI!0>\mY2f8SEN
%<([@i'ZA.U@gaOE<"OZBr!$LM*';NO\`H\C3kpSM*hZf:X38*O>uC?R1=L@AOb.(7PU:jO0F.rj>lAXE'e6F&kio?&ksY?A#L,M/
%KZM:rW<+%<!dfq7W<a5l,XaPTFXS<N5n#J\-S8mi5`dPg+DIdsM`!_pc)V4Y`rjXiB6gne]DN%m?!EG5$p!Y#igLb"p`;Xf'0',#
%[:/V8:VL]\I+e#dgnAqBjIsUJ"pM!BC=H)a:rSK,"PO;=h9^=cQoFQ4jc%td7>LZe_6\*Z'V14R?.gisiap_Eq39#CJlAN<XLq0%
%BBE6V@V1&mUWh#g;L2B8SZi\bM;L6ENh).g?J!0(YZ4ZJ2f1dVBJ-23[$9M,)oSF=]s6cEmYYVha7^)!8pEOf\)[!GQb6="(EqB_
%Q]3CF6+H!VX$arrP;FcqQ]0blT>`O<\pAu<gQSdiJeKcBdjQAu6N'Go6^cj.MrW&S\ZM53-Gq@?3#bj>(1\LQBrL;@U^3_l58[Ck
%)mO-9&k7#iIhp'9lKSgZ#\,k(:L/1D&CJjAj"/h:3(TVD)f$o;\C\NF.eOs-d:TsN%E/fkeFd'J-c=EX.OrC)Gq-`e"=j$J.o\cO
%f*4!u:dLkMgX^WTe_gf/n3T_N1tAI&5Ss#SW@gN+$5!_HLt-c#`+B)dFSG]GE=APDhI%?=pg&[s'borFh>$VtEGu2J1SuB/cujBr
%:OS$O('uWB85V[H^?;LW2a#W,Uk7m's"'0ReC>N)m\JYC/uu<mSB-LQ]o:%=<EfClFonSs9,'h_PEDgT8MSr!9PTKI;A9K2Cos^Y
%]W[c`+qf7c^PX6A<V;+3oRt3Fri5505bYpDf_FWh<XQ,CCe]Zjn1Jh6)n`7VMLGr`77\"VTt]]i3]B1OCa=VtT)23@_:R3Zlu)j%
%20HDE"ZGXGSN:#hQZoN:S.e.hIQU_J\-4d)eS">C_-.G311cW^SmPJV$61E9r.S;8*a]37LXB3)<!?ThDO:fSCBi,$QCZS.R+*(t
%&#5]H&FkmP:2@B8A5/u0!%.Ano##.=25G2jo1j)2`1?"\ecM5g)p/\dS^o7s<Cg?3\\GZ1<GMV/l4)j1d8"I7ekXt6NC8Q>@?]7D
%R+*(t&#5]H)OI]QBanC&]$m%eP$16;@5Mg/YG,%Vf2Z\H235E81_r>^D_+,3G$6-$aLXK3B'uXFh-'rFH:.L:[*r4HZ7%!#O^Ma+
%*f49&D^[i/G$76KQFbN^ad$^ZVm-4Keb\9X@&GFd$<qThKS)KNEu)!UdSP6,mBf=>1ei2:8t6Q=PXkq@H:.L:[*oqM6t&/d%0pWH
%G'H6'8\Lhq0\U6CTfRK.d^[4C8S\?#l4)j1dBkd$#3Bu?WM/.L7.;M)"]3eib7CA=er]<nX8FtE1SmIWP$16;@C4K!M$1TWPI+o6
%]rW.\?rCnk5E'bh,GD&P\$\Pm%V]\Z9^3)KLXAk4,T!?$,<5"i9UChA9^3)KLXAk4Q$^/"Bas7.<JO'gR+*(t&#5]H81q1hO&Rar
%CslJePBoUl@C4K%_Q]JHCQ4k@Vl^+VWAg%`7aorRbU(D+=sLkh>tkqt?#M8YN-8A\Li)@s2F$ktFYlYmPBoUl@C4Ke4t<$3PMl*S
%%O"La$Xcl700TYbR_hp3gR0l"Z_kY=!D=mOV2*Gn>6rU?$8t4(?-n7>/:^=*U&6UuBaoW1H"X+UEP8L<0Lu>1H:.L:[*r2A.]]SE
%7d+@(09EOV^nfg`IMhIZf(e8th&8jbANPJa_5,paIMbd_)p/`?$$VhW)2j;3.LQ`XC+V#INKnUa\]am`d'6'p*9RHpqD2/+#jUtp
%Zit=E3G<XPQeF4i_*<*.cE1")r7/l:EC@I)"[T\P0E_Lj]a0hIj?BG.56*"h@>D!XF$b#F=c$u@&GLlo$ts6PN=jD\6*tAPF37)I
%`^?[ZFPMMI0Ffe$%TE^.7)["epF,e[E<M[>R1Y]/Ob\7u%NQoFd[.LW94A'WTISie?g=UQWFVGeFpB*f[,o3&RZm53U&[,@'i%6n
%W>n(=A`Jt<lPV>F%L(aK#UiTfk,eb:8fJ[gIG'n8YmuI$2JZTP*p%e?Zt@?*n.J!C2[D`O4@7T;?@.de`K/;sOTN7G72+R>h*Lmc
%#`%%bS^%p>fbHi71E;l-LB>M(+J0LhdrLC\f&3+#QAA=+?NsHJ+LPW&\W//LFu^PcA9a.HRHg4B0;0;8.YP8qP_<cAkV[CiA2WrS
%iL$7`'a&Og=Z:]kGS'g-`OB@!2T^_Z&M;bcKo"ub''2[^@<I5H+[9h[7qI#58<$i?FeabG"M1,N/5h[I/=`1Nn_<scQ%Et31Sa+3
%PC/0sL3O:DO?>:8OIo3U\i&-]70%E65s<.$RCp<3+3CRQ@<Z;PTNm4Q$4m=k@Y(!N[c%!3;F$N_&Gf15d<"?AFDa3%*^i4dna0HL
%*Eq4Y\cYYq1W&LU4,Sfqfocjj!inpYOWHO8\h-XZ.&<P%8_W^]b)&rr5]Ht,WDTUd_ZA/13,g!)/7H=)-tE&EJ5Sk/*`UGKdm5u3
%`'6rk^#0-\\.^q/Q8s>=5cMZ!#F)j]dsWN<^-%5<iQHjF+"2@fq+GD'jC]%mcIpOX(]9qh#c9_W/;a]Q6lPUW!Tc'3FFT-0:q4?;
%m"dNnqjQ<:LFM"a^Cn0'ZE+d%m[D2o,Yl\L%;<L_0pV%:FuBI9s"t6cpJG-:!?K@9!W;<N.T5j-qran=Dank%=.2##X4K4b0RXGk
%0o58A8h1)`DAr%6-BF0cPXIR!qc^"O5qnU#Rj5eSd&5-6[*p!M,Y=VNeUsg#U!k-%2j^DrTL704$_4)*FgpXE1tL#f0H6:&d<6IN
%BW"-GA[A[Hoe7;"8/ocE-E<g(2!E>o_45qA[Sui%1tL#fOAl:Y][NN@3t7L#3]ZY04cIB!dKU9qKDZ'jK-'D:R"n)J]';R\e^/$7
%$rX#C/;"@F'TZltnm,P=0Nq5566oTU1%r1nLNXTCZo+nBDUlX<X<DF76Qg6s-)jBr%3!>'e#@X)<Aek:`-Rts`PSBaK=L_n\cOf!
%`q#\_bU>-u/jVYSBs*PqVE7cgUTk$VImM-GLhZN;P*m)&&r2q`DHF`VCJObM\KT.RXhlZtMBEa(I)?F3g5TY+WK@<(=1hQoh2%af
%@*Q6!Ge[H`GW?I7m\1\_eq)EZ/dm98!J6tk>(bsP>k8[4KOa7^99>G*dfeVnC<6MP=@4A'bZ%'EFER#GZ<*0WUF&'9DIC*i="p/g
%G_*8'fsZf[CO^ciHhZdlgqq$g)nW^H52Q,5r<9q&,rAB7'5CDQcD=D^+0F<'X#[@*?Q5daPW;<TNBHP3-]\Jjk='q0hj.;JhDgk/
%ENcIUnXW;u.YpY3+Do&Z[+A>@c5_D+%G)r1%nL:L\IcfFf]8%9=@"%RTms23:Y)?f_<fd]bTIrWP@X?Z>f@k;9[":D8ig"iC!j["
%U%JN*h>EQ1SR_eqG7r:1.uZa@I`=F@2=gt=#XKMf>f;UqescA.@QQ:/S8Ai"gWH;)HH3d@4<<=V@a>s\`lk)$Nk"G2b7mPg8M#bS
%1g1m")HYNb7i^iRYL=n67':NFXHpjETtIMl80]bIQZ]!u&[1ODmu!8t190Y0Jp`e>_S_$O9I5[;ULS@)0\l[cBr#VYo5oWtpZcfH
%D\0q.d)lL9&VZ>ugTm,h&#(b0Q5S.,#U:G%PZA/:''j3$@##@aS8ob]=UASlf^$[n@Do=DnB*?hA*pE$.UfE@]=9<QqP4#HQGjbf
%f8?jYMr9E.R6FI`nGo\2MeSEp3g7US`e3s`2HfC;3HQ)E0/(CY&2E6';Vca@7*"k;;c`Ge^CElA_e7]">`'jAO8+7/E`Fak)D891
%2^.uYRTEaGWpg9i.m[?u>ShaS2"&c],d`;QK;1C`B`*dnTdB1V#Oa$'Wq#(>mI*>^f)\HXYqX1QPN_O+?9+r'%Yh-*5;-YJVlGlk
%?4QQH>+pG3UItVj&gBFt_$c/d@%L)<L-kHN$!OQYcB!6ApRqd_n1(M=mbl4."%_XPKGo.>54Hu]]rA_%Eh?XfL:[g+mH\!4PW*D`
%J>hqq=<:NU5?Ah^7E58&d0&NTbsRgj\N!G0WO/G16eU54c3.AeXRKmWSGB%e0"t<Qd?a]&"c&u8C.X.IJD=KKP\b`5+SO@g_Q/q-
%K&;h`ptCTMR><ZAP%Kau\J`Fo0>'(Ga+E)MCMAe:;/UuO%Q1AnEuJdQmP@<&2ClC.CIuL16Fcrn>:#sdIc=G^;A?<9N86JSegm*j
%n"tX=%Dm6")ohVu931>C]*DOR!Tg,sn5U8-.ZtPPM&R8DMAXVCBt7qdFr)WIj-CGKY.0IF_f7+_0Ca?"?>EtV%j6M$3j;pUG"$/'
%]J98pg,cBm[DDJ"Z6I5!H+D"2eNLA?)lB/J"AKL\0)d?%+)>`l$c.BB252Tq'+"nocd`)F2c7pBU%*M=]hsTTfDd+gan.+!Yt0IC
%a(80LcuSK5k;e8VTG<EBX3*<fFu%<!#P4$lX#Rd>>%O4I43.M!!9MJm-oJZe5es.6iCpMV.P7[%`"I4#3N1Yp'1EWiX?J3TH,J9M
%5uqnF'ICi3#S8a?5i#:uN.['N\>sY:;hWOL01=]_Q)fq/$:K=*&Z>*YbmsE;O_8B-D:!*>CK3=:RSDeqIK*EUamFI?MQ#2jZmuZs
%)%"U\-tH"(KU'h7"u0rLh3gV']rWWd]'q[u=1Q96-lHHIKVK6ET;\i2Ci:;'</kScZM$Tc%cU;a5fRca(!SSm?"8]0+7+fqC9FKI
%%DZda200[&;A],Q'.BlhLa&ZoT">MKVqGlO8ge-:nf)dTe._b[Y_W;0r#-I1)Jg?q!$mg>?XCWsHb8i.-lId-5!Q?pP27&/2L!d5
%Ml]oP&J1js)L(MpTtD2HI+?qN"pH5qgf9h_(<[;1kT#71(Tl_Q^_!]JHE8$-1gpZ@:4[9iM=aM-Sd.RRAEhh.X>29VR%Je]38i,h
%#^a?UEYL1SZL#kW!n5[j=A\m1=j3=jR%P2$:0AF`oQMGuWG?rpUt&qK'TIm"U8^lU__U[HM2p9V#I"o`a5lYN2Pi#(Y-TSQ/jD]!
%$bT6Tei5=*ODgq*;LIL9<X;`tmY`KHg=AutC'1rRr.\s"eo?#`n23q-@!*uo.;*V01;oLe'\&6uQU)pu3EeGoL@d5:ekCoO+9gXT
%jXVsHC8p86;n5qYKb;e$kGC"[Tf&`8G3*]ul\[_;)_ZIX.b'4KpM!i@X5GCMA]Ap)OQC8XILHf[Gs.gl.'^3G\q-iOFN7!p8k$+#
%g:/&dX[7:nip:^p+Uo2?8,Ne!5jhK7/4[7[7sW-.bE9P(a_qV<U,p4G8%$*9kJ"iSjO\+FNL-EAgFSYcVQP?61ZOdr+rQ)<NZ>DV
%0c+`<n7^KeiSp_i)CO`"hc49_Z.SOQJtt>-rQ6B2/n;miOq-=]iA)6d2.rc?S:r$1-Y@0rQ]fT\1_RG&$rnipXLd3AcToJ3@i\(I
%BW.&M8YIOd&Tp)<V3/d^g)Nk5h/4Nf#@EeMJ8\(m^(Er+eRT:eM"0Uuag-e;<H^sGV->8VOoA<Q-':_5kI#ld`"OB.m*"e_9[:4n
%-'G(2Op%GoK?0n5&6js<kls;QnDn+1.i6J@7GUuJZIrhB00kG;)AVE_.c'36iiuOb1l!b<,LD[]d=gtWban(?gAHPf1s9d-2Iu>C
%s(]3rb:5Z6!ZFC'6L3SsJ6SEb:R7H1oP-fV/4&iEV^=/P9TkIVcN^%sds$L+@u)pAl,dMDir43U&?*khY@pI@V?CJue($H"9d.j,
%dQnA#p098gaDrRG31t/XW_S6RFJ0_eNP`\^+)qX4M6)U`Ueu6m`68QeBU&UqWXGp`lI$7t5].I:-+E5iaB<HpW2!Td%kHgqo>Ha=
%h;62_<qsHK$R-:ZV)@OY*e;.aW%MWj^M!ucCgFK/Jp*3baO3DM/iqKb-D<E^b@Mt<)GuU^NJf_1'XqX5'Cpo29$;g>X1I,/=\5Ku
%fUDm2r:ligPQO\Z&7b5qLtG6"EGp"*l)91H]5&YFYLnL4>IO$m\>)'nnp>JKU55/Aioj?!%&:(^2sDDT,-\E@2!E:]K=1'W3`Q]c
%Z%fVO]UMGZmkj7U:4oYSEMr(f<7T?0&C(a6-)jD`"q?t77FidA">n]VBb1Js;0<h"BW&[E*lRDE4cIB!dKV^5EFh3@HF2./,O9fV
%l9SD"ctO%LG#``*FD0B9:0TeYFkL7+)JeOn=CF5S[O5I\3@iE(Ft+P&6Ns%3RNuRbfA%W;,9B9I>IWH4X@WI_iZC]iE.Z?A0opJr
%CZWX=;tV95C?RKfO`S8fJ0%E(,bq&&lKM'o_e?.1J<-sE&'42HYMpm0<k2^?KbiZCWtD'MrX&;j(H@[tgj;3cEefNT/r>M'LRCe"
%'<>&nCR<3K'FsFeQW#nG*U`H:A3jn[+hW8WmeP2g(d_O,_%,NGd&Vb5.Mn-M+*<e93&.'c,p^A/&:DkoSKN6/&[de9:=[AY*K*CJ
%cpPEcMTJFjeV@QP)QQeuC0.+3J$HFALu)f(H_(B59dWA$9T]\Hq2@Z9Cmd4E\9(fiEn$0t8OR9=CfSf\l7/<j<lq.aaITQdC_4Ss
%_pMJc:-k<o&If`he\tth`[`kXo1a3=;GOX.,<ZL!MXmk0b.G^?5j=^XPY+aL0F1+G:-m<E.Qhs&b>b;R*ZQNr$$:"76`Kj6&(N(U
%FhQ0D=F=:WA9@Q\,/\b,M+,mL%oG]/L_7iWgecP@LLY0f=V%@g'0_@Q&ZSc+CfZ,$Ha1"=Lu)h>'-ALH_4b?g4s!^%dEqm/fHPk\
%73Y:7eiL-@HJf'%VHeXNEnj/^*(!($;RD6fkZFo:FMBc[KGJ=;;dj1XnIGfD5S^ibp*!(%[KB(D<uDM/k2mB-K`*R\_?,Y$]?X"m
%j]0Sm62LXBR,dAj3"#q2k/(QfGhL[-2rfPH">s6*FV3i%gB^jL_spG+5oP;pk:<KN0N\-=6D'=cIu"Q<o/!o1$NDZY8'mG6/7gn?
%j[D^3kQZX+K#2IB?p@o+3aEM,7@+X*;=O*t+<\;,`&A;PmlV'.iB1K,WsU<jmMnfb`D\<Hc/b6DEBlC#WUl]BF/PDJ5DqMn\s?B6
%.sX[IjY(\Wk2P^b4Pag]TuVH'kB=r1$f<23>0+N4nk&[?d3[t\Wl6^.#D]hRi0(\srX8.i'$l.g'%Gh^5)Y24QhnUWlq*hOa?sBf
%P-RVo<9Cd3aAW-!a9`bhRl"Co1eZ,q!eb=t\K=:S"Lg?oPOsU*UFJl!?G=_C'!Fg:YQINrfm*W#lAulM.?'t`,Dp6'3*[Ad<tE4@
%![?L+*M615::)@P$go-L*#]SpC-WO#cBJ_RXrY5`Nn`T:k)N^d(VRUB:lU\3MNsAa9P[`mI'lAlN3^-i;k-@\Q)ch4%@1%!\`,!r
%EL2J:(,M_cO]%WRK-aKcTb#?%*EeZocba+j$%@:=Hg=X]>hBN7X+3Yl=f^Q7ko1[HBHnaNE;b]c.>d2o/np4af:SLjQW-1+#YLTJ
%*>1W:ZuVu+Ba(uIKWYK9!oc#789unXq%*`)Kos[cB9oo"qB\@E9+=1b2+?I72[/;RNAP>!#kiPNob!JPE\J;4a9c%YiCpCnfhXI.
%7m338HJ+Pl\!M<ka&"?9HampHHJA_QH\"bg%$+:WXsSe:B;\"r3u\@G<C;<sLF21mbs^sr>Pa%e^J.jIr.0tta.b.26nFS*9:$V_
%1]`6VfV6h2c_n%o%Gm//e1bcN,do=U7Ss0&O\(RL7js'NC-ndQ<niMs62JIbi3FIQH4Npk&3\PUoIPQn/F1'd3.9K:*PC>jTE,<^
%KFU93=g\6pSQucaC>=mt^idZMFhrp*_e9.:Sm<G2o^!Isf,//P$#"ZtXan9plNN`]6YH\ZKH/DL\6qD!FoY=aWZP&\7Lc'PF'9S-
%2ihV#&dNc#8cEXbo0@3lr&//IGFqUq,59/B/]H?R3WtE9&I>jZ'j0Sc/HLOYE6sS2&<1QRilm&Q'LZ4d4!9&!hPMGVp[ob)_'"Z0
%mmR47FajKS#"fM.'obP$KLb+CWYRGPH@d%;)EL#V;)c#;8>*`up&%:!96sTX/5g0M@u;%bX")H#)_s#pFjjN"F+?1/]EF1'Ll%b0
%8qD4l[ZT9K!t'ke&"juQ!YI=W>T;tkOA1ZuE/+[]GmPnFM]Z%dj7#DD)N&>e5Ws)q0AT?j^@/TMk_s+ge\QgQoa0!?P9sVQe:#4.
%-`9%[*N"i143/-=][J*(6G.uNLM/n+6Ts^/oR;J0j:WNS&NS3]N<55=XYLCF]K6Htr91tM+!ZU)lECo2l8_V_.Z+G'_i@/Fc32i\
%s+j$`^;Sj9YlThtDY0m!E/hH&`AYU.p%1:YF+AGoSfp(<em#OGkquq(lb&>R,k33i=XeHo;9gbOR3/I:#!lPoc/;db-=5PA78iB2
%l?@]ha2g\a]J\?M*8WB*U?oBgf/Td+oU\,$VB`2STN.lfo[s2YZtn@"j$p>$"9+)0BW4>487jK$$6ET*"M,DUl'3CHOk^&oZ3R\/
%62uB)`1'Gd>/&ibVihXN@$$_9GXR+qobd)WPXX]'ah@Q&V\rX7%WVVT'7&cS8qG9ElU;qTXR:]NF5F\?f<T9i\9m9V`9YS6*qf8U
%7tB*d]+9,oi"Ci?M&\sa,pK?@YF2$0BJY@cM;rkQ]=b1AZk=#,Ab%$8QmVdpM;Mudm76oDW;22($E@KO:\oPTaBIN/WK$C&;nMFV
%[Y(d<-nhlG`_@I[(T`+rbr]UBD*e5S,Hf,pTV+gkX$^(@%1q??PLd$EH;]K5<pcc.O,2u[+kZIB&ims<\:ub-^^8.@N"Hn#=$30:
%6s:+2K&Y,<OOB])1Pc@,;N@:P<*$_7A\eq9-T/A,qO,3.(=s*q<_0<JC,%t>gPjRGX:C+T3c<e2Nc%,Jpi@6"^.[k2HQ):m,r0gg
%\]lO*6)h62bF6Xr0QP`g:15L=^i2^lSh\K'.<pm8Q:37pANFEqRmLV[l?cNQ'?@J5,,pA)jZ7jdHDG#D=N"M6i,L%kZ>cNt._^UU
%;oG*M99s@.dVUhH]oMe`HILV#+I>]K(VTSj'G)""DP9M!_?k>E[PK4>Da'sEi<ZEs%!mb6Zp(3CoC9Ju&!I?!:W[t;K#"T.o5,2T
%<*S"OMOCE(:+(.eXu[n?c/$7AEq/4p]\$kPUtPWlprlbbrQ:)rX*d?bVfdnm>9N5J%V\G4'Wh$_Dt<P?Jg)teCoN6%W<!91R7F<q
%MsRaW=u93uPR#$$+0#P)0f;MAPR"u!:b*.^81-mnblp8@jt[mS$Y*db&t?:!^%ergrV>M/-2T6/<uR_XN*2O-@;,VOYaA^nmFUhc
%*Ih_*qhS>1bb]#8g>.IXZCA@?2o`Imb<)qHEfj+1?HZp#V.eXk/9k[Mr"CqSgYLP:mWhetf_Op&_[YjmKEBSH5;[F.EWsbp@T0o0
%=i[!B_9a1EGb/^.(+ch8OK^C8!-mQZT9-0":V1_*S/CLQL+6^&Al'7g"j[BXg#r9LRL_]&4q%abV^:+TPpmAnUs.Q&G_LZ\"4lGg
%fbZ<M+/;R2j2)jhWF^ia-:rUKrUYgLdXf7PD&FtI:bqbRB@O^F*Bsc2iR!%4G3f\f!oC.Kkk&uXNaG$rBr<XS)hr?mUX!0-b._<l
%YI%i`$6AIXJ9@:;-N8].mDl.=TV:ub-dJk8H2YC`&gJDFN7![E6#Yd8^LlD`?Xk?Vfa&#&Q5bELfA(@]`ne-^2I_?1^^t=l/]ct6
%GI`Q;:eLMj7?NS=2I'jo(0JGfI&Xt(3Q8+HrE38OR'iabiAAXg`Mbd@>cFQO#RNuaD4lT/laSMV9GKlmn""mj1)RR&YdZQWVg@L/
%^[`)4(A/;:e8?W[+GOQrS^e3WQ-_sR8@jC\Luq(9P@$s.(SI]E6Sn:ND"uAuAN6X;&/ei/82\sas3S\<E`[O)@NZ%kj<7=_V'Pj;
%=-W!X+`7fX0U41T@p?)TPQ`XPMl@!(K&SZ;9D`VD$e7:.C'GP[C2<%=<UoD$Um'9FL2g3Ym"7B4?b'E2l7/eq!V@<Mn1FM]@n.Cs
%TpH'3$7W\17E/CaO@><I;I,04oO%KWkb+%sX&=n->*`=XImn6tl8GIm_*B<:qXE%\]9Fl*F4@YHR5ipZi:&j2_obH)9^O?P]!HGp
%`UHTI2nRi\E\TrOoV9\iRW^LCgnE@X.^0B#]a^6GJ("F#[mn7Ll^4+Sa6j[;B_0r/ZjFV]V)$/&!<pqOQ.;Gt)Bli`=A"G.*Nj$'
%M/rg(bdrd4%Lk`F+eLUqo?75&pBH;emI6]IqAF#(a`gn"Ta8$f4]_4#;bBGVeE'aA!KiDt7_64H\Z42FOAg<F@6R<2^U>O3^h-[d
%$tKZ/(I"l6+g[['n+dZI11=_k[-PX3,[AH7*8T:r/!?+`@pggC=Snn3=7Vc;@)O\'?D$P#B!:tYV+3-6(#&Ir(FVc^)7n,7>_8;=
%5]se2#fd#;_5a"F4X>7M]`ZAjcWT1"L"gV9MB\>>[O2@h<Ue:AU9^-n!o\/e9#!Zj)a]NMlg[-4-CT!0"aEfO\de=VD\#7&$Ea1P
%@IZ-Y^393XDUGiAXkSS3@4>!VF4E$2l`ij6qLC!7D%#Qud:pJoB'>,Z.P$PZ`h\;Ff\Fk!E@.u<")e%^kUc4DNs&bF'h([Zg1pl\
%%'js^\dF[N5bo@.U&OJ4ZZ)idLr7oN;+V&C`g[dH&QH54.A1oIi@>aE$cm$J]k4hDUhTqNc49\$V0/1@c$Z'J3F`]`O5#fV.HRHB
%QP4IoRqjC3^!958F2;/k3R="Z0?a]ui*GF1Wr';s5,8S-$IuSar][GDP`PtQTQs1>Jd4D;3O.1hABF/C97S_%nPM]$JEj.2<gg"K
%,(&nSjL!k=3nJ3ao;#pQ#Sl0-lgL'r,hkfBlQ?4KRSLmC7BOq"fI\iA"C%6kNQ)\l;$$"R`#;r-lR$HK7.2lL-nJWJL\1#P<_kk?
%*-6CE1RDgSqed*]<?k?$`at8mF,bd-=B]C5A[HEm`22m\kmJtY:?'jC*TU$^>Zu-(99TLm+']1P`2saDO@`3s;(mSLdiUWW_*rfJ
%XCSoV,"QaY()H+fRjN.ajtYk")0S`JWK"_^/2_mF,b7!9)`t,$"iCTo/-qY""$*Zn6[M1J@?4&:60L(p%6)mg\SPg4AViGRdi^&s
%k0&d2Vl!@_<NLO0iRmdd&Rh:^SuQTH4J7q;?0ASU]$L<?'(OQEEVrf$REB8B+pOgDdfp/4cV2k2T!-Vg8KHd4RgY]BdR:AlKtVV>
%.67*%edY6A\`-MqA?!^,XYdeYB6pVOI-S?l,&HE.M&<b%ct=eINkZ#&@r>H"S2o1EQ:c$&rt0(<O],,e:7QfslsN99nc6Xo`6i=&
%jG+Gj<VrPS@t?;=9P%N-XFnUZLj8h?#**\=M:0\63e>I']2g8S8ZL5rk\eN_N?4=COPlPam_aQO"nF\>C*Ea]dA7nRT58IDBH%o&
%?ipbl\7@U<"Us38V^/+T<+9u@!^j4sg66mHBI/L(+G^5>>kq+<A-I'+gYOE6cpGL/W]XN*dm%*VJ7ct&&]]KNdP<D)3bXnFm%J)[
%)k^fj0N=#XOAh>MI"Ug?%]YWq1";G?]Pd:+001n@p2p9:2=!Y?jbNY&l\1=cbhFhQ2S$#,^e5L-IeAeXa'PWR=;\*%fEhTBI*elN
%iuqpKT[(,*el+HF$R"/Gjsh2Q>[O;`G30oo[Kep>Ts(irLFK@H#np$5TGpr[lqg;Y8*cr`K6,/#Gp57ME\/fKXjl408Bh9=+.&[m
%c_$8="BfHEekL:aojEqiA`S];BH+3oS>7>oc15<l*,>6?jM]1bMn&:.IY&#WUO\[n56V@TK=BQ,'Qr:mAI=9o.R=dXq"4j)mI3EA
%[Mop^OK8UJ&.40>;JJCqJS>sLm9Qq.Pp$uC&/HuEP9_IjV8.G"gR"SCJAf"aW/a9=VW0P<iTo1fh1r871]F&Pf>`l@qn!Ag_Vf4i
%a%a9+Iba/7pd)5Ve&Mn>,!To?Feg':I[J4:k)\((:B35#Hj[60cMN_O]4ZETA[M,EL54W-A3,)*<dt8`S4d05H:AUFAC<*'&f?5*
%rFc$/EIRfAZbqeTml`a$)p1c\#[Z/#SAVXBLTGpqKq4qIAL0#50C4c2..uA7eln-+S"^@#Bg9He]F`6;ZU.*PrPD1SL+G8*5SlnF
%cA[M.0'TiK<f/eWQ,!stfho]nas%n[TsDV&H?P$4b!obE?J$iUVJFhXn9\;aG)A2BQ,!sDYhM/7C<$g%.a-PP;m`7""GYig*O>"-
%X_3DF_7'%''Q#6KJK]8HLH*c+"FskMd9Dp3%:ph>">B,%E%C2>FtH,/YZ%p&I/!m(($sTs\VQL+$LGn\C"4/GL.9<T?jL)kB`d4Y
%>s7LM'$QZ4U((Z[0Ea&qE1=7?fV&f/e1[)A2O'KB&A56b]jL&+An3kKs5oW<U((Z[0Ea&q$KiRM\`IJ7G)a]KCrf67&_:rZ444S#
%=Gp/J/VWL[i=3a6_%M&P.'a:SnffG8"@N(;6NisLm7te`qlb>,lmO@))&&c!7Q]Jak5p>@H_.U5+,,0Wp?6MGBgX`^<YeTABn2MT
%7Hhb+`U_`UkZrY\.C!Ds^.Jrd?kOXJc&LHb>.hdj6jqVj%89T:)]kQD2[\C9[n_7PkabQ_d@.ZkN(JQ48FSm*D`pBqns!B7'1eVm
%ilDm=dBc8]>I,*9IS+%-3ebo)+"6;"QY-]%'l=i*H+L6K9Va@3SO1@NEGD;0TqEDn4:^K&P9-JoTpo_<^^j%kN(QH_B7F[_>ko,\
%d'H%.B"B(qQP9Kg0XR1[=?Rqr4ZdoU+L7kUB5")W"GU=)cF)3,4#ku&a3N$sfa/)'Sm@J+\d^a^HePk5RB^fi;DnSDY[[q4!Bs@<
%lumj:lIZsm-p)u'fX!ATMX6FgH!5PnEAUQO!^j1N'sf(;qJ6CtSYN]6XM8=sQAP6d/QlBCWLUi6c&U-p[]hE*prr*XBfRG4DiN_N
%AeHSh"_u[=i>s.]<Ck\bl(*=f1)RQ[Yd](u1g4kJHG6/Ak8M;i\uC]naNrV,Ra5f=3A$#\(*'`")`8GW\2INphYDpZK9<bOHgBj7
%e3ZF.kO=.madQ0k'Y`M]FO1'rBlM`[dt5hnf7H@e$]\u2SXKlJ>b`(IGQ+;Z@,rrWhYQ?1d=S-j"V(BR/L9.07kJP"lHplbcYQI!
%=q1]f"Ot#"e6Fung1\<Kk9%8D7d_JeX^Caq(':L!09[.+;t1@N01R>TOtXVcZDH!7i)!C)UXj4Uk-?GbVuuLXI2=/*C0+8NrDMG7
%^erP]D@PVu#XmO-JeG#V8$b,M!q*E8$;(T&Fk`k*E5o<5K([DRF;^%m7G-/tfADsPi(@pYa=sj&]37Vg6#</q$].NnUOj<;7KCPr
%<$Bpg92.B7n,-CQ$J5%%k*.#8c&kSJUc8-3`+YuAKn\qX\eM[I3"pO&@ndEG;+T1b4]h:$W/,-3>nP)PJ[EYK5`bYX">"=*re`S;
%9GDM'CY0,LF57(>E2)1RD[8fP[3-n=45:Z/L!:QY6PcBYN")h?G@[,).T6Q26AqG:Q%9%k%1lGL3DGNfPDTSV^2T;`9upt3VT!i:
%H==mSr@YXuL>IK]A;6QF`ZZJQOkWEJD]OPiAt,*C5#(D&_EgIeg!RVlJ/LAk1Dd[pp1#ol(s]<&(#nHn&sZlRs86Yj,*u!_^fPPX
%+c'mg!Lfu!SO%4ZS[aueK6N>OVo3Z]"rW+^5bod:7d>W0*q(,jV)ji)Q*Nbh!:,@_2ib!$*ZKE<PXRCX'jrRrLq7UGlL1j[`WJ5t
%[X=.+GK>\5WV)lB`+19<"phW;eqITm]^6R/k(39Ne%!PjOUVR";ogEHQ//n%\&6QKU=!qM_AJ7H4u[u,S'/gNV?91ScaFc+(N\q6
%&(*Y9A[l;H%Grp?Zt0N`@4Vm?kr2G:cna*Rf.q1)U,/TC\eid^1f3uH].CmVO;DT<&sPc>1q1E3^u&81ZN9U1]<UURp1)SY$l>,s
%,p\n>\a+d?D%@2>]$@kL2+.P#ccmQ1&lDssL5NDJ24nJNHADb4/]2EkW*$6479bLk4.RY6238lRJ\l&V#XK<Mqa0hu#A5cG'3A<=
%GgaHuOabK'90meT39"5j$e;QkF87$u05'iZ_i?IH8i0l=-1Z"HZqN!-C<$SX>/Kq>l(Y/E0](T$]O*'3L4G):gA#jG_.0q.?RL*"
%>Ym:s`Ni6q*P?_+@HH>W:ej7Op*$TmW&UB46h2u&br<'a*-3]Fk[?`/nHP^;FC;5>)5qN8:,:CB`?3\(]+78G7l]`0h1n4gn_25P
%U%?uaW:^?*H3aGZk.`QRgNP\8P^5IKBqGOkAbZeK[V4V6IN'$3>%Cf7YsY%op)Pac#*H5Q>,3.b44#N]#Rt(=[ek%I-4uEt&4K#b
%&=NsIh-77*V)r=AA;"o+n]iO,k>1NTJp0E(Z@!"j&r],0Ft7,_d,FrJ,9s3Xc\],A<1Ms5Q*]6=P0c"Z?oEkfYu;L7O[=9f4r(%B
%KQP(7TqFiRGSN4Cc#D<#.cLn$Xn=&+Xb^Xe"HL$[-;t5CU!r(i4bYP?XG)*ePX,[km=54`[V4WHdE!PR=ejUcJ`&F)\h3-f'!$8/
%7O8>(J[Sm>3p\aEr619K!/,C!is"q;r=it^E:dtn]!%g-Eb@aJN!9XHMQ,:/W2PIA*]9-SijcsXeoU2L;USV\G3F2R<=7oNY5Li9
%'!Sf;2Jj+X3)^%[UD5;P;)(gSN!9W]q9HH%Wju\sWLi;$ld=*F3`$Zg/]7;D3m!R3SO0Pi^[auV*Onp%oP@BsWfb.8FUE&i/Fr%a
%>ijGcF[=FHXcAC/%Hpt3qNs8M.ctgI4PO9lU36Kl\t4F#ms9\,2,q[odB^,K#YRB3eSY5j+XiY*,ePU*DOT05om2jWM*o^\)n-Q(
%P#m6^M^%aU_O[4=7"JW>Teh934mTS-G8=?BZaQ_6BAemDj>PNHrN_S2mX!`r#b1U&5t/QPh8msL7;%&[3*Q`"e1"dGToA#,QSssL
%P,=B)J&<t5JTRP=7QZ>0[S9uP0M@L)bL"X-g*r!.Q6G%)-besU%+dot6So2R)Ft)?A$fgWalmmVp#W2bk\)(Z.#cQ6+c?4M*Bs[g
%/Id$7BV]GIL1%o9U0@V<O@)GJMB$-\77mSS:U59R*-lDKKB)UnkX.QA5`YNqV^b<Sl]=5Ml)_6&(FaGHW&Z,>V6-M^[T.@(?)bU3
%Ofq%@-rmXRHl#3bC):T&rF'lLVh,Ym-4=1H9^n9![0NJj'I:DfZB;Y4>;PG27?eiRC$0d#B.V1:Z'<0<($=2H=V>Q_KM;klBJ/Kt
%khMgMC4B&4mhVYadKWQB`?_iXRh+2U]RdT88)'L@MP$sJOHR.$%-;&-V\DNgMMJ4>*)r[t+:"OROE)*+GiT?rLBrbRXaD<$TJ"lO
%i;!N;e,LIRK-qXd@2tte]iCN)nZu`bP4YG\%[dSnjZVo_QH=GDP/X)V!s?7!W)/(DmM)\b.7;&6TkG:N#g)Qc,f;-Ui#eDq1f.q[
%f%=GMgf@,d1ME%5(k,9jAJUJf!7;r2Xf,Y!!7C=uQSo%jfGk3ml_#.^5f?^;`m</16I-(OcJ;o.c>\XCIs@,$emgP]"b1KcU\3YG
%SQfGKqn!AgB"HUF%o7G'dsTc3Nurgld`2mun?ds!O&,[C]j\4gTKP:1\b2`H^G3X7:QI.0[IM.m!8;nR1(Z\Jk!BVDr52/nGHY)F
%It+YG^!J96i]0q]*:W(OF'pK0'Q,YtN$r"p.4"YH'ZOg^n?!UagEtZqOJ-VUl3NPDkd*4AB1.UOcBX;beUu=.[O;>fiM.,Vh.>A=
%:n\etXn^-ucXQeViP@Ds)<S<G&)dRcH&nNO?FTZ5.Y6t['IS'9+QOF2b#CadI3<Bf.;B;fk`eeYh?&!].+2.]KCb-cKeXJoTTh'H
%;C?p,ad2W#70f0IKWJjaMWPZES(<!S7J#4KoGrM*VRe\UBgTTsK=KWV&-sSO+pNl2]d1nDa?:u"onpr\D<LNB`;,J^N:+#uDQHgG
%%2go2jtUl+69sn*@h:ff(Psb#oZh-Dl>).F+e'"n'@/[(FgQiH-"=LrFa/D7fNPOi)kIT2`*ihJ^UM:a0'Lu]PM@LW%>?MT-sSYC
%A+li52!R>Y#A+F9\+#-tn8[ITp$+7X+mH!@SIYjX@&'HdPPnT'SF-,0U/\Q3(J5PTL?(o6La!?b*Tm,:.*r@aD5FQjn\^Pf%Y4'2
%BpYX;cGUjk%8jd2B91?*`6JLpd?L$FHXdU8>0dX@).aDnH(uEmEn/gc:ljc]E<f%!VMfX"4q9/:lk?5j@RrP:HC\:bbFfeUn][6m
%-@CV9XDA&0/jdLCg+$i)j5b"VSZb=<mPB&@I&LKWEYj#)S,`(ElMUJ$J#*Z?rUN29a+&R7o)=%@hYlj%c_(46bK'XrJ,8`r%mU*f
%na!*NO2(V`lgGpFs7Cg6:JX3)q=NG1^OH"No\2TZrI5r'A.@D/qrt<aq;W"c!_4s=C]~>
%AI9_PrivateDataEnd
